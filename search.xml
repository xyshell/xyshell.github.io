<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>DCA Note</title>
    <url>/2020/06/11/DCA-note/</url>
    <content><![CDATA[<h1 id="docker-certified-associate-exam-preparation-guide-v13"><a class="markdownIt-Anchor" href="#docker-certified-associate-exam-preparation-guide-v13"></a> Docker Certified Associate Exam Preparation Guide (v1.3)</h1>
<h2 id="domain-1-orchestration-25-of-exam"><a class="markdownIt-Anchor" href="#domain-1-orchestration-25-of-exam"></a> Domain 1: Orchestration (25% of exam)</h2>
<h3 id="complete-the-setup-of-a-swarm-mode-cluster-with-managers-and-worker-nodes"><a class="markdownIt-Anchor" href="#complete-the-setup-of-a-swarm-mode-cluster-with-managers-and-worker-nodes"></a> <a href="https://docs.docker.com/engine/swarm/swarm-tutorial/create-swarm/">Complete the setup of a swarm mode cluster, with managers and worker nodes</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker swarm init</span><br><span class="line">$ docker swarm join-token manager / $ docker swarm join-token worker</span><br><span class="line">$ docker swarm <span class="built_in">join</span> --token &lt;token&gt; &lt;ip&gt;:&lt;port&gt;</span><br></pre></td></tr></table></figure>
<h3 id="describe-and-demonstrate-how-to-extend-the-instructions-to-run-individual-containers-into-running-services-under-swarm"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-extend-the-instructions-to-run-individual-containers-into-running-services-under-swarm"></a> <a href="https://docs.docker.com/engine/swarm/swarm-tutorial/deploy-service/">Describe and demonstrate how to extend the instructions to run individual containers into running services under swarm</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service create --replicas 1 --name &lt;service&gt; &lt;image&gt; &lt;cmd&gt;</span><br><span class="line">$ docker service <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>
<h3 id="describe-the-importance-of-quorum-in-a-swarm-cluster"><a class="markdownIt-Anchor" href="#describe-the-importance-of-quorum-in-a-swarm-cluster"></a> <a href="https://docs.docker.com/engine/swarm/raft/">Describe the importance of quorum in a swarm cluster.</a></h3>
<ul>
<li><a href="http://thesecretlivesofdata.com/raft/">Raft Consensus Algorithm</a> to make sure all the manager nodes in charge of managing and scheduling tasks in the cluster, are storing the same consistent state.</li>
<li>Having the same consistent state across the cluster means that in case of a failure, any Manager node can pick up the tasks and restore the services to a stable state.</li>
<li>Raft tolerates up to (N-1)/2 failures and requires a majority or quorum of (N/2)+1 members to agree on values proposed to the cluster.</li>
</ul>
<h3 id="describe-the-difference-between-running-a-container-and-running-a-service"><a class="markdownIt-Anchor" href="#describe-the-difference-between-running-a-container-and-running-a-service"></a> <a href="https://docs.docker.com/engine/swarm/how-swarm-mode-works/services/#services-tasks-and-containers">Describe the difference between running a container and running a service.</a></h3>
<p>Service -&gt; tasks - containers</p>
<h3 id="interpret-the-output-of-docker-inspect-commands"><a class="markdownIt-Anchor" href="#interpret-the-output-of-docker-inspect-commands"></a> <a href="https://docs.docker.com/engine/swarm/swarm-tutorial/inspect-service/">Interpret the output of “docker inspect” commands</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service|container|network|... inpsect --pretty &lt;name&gt;</span><br></pre></td></tr></table></figure>
<h3 id="convert-an-application-deployment-into-a-stack-file-using-a-yaml-compose-file-with-docker-stack-deploy"><a class="markdownIt-Anchor" href="#convert-an-application-deployment-into-a-stack-file-using-a-yaml-compose-file-with-docker-stack-deploy"></a> <a href="https://docs.docker.com/engine/swarm/stack-deploy/">Convert an application deployment into a stack file using a YAML compose file with “docker stack deploy”</a></h3>
<p>stack file is a YAML defining services, networks and volumes.</p>
<h3 id="manipulate-a-running-stack-of-services"><a class="markdownIt-Anchor" href="#manipulate-a-running-stack-of-services"></a> <a href="https://docs.docker.com/engine/reference/commandline/stack_services/#related-commands">Manipulate a running stack of services</a></h3>
<p><code>docker service scale</code>; <code>docker service update</code>; update config file, re-deploy by: <code>docker stack deploy -c &lt;stackfile&gt; &lt;stack&gt;</code></p>
<h3 id="describe-and-demonstrate-orchestration-activities"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-orchestration-activities"></a> <a href="https://docs.docker.com/get-started/orchestration/">Describe and demonstrate orchestration activities</a></h3>
<p>Tools to manage, scale, and maintain containerized applications are called orchestrators (e.x. Kubernetes and Docker Swarm)</p>
<h3 id="increase-number-of-replicas"><a class="markdownIt-Anchor" href="#increase-number-of-replicas"></a> <a href="https://docs.docker.com/engine/reference/commandline/service_scale/">Increase number of replicas</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service scale &lt;service&gt;=20</span><br></pre></td></tr></table></figure>
<h3 id="add-networks-publish-ports"><a class="markdownIt-Anchor" href="#add-networks-publish-ports"></a> <a href="https://docs.docker.com/network/">Add networks, publish ports</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker network create -d &lt;driver&gt; &lt;network&gt;</span><br><span class="line">$ docker container create --network &lt;network&gt; -p 8080:8080 &lt;container&gt;</span><br></pre></td></tr></table></figure>
<h3 id="mount-volumes"><a class="markdownIt-Anchor" href="#mount-volumes"></a> <a href="https://docs.docker.com/storage/volumes/">Mount volumes</a></h3>
<p>to attach volume to a container, either by --mount or -v:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker run -d --name &lt;container&gt; --mount <span class="built_in">source</span>=&lt;volume&gt;,target=/vol &lt;image&gt;</span><br><span class="line">$ docker run -d --name &lt;container&gt; -v &lt;volume&gt;:/vol &lt;image&gt;</span><br></pre></td></tr></table></figure>
<h3 id="describe-and-demonstrate-how-to-run-replicated-and-global-services"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-run-replicated-and-global-services"></a> <a href="https://docs.docker.com/engine/swarm/how-swarm-mode-works/services/#replicated-and-global-services">Describe and demonstrate how to run replicated and global services</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service create --replicas 5 &lt;service&gt; <span class="comment"># default replicated mode</span></span><br><span class="line">$ docker service create --mode global &lt;service&gt; <span class="comment"># global mode</span></span><br></pre></td></tr></table></figure>
<h3 id="apply-node-labels-to-demonstrate-placement-of-tasks"><a class="markdownIt-Anchor" href="#apply-node-labels-to-demonstrate-placement-of-tasks"></a> <a href="https://success.docker.com/article/using-contraints-and-labels-to-control-the-placement-of-containers">Apply node labels to demonstrate placement of tasks</a></h3>
<h3 id="describe-and-demonstrate-how-to-use-templates-with-docker-service-create"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-use-templates-with-docker-service-create"></a> <a href="https://docs.docker.com/engine/reference/commandline/service_create/#create-services-using-templates">Describe and demonstrate how to use templates with “docker service create”</a></h3>
<p>only <code>--hostname</code>,<code>--mount</code>,<code>--env</code> support templates, e.x.:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service create \</span><br><span class="line">    --name hosttempl \</span><br><span class="line">    --hostname=<span class="string">&quot;&#123;&#123;.Node.Hostname&#125;&#125;-&#123;&#123;.Node.ID&#125;&#125;-&#123;&#123;.Service.Name&#125;&#125;&quot;</span> \ <span class="comment"># default container ID</span></span><br><span class="line">    busybox top</span><br></pre></td></tr></table></figure>
<h3 id="identify-the-steps-needed-to-troubleshoot-a-service-not-deploying"><a class="markdownIt-Anchor" href="#identify-the-steps-needed-to-troubleshoot-a-service-not-deploying"></a> <a href="https://success.docker.com/article/swarm-troubleshooting-methodology">Identify the steps needed to troubleshoot a service not deploying</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service <span class="built_in">ls</span></span><br><span class="line">$ docker service ps &lt;service&gt;</span><br><span class="line">$ docker service inspect &lt;service&gt;</span><br><span class="line">$ docker inspect &lt;task&gt;</span><br><span class="line">$ docker inspect &lt;container&gt;</span><br><span class="line">$ docker logs &lt;container&gt;</span><br></pre></td></tr></table></figure>
<h3 id="describe-how-a-dockerized-application-communicates-with-legacy-systems"><a class="markdownIt-Anchor" href="#describe-how-a-dockerized-application-communicates-with-legacy-systems"></a> <a href="https://docs.docker.com/config/containers/container-networking/">Describe how a Dockerized application communicates with legacy systems</a></h3>
<p>use a bridge, an overlay, a macvlan network, or a custom network plugin.</p>
<h3 id="describe-how-to-deploy-containerized-workloads-as-kubernetes-pods-and-deployments"><a class="markdownIt-Anchor" href="#describe-how-to-deploy-containerized-workloads-as-kubernetes-pods-and-deployments"></a> <a href="https://docs.docker.com/get-started/kube-deploy/">Describe how to deploy containerized workloads as Kubernetes pods and deployments</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl apply -f bb.yaml</span><br><span class="line">$ kubectl get pods</span><br><span class="line">$ kubectl get deploy</span><br><span class="line">$ kubectl edit deploy/mysite <span class="comment"># edit existing objects, automatic update</span></span><br><span class="line">$ kubectl scale --replicas=2 deploy/mysite <span class="comment"># rescale</span></span><br><span class="line">$ kubectl delete -f bb.yaml / kubectl delete deploy mysite</span><br></pre></td></tr></table></figure>
<h3 id="describe-how-to-provide-configuration-to-kubernetes-pods-using-configmaps-and-secrets"><a class="markdownIt-Anchor" href="#describe-how-to-provide-configuration-to-kubernetes-pods-using-configmaps-and-secrets"></a> <a href="https://opensource.com/article/19/6/introduction-kubernetes-secrets-and-configmaps">Describe how to provide configuration to Kubernetes pods using configMaps and secrets</a></h3>
<ol>
<li>Secret:</li>
</ol>
<p>create the YAML file for the Secret, save as mysql-secret.yaml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mariadb-root-password</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">S3ViZXJuZXRlc1JvY2tzIQ==</span></span><br></pre></td></tr></table></figure>
<p>create the Secret in Kubernetes:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl apply -f mysql-secret.yaml</span><br></pre></td></tr></table></figure>
<p>view the newly created Secret:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl describe secret mariadb-root-password</span><br></pre></td></tr></table></figure>
<p>view and edit the Secret:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl edit secret &lt;secretname&gt;</span><br></pre></td></tr></table></figure>
<p>could also create the secret by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl create secret generic mariadb-user-creds \</span><br><span class="line">      --from-literal=MYSQL_USER=kubeuser\</span><br><span class="line">      --from-literal=MYSQL_PASSWORD=kube-still-rocks</span><br></pre></td></tr></table></figure>
<p>validate secrets were created and stored correctly:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Get the username</span></span><br><span class="line">$ kubectl get secret mariadb-user-creds -o jsonpath=<span class="string">&#x27;&#123;.data.MYSQL_USER&#125;&#x27;</span> | <span class="built_in">base64</span> --decode -</span><br><span class="line">kubeuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># Get the password</span></span><br><span class="line">$ kubectl get secret mariadb-user-creds -o jsonpath=<span class="string">&#x27;&#123;.data.MYSQL_PASSWORD&#125;&#x27;</span> | <span class="built_in">base64</span> --decode -</span><br><span class="line">kube-still-rocks</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>ConfigMap</li>
</ol>
<p>create a file named max_allowed_packet.cnf:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">max_allowed_packet = 64M</span><br></pre></td></tr></table></figure>
<p>create configmap by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl create configmap mariadb-config --from-file=max_allowed_packet.cnf <span class="comment"># could add multiple --from-file=&lt;filename&gt;</span></span><br><span class="line">$ kubectl create configmap mariadb-config --from-file=max-packet=max_allowed_packet.cnf <span class="comment"># set max-packet as key rather than the file name</span></span><br><span class="line">configmap/mariadb-config created</span><br></pre></td></tr></table></figure>
<p>Firstvalidate that the ConfigMap was created:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl get configmap mariadb-config</span><br></pre></td></tr></table></figure>
<p>viewed with the kubectl describe command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl describe cm mariadb-config</span><br></pre></td></tr></table></figure>
<p>edit configmap mariadb-config’s value:(in development)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl edit configmap mariadb-config</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>Using Secrets and ConfigMaps</li>
</ol>
<p>Create a file named mariadb-deployment.yaml:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mariadb</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mariadb-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">mariadb</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">mariadb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mariadb</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">docker.io/mariadb:10.4</span></span><br><span class="line">        <span class="comment">#   env:</span></span><br><span class="line">        <span class="comment">#     - name: MYSQL_ROOT_PASSWORD</span></span><br><span class="line">        <span class="comment">#     valueFrom:</span></span><br><span class="line">        <span class="comment">#         secretKeyRef:</span></span><br><span class="line">        <span class="comment">#             name: mariadb-root-password</span></span><br><span class="line">        <span class="comment">#             key: password</span></span><br><span class="line">        <span class="comment">#   envFrom:</span></span><br><span class="line">        <span class="comment">#   - secretRef:</span></span><br><span class="line">        <span class="comment">#     name: mariadb-user-creds</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3306</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">mariadb-volume-1</span></span><br><span class="line">            <span class="comment"># - mountPath: /etc/mysql/conf.d</span></span><br><span class="line">            <span class="comment">#   name: mariadb-config-volume</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">          <span class="attr">name:</span> <span class="string">mariadb-volume-1</span></span><br><span class="line">        <span class="comment"># - configMap:</span></span><br><span class="line">        <span class="comment">#   name: mariadb-config</span></span><br><span class="line">        <span class="comment">#   items:</span></span><br><span class="line">        <span class="comment">#     - key: max_allowed_packet.cnf</span></span><br><span class="line">        <span class="comment">#       path: max_allowed_packet.cnf</span></span><br><span class="line">        <span class="comment">#   name: mariadb-config-volume</span></span><br></pre></td></tr></table></figure>
<p>add the Secrets to the Deployment as environment variables, same for ConfigMaps by using configMapRef instead of secretKeyRef:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">env:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">    <span class="attr">valueFrom:</span></span><br><span class="line">      <span class="attr">secretKeyRef:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">mariadb-root-password</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">password</span></span><br></pre></td></tr></table></figure>
<p>or using envFrom:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">envFrom:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">secretRef:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">mariadb-user-creds</span></span><br></pre></td></tr></table></figure>
<p>create a new MariaDB instance from the YAML file:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">kubectl</span> <span class="string">create</span> <span class="string">-f</span> <span class="string">mariadb-deployment.yaml</span></span><br><span class="line"><span class="string">deployment.apps/mariadb-deployment</span> <span class="string">created</span></span><br></pre></td></tr></table></figure>
<p>view the running MariaDB pod:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl get pods</span><br></pre></td></tr></table></figure>
<p>kubectl exec to the Pod, validate Secrets and ConfigMaps are in use:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl <span class="built_in">exec</span> -it mariadb-deployment-5465c6655c-7jfqm <span class="built_in">env</span> |grep MYSQL</span><br><span class="line">MYSQL_PASSWORD=kube-still-rocks</span><br><span class="line">MYSQL_USER=kubeuser</span><br><span class="line">MYSQL_ROOT_PASSWORD=KubernetesRocks!</span><br></pre></td></tr></table></figure>
<p>check max_allowed_packet.cnf file was created in /etc/mysql/conf.d:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl <span class="built_in">exec</span> -it mariadb-deployment-5465c6655c-7jfqm <span class="built_in">ls</span> /etc/mysql/conf.d</span><br><span class="line">max_allowed_packet.cnf</span><br><span class="line"></span><br><span class="line">$ kubectl <span class="built_in">exec</span> -it mariadb-deployment-5465c6655c-7jfqm <span class="built_in">cat</span> /etc/mysql/conf.d/max_allowed_packet.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">max_allowed_packet = 32M</span><br></pre></td></tr></table></figure>
<h2 id="domain-2-image-creation-management-and-registry-20-of-exam"><a class="markdownIt-Anchor" href="#domain-2-image-creation-management-and-registry-20-of-exam"></a> Domain 2: Image Creation, Management, and Registry (20% of exam)</h2>
<h3 id="describe-the-use-of-dockerfile"><a class="markdownIt-Anchor" href="#describe-the-use-of-dockerfile"></a> <a href="https://docs.docker.com/engine/reference/builder/">Describe the use of Dockerfile</a></h3>
<h3 id="describe-options-such-as-add-copy-volumes-expose-entry-point"><a class="markdownIt-Anchor" href="#describe-options-such-as-add-copy-volumes-expose-entry-point"></a> <a href="https://docs.docker.com/engine/reference/builder/#from">Describe options, such as add, copy, volumes, expose, entry point</a></h3>
<h3 id="identify-and-display-the-main-parts-of-a-dockerfile"><a class="markdownIt-Anchor" href="#identify-and-display-the-main-parts-of-a-dockerfile"></a> <a href="https://docs.docker.com/engine/reference/builder/#dockerfile-examples">Identify and display the main parts of a Dockerfile</a></h3>
<h3 id="describe-and-demonstrate-how-to-create-an-efficient-image-via-a-dockerfile"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-create-an-efficient-image-via-a-dockerfile"></a> <a href="https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/">Describe and demonstrate how to create an efficient image via a Dockerfile</a></h3>
<h3 id="describe-and-demonstrate-how-to-use-cli-commands-to-manage-images-such-as-list-delete-prune-rmi"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-use-cli-commands-to-manage-images-such-as-list-delete-prune-rmi"></a> <a href="https://docs.docker.com/engine/reference/commandline/image/#usage">Describe and demonstrate how to use CLI commands to manage images, such as list, delete, prune, rmi</a></h3>
<h3 id="describe-and-demonstrate-how-to-inspect-images-and-report-specific-attributes-using-filter-and-format"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-inspect-images-and-report-specific-attributes-using-filter-and-format"></a> <a href="https://docs.docker.com/engine/reference/commandline/images/#filtering">Describe and demonstrate how to inspect images and report specific attributes using filter and format</a></h3>
<p>filter:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker images --filter <span class="string">&quot;dangling=true&quot;</span></span><br><span class="line">$ docker images --filter <span class="string">&quot;label=com.example.version&quot;</span></span><br><span class="line">$ docker images --filter <span class="string">&quot;label=com.example.version=1.0&quot;</span></span><br><span class="line">$ docker images --filter <span class="string">&quot;before=image1&quot;</span></span><br><span class="line">$ docker images --filter <span class="string">&quot;since=image3&quot;</span></span><br><span class="line">$ docker images --filter=reference=<span class="string">&#x27;busy*:*libc&#x27;</span></span><br><span class="line">$ docker images --filter=reference=<span class="string">&#x27;busy*:uclibc&#x27;</span> --filter=reference=<span class="string">&#x27;busy*:glibc&#x27;</span></span><br></pre></td></tr></table></figure>
<p>format:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker images --format <span class="string">&quot;&#123;&#123;.ID&#125;&#125;: &#123;&#123;.Repository&#125;&#125;&quot;</span></span><br><span class="line">$ docker images --format <span class="string">&quot;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Repository&#125;&#125;\t&#123;&#123;.Tag&#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="describe-and-demonstrate-how-to-tag-an-image"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-tag-an-image"></a> <a href="https://docs.docker.com/engine/reference/commandline/tag/">Describe and demonstrate how to tag an image.</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker tag &lt;image-name/image-id&gt; fedora/httpd:version1.0 </span><br></pre></td></tr></table></figure>
<h3 id="describe-and-demonstrate-how-to-apply-a-file-to-create-a-docker-image"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-apply-a-file-to-create-a-docker-image"></a> <a href="https://docs.docker.com/engine/reference/commandline/image_load/">Describe and demonstrate how to apply a file to create a Docker image</a></h3>
<h3 id="describe-and-demonstrate-how-to-display-layers-of-a-docker-image"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-display-layers-of-a-docker-image"></a> <a href="https://docs.docker.com/engine/reference/commandline/image_inspect/">Describe and demonstrate how to display layers of a Docker image</a></h3>
<h3 id="describe-and-demonstrate-how-to-modify-an-image-to-a-single-layer"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-modify-an-image-to-a-single-layer"></a> <a href="https://stackoverflow.com/questions/39695031/how-make-docker-layer-to-single-layer">Describe and demonstrate how to modify an image to a single layer</a></h3>
<h3 id="describe-and-demonstrate-registry-functions"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-registry-functions"></a> <a href="https://docs.docker.com/registry/">Describe and demonstrate registry functions</a></h3>
<h3 id="deploy-a-registry"><a class="markdownIt-Anchor" href="#deploy-a-registry"></a> <a href="https://docs.docker.com/registry/deploying/">Deploy a registry</a></h3>
<p>deploy by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker run -d \ </span><br><span class="line">  -e REGISTRY_HTTP_ADDR=0.0.0.0:5001 \ </span><br><span class="line">  -p 5001:5001 \ </span><br><span class="line">  --restart=always \ </span><br><span class="line">  --name registry \ </span><br><span class="line">  -v /mnt/registry:/var/lib/registry \ </span><br><span class="line">  registry:2</span><br></pre></td></tr></table></figure>
<p>stop and remove by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container stop registry &amp;&amp; docker container <span class="built_in">rm</span> -v registry</span><br></pre></td></tr></table></figure>
<h3 id="log-into-a-registry"><a class="markdownIt-Anchor" href="#log-into-a-registry"></a> <a href="https://docs.docker.com/engine/reference/commandline/login/">Log into a registry</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker login localhost:8080</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> ~/my_password.txt | docker login --username foo --password-stdin</span><br></pre></td></tr></table></figure>
<h3 id="utilize-search-in-a-registry"><a class="markdownIt-Anchor" href="#utilize-search-in-a-registry"></a> <a href="https://docs.docker.com/engine/reference/commandline/search/">Utilize search in a registry</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker search busybox</span><br><span class="line">$ docker search --filter is-official=<span class="literal">true</span> --filter stars=3 busybox</span><br><span class="line">$ docker search --format <span class="string">&quot;&#123;&#123;.Name&#125;&#125;: &#123;&#123;.StarCount&#125;&#125;&quot;</span> nginx</span><br><span class="line">$ docker search --format <span class="string">&quot;table &#123;&#123;.Name&#125;&#125;\t&#123;&#123;.IsAutomated&#125;&#125;\t&#123;&#123;.IsOfficial&#125;&#125;&quot;</span> nginx</span><br></pre></td></tr></table></figure>
<h3 id="push-an-image-to-a-registry"><a class="markdownIt-Anchor" href="#push-an-image-to-a-registry"></a> <a href="https://docs.docker.com/engine/reference/commandline/push/">Push an image to a registry</a></h3>
<p>commit a container to image:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker commit c16378f943fe rhel-httpd</span><br></pre></td></tr></table></figure>
<p>tag and push:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker tag rhel-httpd registry-host:5000/myadmin/rhel-httpd</span><br><span class="line">$ docker push registry-host:5000/myadmin/rhel-httpd</span><br></pre></td></tr></table></figure>
<h3 id="sign-an-image-in-a-registry"><a class="markdownIt-Anchor" href="#sign-an-image-in-a-registry"></a> <a href="https://docs.docker.com/engine/reference/commandline/trust_sign/">Sign an image in a registry</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker trust sign example/trust-demo:v2</span><br><span class="line">$ docker trust inspect --pretty example/trust-demo</span><br></pre></td></tr></table></figure>
<h3 id="pull"><a class="markdownIt-Anchor" href="#pull"></a> <a href="ttps://docs.docker.com/engine/reference/commandline/pull/">Pull</a> and <a href="https://docs.docker.com/registry/spec/api/#deleting-an-image">delete</a> images from a registry</h3>
<p>An image may be deleted from the registry via its “name” and “reference”:</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line">DELETE /v2/&lt;name&gt;/manifests/&lt;reference&gt;</span><br></pre></td></tr></table></figure>
<h2 id="domain-3-installation-and-configuration-15-of-exam"><a class="markdownIt-Anchor" href="#domain-3-installation-and-configuration-15-of-exam"></a> Domain 3: Installation and Configuration (15% of exam)</h2>
<h3 id="describe-sizing-requirements-for-installation"><a class="markdownIt-Anchor" href="#describe-sizing-requirements-for-installation"></a> <a href="https://docs.docker.com/datacenter/ucp/2.2/guides/admin/install/system-requirements/#hardware-and-software-requirements">Describe sizing requirements for installation</a></h3>
<p>the following minimum requirements for Docker UCP 2.2.4 on Linux:<br />
• UCP Manager nodes running DTR: 8GB of RAM with 3GB of disk space<br />
• UCP Worker nodes: 4GB of RAM with 3GB of free disk space<br />
Recommended requirements are:<br />
• UCP Manager nodes running DTR: 8GB RAM, 4 vCPUs, and 100GB disk space<br />
• UCP Worker nodes: 4GB RAM 25-100GB of free disk space</p>
<h3 id="describe-and-demonstrate-the-setup-of-repo-selection-of-a-storage-driver-and-installation-of-the-docker-engine-on-multiple-platforms"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-the-setup-of-repo-selection-of-a-storage-driver-and-installation-of-the-docker-engine-on-multiple-platforms"></a> <a href="https://docs.docker.com/install/">Describe and demonstrate the setup of repo, selection of a storage driver, and installation of the Docker engine on multiple platforms</a></h3>
<h3 id="describe-and-demonstrate-configuration-of-logging-drivers-splunk-journald-etc"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-configuration-of-logging-drivers-splunk-journald-etc"></a> <a href="https://docs.docker.com/config/containers/logging/configure/">Describe and demonstrate configuration of logging drivers (splunk, journald, etc.)</a></h3>
<h3 id="describe-and-demonstrate-how-to-set-up-swarm-configure-managers-add-nodes-and-setup-the-backup-schedule"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-set-up-swarm-configure-managers-add-nodes-and-setup-the-backup-schedule"></a> <a href="https://docs.docker.com/engine/swarm/admin_guide/">Describe and demonstrate how to set up swarm, configure managers, add nodes, and setup the backup schedule</a></h3>
<p>A Swarm backup is a copy of all the files in directory <code>/var/lib/docker/swarm</code>:</p>
<ol>
<li>Stop Docker on the Swarm manager node you are performing the backup from(not a good idea to perform the backup on the leader manager). This will stop all UCP containers on the node. If UCP is configured for HA, the other managers will make sure the control plane remains available.</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ service docker stop</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>Backup the Swarm config, e.x.:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tar -czvf swarm.bkp /var/lib/docker/swarm/</span><br><span class="line">tar: Removing leading `/<span class="string">&#x27; from member names</span></span><br><span class="line"><span class="string">/var/lib/docker/swarm/</span></span><br><span class="line"><span class="string">/var/lib/docker/swarm/docker-state.json</span></span><br><span class="line"><span class="string">/var/lib/docker/swarm/state.json</span></span><br><span class="line"><span class="string">&lt;Snip&gt;</span></span><br></pre></td></tr></table></figure>
<ol start="3">
<li>Verify that the backup file exists. rotate, and store the backup file off-site according to your corporate backup policies.</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">ls</span> -l</span><br><span class="line">-rw-r--r-- 1 root root 450727 Jan 29 14:06 swarm.bkp</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>Restart Docker.</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ service docker restart</span><br></pre></td></tr></table></figure>
<p>recover Swarm from a backup:</p>
<ol>
<li>stop docker:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ service docker stop</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>Delete any existing Swarm configuration:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">rm</span> -r /var/lib/docker/swarm</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>Restore the Swarm configuration from backup:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ tar -zxvf swarm.bkp -C /</span><br></pre></td></tr></table></figure>
<ol start="4">
<li>Initialize a new Swarm cluster:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker swarm init --force-new-cluster</span><br><span class="line">Swarm initialized: current node (jhsg...3l9h) is now a manager.</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>check by:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker network <span class="built_in">ls</span></span><br><span class="line">$ docker service <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>
<ol start="6">
<li>Add new manager and worker nodes to the Swarm, and take a fresh backup.</li>
</ol>
<h3 id="describe-and-demonstrate-how-to-create-and-manage-user-and-teams"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-create-and-manage-user-and-teams"></a> <a href="https://success.docker.com/article/rbac-example-overview">Describe and demonstrate how to create and manage user and teams</a></h3>
<p>RBAC via grant:</p>
<ul>
<li>Subject</li>
<li>Role</li>
<li>Collection</li>
</ul>
<h3 id="describe-and-demonstrate-how-to-configure-the-docker-daemon-to-start-on-boot"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-configure-the-docker-daemon-to-start-on-boot"></a> <a href="https://docs.docker.com/engine/install/linux-postinstall/#configure-docker-to-start-on-boot">Describe and demonstrate how to configure the Docker daemon to start on boot</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure>
<p>To disable this behavior, use disable instead:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> systemctl <span class="built_in">disable</span> docker</span><br></pre></td></tr></table></figure>
<h3 id="describe-and-demonstrate-how-to-use-certificate-based-client-server-authentication-to-ensure-a-docker-daemon-has-the-rights-to-access-images-on-a-registry"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-use-certificate-based-client-server-authentication-to-ensure-a-docker-daemon-has-the-rights-to-access-images-on-a-registry"></a> <a href="https://docs.docker.com/engine/security/certificates/">Describe and demonstrate how to use certificate-based client-server authentication to ensure a Docker daemon has the rights to access images on a registry</a></h3>
<h3 id="describe-the-use-of-namespaces-cgroups-and-certificate-configuration"><a class="markdownIt-Anchor" href="#describe-the-use-of-namespaces-cgroups-and-certificate-configuration"></a> <a href="https://docs.docker.com/get-started/overview/#the-underlying-technology">Describe the use of namespaces, cgroups, and certificate configuration</a></h3>
<h3 id="describe-and-interpret-errors-to-troubleshoot-installation-issues-without-assistance"><a class="markdownIt-Anchor" href="#describe-and-interpret-errors-to-troubleshoot-installation-issues-without-assistance"></a> <a href="https://docs.docker.com/config/daemon/#troubleshoot-the-daemon">Describe and interpret errors to troubleshoot installation issues without assistance</a></h3>
<h3 id="describe-and-demonstrate-the-steps-to-deploy-the-docker-engine-ucp-and-dtr-on-aws-and-on-premises-in-an-ha-configuration-docker-dtr-ucp-docker-on-aws-and-possibly-on-premises-ha-config"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-the-steps-to-deploy-the-docker-engine-ucp-and-dtr-on-aws-and-on-premises-in-an-ha-configuration-docker-dtr-ucp-docker-on-aws-and-possibly-on-premises-ha-config"></a> Describe and demonstrate the steps to deploy the Docker engine, UCP, and DTR on AWS and on-premises in an HA configuration. <a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/">Docker,</a> <a href="https://docs.docker.com/datacenter/dtr/2.3/guides/admin/install/">DTR,</a> <a href="https://docs.docker.com/ee/ucp/">UCP,</a>, <a href="https://docs.docker.com/docker-for-aws/">Docker on AWS</a> and possibly <a href="https://docs.docker.com/engine/swarm/admin_guide/#add-manager-nodes-for-fault-tolerance">on premises HA config</a></h3>
<ol>
<li>DTR:</li>
</ol>
<p>If possible, you should run your DTR instances on dedicated nodes. You definitely<br />
shouldn’t run user workloads on your production DTR nodes.</p>
<p>As with UCP, you should run an odd number of DTR instances. 3 or 5 is best for fault<br />
tolerance. A recommended configuration for a production environment might be:</p>
<ul>
<li>3 dedicated UCP managers</li>
<li>3 dedicated DTR instances</li>
<li>However many worker nodes your application requirements demand</li>
</ul>
<p>Install DTR:</p>
<ol>
<li>Log on to the UCP web UI and click Admin &gt; Admin Settings &gt; Docker<br />
Trusted Registry.</li>
<li>Fill out the DTR configuration form.</li>
</ol>
<ul>
<li>DTR EXTERNAL URL: Set this to the URL of your external load balancer.</li>
<li>UCP NODE: Select the name of the node you wish to install DTR on.</li>
<li>Disable TLS Verification For UCP: Check this box if you’re using<br />
self-signed certificates.</li>
</ul>
<ol start="3">
<li>Copy the long command at the bottom of the form.</li>
<li>Paste the command into any UCP manager node.<br />
The command includes the --ucp-node flag telling UCP which node to<br />
perform the install on.<br />
The following is an example DTR install command that matches the configuration<br />
in Figure 16.10. It assumes that you already have a load balancer<br />
configured at <a href="http://dtr.mydns.com">dtr.mydns.com</a></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker run -it --<span class="built_in">rm</span> docker/dtr install \</span><br><span class="line">--dtr-external-url dtr.mydns.com \</span><br><span class="line">--ucp-node dtr1 \</span><br><span class="line">--ucp-url https://34.252.195.122 \</span><br><span class="line">--ucp-username admin --ucp-insecure-tls</span><br></pre></td></tr></table></figure>
<ol start="5">
<li>Once the installation is complete, point your web browser to your load<br />
balancer. You will be automatically logged in to DTR.</li>
</ol>
<p>Configure DTR for high availability:</p>
<ol>
<li>Log on to the DTR console and navigate to Settings.</li>
<li>Select the Storage tab and configure the shared storage backend.</li>
</ol>
<p>DTR is now configured with a shared storage backend and ready to have additional<br />
replicas.</p>
<ol>
<li>Run the following command from a manager node in the UCP cluster.</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker run -it --<span class="built_in">rm</span> \</span><br><span class="line">docker/dtr:2.4.1 <span class="built_in">join</span> \</span><br><span class="line">--ucp-node dtr2 \</span><br><span class="line">--existing-replica-id 47f20fb864cf \</span><br><span class="line">--ucp-insecure-tls</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>Enter the UCP URL and port, as well as admin credentials when prompted.</li>
</ol>
<h3 id="describe-and-demonstrate-how-to-configure-backups-for-ucp-and-dtr"><a class="markdownIt-Anchor" href="#describe-and-demonstrate-how-to-configure-backups-for-ucp-and-dtr"></a> Describe and demonstrate how to configure backups for <a href="https://success.docker.com/article/backup-restore-best-practices">UCP and DTR</a></h3>
<p>You can run the backup from any UCP manager node in the cluster, and you only<br />
need to run the operation on one node (UCP replicates its configuration to all<br />
manager nodes, so backing up from multiple nodes is not required).</p>
<p>Backing up UCP will stop all UCP containers on the manager that you’re executing<br />
the operation on. With this in mind, you should be running a highly available UCP<br />
cluster, and you should run the operation at a quiet time for the business.</p>
<p>backup UCP:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container run --log-driver none --<span class="built_in">rm</span> -i --name ucp \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">docker/ucp:2.2.5 backup --interactive \</span><br><span class="line">--passphrase <span class="string">&quot;Password123&quot;</span> &gt; ucp.bkp</span><br></pre></td></tr></table></figure>
<p>recover UCP:</p>
<ol>
<li>Remove any existing, and potentially corrupted, UCP installations:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container run --<span class="built_in">rm</span> -it --name ucp \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">docker/ucp:2.2.5 uninstall-ucp --interactive</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>Restore UCP from the backup:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container run --<span class="built_in">rm</span> -i --name ucp \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock \</span><br><span class="line">docker/ucp:2.2.5 restore --passphrase <span class="string">&quot;Password123&quot;</span> &lt; ucp.bkp</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>Log on to the UCP web UI and ensure that the user created earlier is still present<br />
(or any other UCP objects that previously existed in your environment).</li>
</ol>
<p>Backup DTR:<br />
As with UCP, DTR has a native backup command that is part of the Docker image<br />
that was used to install the DTR. This native backup command will backup the DTR<br />
configuration that is stored in a set of named volumes, and includes:</p>
<ul>
<li>DTR configuration</li>
<li>Repository metadata</li>
<li>Notary data</li>
<li>Certificates</li>
</ul>
<p>Images are not backed up as part of a native DTR backup. It is expected that<br />
images are stored in a highly available storage backend that has its own independent<br />
backup schedule using non-Docker tools.</p>
<p>Run the following command from a UCP manager node to perform a DTR backup:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">read</span> -sp <span class="string">&#x27;ucp password: &#x27;</span> UCP_PASSWORD; \</span><br><span class="line">docker run --log-driver none -i --<span class="built_in">rm</span> \</span><br><span class="line">--<span class="built_in">env</span> UCP_PASSWORD=<span class="variable">$UCP_PASSWORD</span> \</span><br><span class="line">docker/dtr:2.4.1 backup \</span><br><span class="line">--ucp-insecure-tls \</span><br><span class="line">--ucp-username admin \</span><br><span class="line">&gt; ucp.bkp</span><br></pre></td></tr></table></figure>
<p>Recover DTR from backups:</p>
<p>Restoring DTR from backups should be a last resort, and only attempted when the<br />
majority of replicas are down and the cluster cannot be recovered any other way.<br />
If you have lost a single replica and the majority are still up, you should add a new<br />
replica using the <code>dtr join</code> command.</p>
<p>restore from backup, the workflow is like this:</p>
<ol>
<li>Stop and delete DTR on the node (might already be stopped)</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker run -it --<span class="built_in">rm</span> \</span><br><span class="line">docker/dtr:2.4.1 destroy \</span><br><span class="line">--ucp-insecure-tls</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>Restore images to the shared storage backend (might not be required)</li>
<li>Restore DTR</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">read</span> -sp <span class="string">&#x27;ucp password: &#x27;</span> UCP_PASSWORD; \</span><br><span class="line">docker run -i --<span class="built_in">rm</span> \</span><br><span class="line">--<span class="built_in">env</span> UCP_PASSWORD=<span class="variable">$UCP_PASSWORD</span> \</span><br><span class="line">docker/dtr:2.4.1 restore \</span><br><span class="line">--ucp-url &lt;ENTER_YOUR_ucp-url&gt; \</span><br><span class="line">--ucp-node &lt;ENTER_DTR_NODE_hostname&gt; \</span><br><span class="line">--ucp-insecure-tls \</span><br><span class="line">--ucp-username admin \</span><br><span class="line">&lt; ucp.bkp</span><br></pre></td></tr></table></figure>
<h2 id="domain-4-networking-15-of-exam"><a class="markdownIt-Anchor" href="#domain-4-networking-15-of-exam"></a> Domain 4: Networking (15% of exam)</h2>
<h3 id="create-a-docker-bridge-network-for-a-developer-to-use-for-their-containers"><a class="markdownIt-Anchor" href="#create-a-docker-bridge-network-for-a-developer-to-use-for-their-containers"></a> <a href="https://docs.docker.com/network/network-tutorial-standalone/">Create a Docker bridge network for a developer to use for their containers</a></h3>
<h3 id="troubleshoot-container-and-engine-logs-to-understand-a-connectivity-issue-between"><a class="markdownIt-Anchor" href="#troubleshoot-container-and-engine-logs-to-understand-a-connectivity-issue-between"></a> [Troubleshoot container and engine logs to understand a connectivity issue between</h3>
<p>containers](<a href="https://success.docker.com/article/troubleshooting-container-networking">https://success.docker.com/article/troubleshooting-container-networking</a>)</p>
<h3 id="publish-a-port-so-that-an-application-is-accessible-externally"><a class="markdownIt-Anchor" href="#publish-a-port-so-that-an-application-is-accessible-externally"></a> <a href="https://github.com/wsargent/docker-cheat-sheet#exposing-ports">Publish a port so that an application is accessible externally</a></h3>
<h3 id="identify-which-ip-and-port-a-container-is-externally-accessible-on"><a class="markdownIt-Anchor" href="#identify-which-ip-and-port-a-container-is-externally-accessible-on"></a> <a href="https://docs.docker.com/engine/reference/commandline/port/#examples">Identify which IP and port a container is externally accessible on</a></h3>
<h3 id="describe-the-different-types-and-use-cases-for-the-built-in-network-drivers"><a class="markdownIt-Anchor" href="#describe-the-different-types-and-use-cases-for-the-built-in-network-drivers"></a> <a href="https://blog.docker.com/2016/12/understanding-docker-networking-drivers-use-cases/">Describe the different types and use cases for the built-in network drivers</a></h3>
<h3 id="understand-the-container-network-model-and-how-it-interfaces-with-the-docker-engine"><a class="markdownIt-Anchor" href="#understand-the-container-network-model-and-how-it-interfaces-with-the-docker-engine"></a> [Understand the Container Network Model and how it interfaces with the Docker engine</h3>
<p>and network and IPAM drivers](<a href="https://success.docker.com/article/networking/">https://success.docker.com/article/networking/</a>)</p>
<h3 id="configure-docker-to-use-external-dns"><a class="markdownIt-Anchor" href="#configure-docker-to-use-external-dns"></a> <a href="https://gist.github.com/Evalle/7b21e0357c137875a03480428a7d6bf6">Configure Docker to use external DNS</a></h3>
<h3 id="use-docker-to-load-balance-httphttps-traffic-to-an-application-configure-l7-load"><a class="markdownIt-Anchor" href="#use-docker-to-load-balance-httphttps-traffic-to-an-application-configure-l7-load"></a> [Use Docker to load balance HTTP/HTTPs traffic to an application (Configure L7 load</h3>
<p>balancing with Docker EE)](<a href="https://docs.docker.com/datacenter/ucp/2.2/guides/admin/configure/use-a-load-balancer/#configuration-examples">https://docs.docker.com/datacenter/ucp/2.2/guides/admin/configure/use-a-load-balancer/#configuration-examples</a>)</p>
<h3 id="understand-and-describe-the-types-of-traffic-that-flow-between-the-docker-engine"><a class="markdownIt-Anchor" href="#understand-and-describe-the-types-of-traffic-that-flow-between-the-docker-engine"></a> [Understand and describe the types of traffic that flow between the Docker engine,</h3>
<p>registry, and UCP controllers](<a href="https://success.docker.com/article/networking/">https://success.docker.com/article/networking/</a>)</p>
<h3 id="deploy-a-service-on-a-docker-overlay-network"><a class="markdownIt-Anchor" href="#deploy-a-service-on-a-docker-overlay-network"></a> <a href="https://docs.docker.com/network/overlay/">Deploy a service on a Docker overlay network</a></h3>
<ul>
<li>Describe the difference between “host” and “ingress” port publishing mode (<a href="https://docs.docker.com/engine/swarm/services/#publish-a-services-ports-directly-on-the-swarm-node">Host</a>, <a href="https://docs.docker.com/engine/swarm/ingress/">Ingress</a>)</li>
</ul>
<h2 id="domain-5-security-15-of-exam"><a class="markdownIt-Anchor" href="#domain-5-security-15-of-exam"></a> Domain 5: Security (15% of exam)</h2>
<h3 id="describe-the-process-of-signing-an-image"><a class="markdownIt-Anchor" href="#describe-the-process-of-signing-an-image"></a> <a href="https://docs.docker.com/engine/security/trust/content_trust/#push-trusted-content">Describe the process of signing an image</a></h3>
<h3 id="demonstrate-that-an-image-passes-a-security-scan"><a class="markdownIt-Anchor" href="#demonstrate-that-an-image-passes-a-security-scan"></a> <a href="https://docs.docker.com/datacenter/dtr/2.5/guides/admin/configure/set-up-vulnerability-scans/">Demonstrate that an image passes a security scan</a></h3>
<h3 id="enable-docker-content-trust"><a class="markdownIt-Anchor" href="#enable-docker-content-trust"></a> <a href="https://docs.docker.com/engine/security/trust/content_trust/">Enable Docker Content Trust</a></h3>
<h3 id="configure-rbac-in-ucp"><a class="markdownIt-Anchor" href="#configure-rbac-in-ucp"></a> <a href="https://docs.docker.com/datacenter/ucp/2.2/guides/access-control/">Configure RBAC in UCP</a></h3>
<h3 id="integrate-ucp-with-ldapad"><a class="markdownIt-Anchor" href="#integrate-ucp-with-ldapad"></a> <a href="https://docs.docker.com/datacenter/ucp/2.2/guides/admin/configure/external-auth/">Integrate UCP with LDAP/AD</a></h3>
<h3 id="demonstrate-creation-of-ucp-client-bundles"><a class="markdownIt-Anchor" href="#demonstrate-creation-of-ucp-client-bundles"></a> <a href="https://blog.docker.com/2017/09/get-familiar-docker-enterprise-edition-client-bundles/">Demonstrate creation of UCP client bundles</a></h3>
<h3 id="describe-default-engine-security"><a class="markdownIt-Anchor" href="#describe-default-engine-security"></a> <a href="https://docs.docker.com/engine/security/security/">Describe default engine security</a></h3>
<h3 id="describe-swarm-default-security"><a class="markdownIt-Anchor" href="#describe-swarm-default-security"></a> <a href="https://docs.docker.com/engine/swarm/how-swarm-mode-works/pki/">Describe swarm default security</a></h3>
<h3 id="describe-mtls"><a class="markdownIt-Anchor" href="#describe-mtls"></a> <a href="https://diogomonica.com/2017/01/11/hitless-tls-certificate-rotation-in-go/">Describe MTLS</a></h3>
<h3 id="identity-roles"><a class="markdownIt-Anchor" href="#identity-roles"></a> <a href="https://docs.docker.com/datacenter/ucp/2.2/guides/access-control/permission-levels/#roles">Identity roles</a></h3>
<h3 id="describe-the-difference-between-ucp-workers-and-managers"><a class="markdownIt-Anchor" href="#describe-the-difference-between-ucp-workers-and-managers"></a> <a href="https://docs.docker.com/datacenter/ucp/2.2/guides/architecture/">Describe the difference between UCP workers and managers</a></h3>
<ul>
<li>Describe process to use external certificates with UCP and DTR (<strong>UCP</strong> <a href="https://success.docker.com/article/how-do-i-provide-an-externally-generated-security-certificate-during-the-ucp-command-line-installation">from cli</a>, <a href="https://docs.docker.com/ee/ucp/admin/configure/use-your-own-tls-certificates/#configure-ucp-to-use-your-own-tls-certificates-and-keys">from GUI</a>, <a href="https://docs.docker.com/datacenter/ucp/3.0/reference/cli/dump-certs/">print the public certificates</a>), <a href="https://docs.docker.com/ee/dtr/admin/configure/use-your-own-tls-certificates/"><strong>DTR</strong></a>)</li>
</ul>
<h2 id="domain-6-storage-and-volumes-10-of-exam"><a class="markdownIt-Anchor" href="#domain-6-storage-and-volumes-10-of-exam"></a> Domain 6: Storage and Volumes (10% of exam)</h2>
<h3 id="state-which-graph-driver-should-be-used-on-which-os"><a class="markdownIt-Anchor" href="#state-which-graph-driver-should-be-used-on-which-os"></a> <a href="https://docs.docker.com/storage/storagedriver/select-storage-driver/">State which graph driver should be used on which OS</a></h3>
<h3 id="demonstrate-how-to-configure-devicemapper"><a class="markdownIt-Anchor" href="#demonstrate-how-to-configure-devicemapper"></a> <a href="https://docs.docker.com/storage/storagedriver/device-mapper-driver/#configure-docker-with-the-devicemapper-storage-driver">Demonstrate how to configure devicemapper</a></h3>
<h3 id="compare-object-storage-to-block-storage-and-explain-which-one-is-preferable-when"><a class="markdownIt-Anchor" href="#compare-object-storage-to-block-storage-and-explain-which-one-is-preferable-when"></a> [Compare object storage to block storage, and explain which one is preferable when</h3>
<p>available](<a href="https://rancher.com/block-object-file-storage-containers/">https://rancher.com/block-object-file-storage-containers/</a>)</p>
<h3 id="summarize-how-an-application-is-composed-of-layers-and-where-those-layers-reside-on"><a class="markdownIt-Anchor" href="#summarize-how-an-application-is-composed-of-layers-and-where-those-layers-reside-on"></a> [Summarize how an application is composed of layers and where those layers reside on</h3>
<p>the filesystem](<a href="https://docs.docker.com/storage/storagedriver/#images-and-layers">https://docs.docker.com/storage/storagedriver/#images-and-layers</a>)</p>
<h3 id="describe-how-volumes-are-used-with-docker-for-persistent-storage"><a class="markdownIt-Anchor" href="#describe-how-volumes-are-used-with-docker-for-persistent-storage"></a> <a href="https://docs.docker.com/storage/volumes/">Describe how volumes are used with Docker for persistent storage</a></h3>
<ul>
<li>Identify the steps you would take to clean up unused images on a filesystem, also on DTR.<br />
(<a href="https://docs.docker.com/engine/reference/commandline/image_prune/">image prune</a>, <a href="https://docs.docker.com/engine/reference/commandline/system_prune/">system prune</a> and <a href="https://docs.docker.com/ee/dtr/user/manage-images/delete-images/">from DTR</a>)</li>
</ul>
<h3 id="demonstrate-how-storage-can-be-used-across-cluster-nodes"><a class="markdownIt-Anchor" href="#demonstrate-how-storage-can-be-used-across-cluster-nodes"></a> <a href="https://docs.docker.com/engine/extend/legacy_plugins/#volume-plugins">Demonstrate how storage can be used across cluster nodes</a></h3>
]]></content>
      <tags>
        <tag>docker, DCA</tag>
      </tags>
  </entry>
  <entry>
    <title>Algo Note</title>
    <url>/2020/08/12/algo-note/</url>
    <content><![CDATA[<h1 id="merge-sort"><a class="markdownIt-Anchor" href="#merge-sort"></a> Merge Sort</h1>
<h2 id="explanation"><a class="markdownIt-Anchor" href="#explanation"></a> Explanation:</h2>
<ol>
<li>Wikipedia: <a href="https://en.wikipedia.org/wiki/Merge_sort">https://en.wikipedia.org/wiki/Merge_sort</a></li>
<li>Youtube: <a href="https://www.youtube.com/watch?time_continue=17&amp;v=KF2j-9iSf4Q&amp;feature=emb_logo">https://www.youtube.com/watch?time_continue=17&amp;v=KF2j-9iSf4Q&amp;feature=emb_logo</a></li>
</ol>
<p>Time complexity: O(nlogn)<br />
Space complexity: O(n)</p>
<h2 id="implementation"><a class="markdownIt-Anchor" href="#implementation"></a> Implementation:</h2>
<h3 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">merge</span>(<span class="params">arr1: <span class="built_in">list</span>, arr2: <span class="built_in">list</span></span>) -&gt; <span class="built_in">tuple</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Merge two arrays</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        arr1 (list): first array</span></span><br><span class="line"><span class="string">        arr2 (list): second array</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        tuple(int, list): number of swaps, sorted array</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    result = []</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    i, j = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    m, n = <span class="built_in">len</span>(arr1), <span class="built_in">len</span>(arr2)</span><br><span class="line">    <span class="keyword">while</span> i &lt; m <span class="keyword">and</span> j &lt; n:</span><br><span class="line">        <span class="keyword">if</span> arr1[i] &lt;= arr2[j]:</span><br><span class="line">            result.append(arr1[i])</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result.append(arr2[j])</span><br><span class="line">            count += m - i</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">    result += arr1[i:]</span><br><span class="line">    result += arr2[j:]</span><br><span class="line">    <span class="keyword">return</span> count, result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">msort</span>(<span class="params">arr: <span class="built_in">list</span></span>) -&gt; <span class="built_in">tuple</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Merge Sort Algorithm</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        arr (list): unsorted array</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        tuple(int, list): number of swaps, sorted array</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    n = <span class="built_in">len</span>(arr)</span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">1</span>:</span><br><span class="line">        mid = n // <span class="number">2</span></span><br><span class="line">        left_swaps, left_result = msort(arr[:mid])</span><br><span class="line">        right_swaps, right_result = msort(arr[mid:])</span><br><span class="line">        merge_swaps, result = merge(left_result, right_result)</span><br><span class="line">        <span class="keyword">return</span> left_swaps+right_swaps+merge_swaps, result</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>, arr</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> msort([<span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">8</span>]) == (<span class="number">5</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>])</span><br></pre></td></tr></table></figure>
<h1 id="lcslongest-common-subsequence-problem"><a class="markdownIt-Anchor" href="#lcslongest-common-subsequence-problem"></a> LCS(longest common subsequence) problem</h1>
<h2 id="explanation-2"><a class="markdownIt-Anchor" href="#explanation-2"></a> Explanation:</h2>
<ol>
<li>Wikipedia: <a href="https://en.wikipedia.org/wiki/Longest_common_subsequence_problem">https://en.wikipedia.org/wiki/Longest_common_subsequence_problem</a></li>
</ol>
<p>complexity: O(n × m)</p>
<h2 id="implementation-2"><a class="markdownIt-Anchor" href="#implementation-2"></a> Implementation</h2>
<h3 id="python-2"><a class="markdownIt-Anchor" href="#python-2"></a> Python</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">commonChild</span>(<span class="params">s1: <span class="built_in">str</span>, s2: <span class="built_in">str</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Find length of common child string</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        s1 (str): first string</span></span><br><span class="line"><span class="string">        s2 (str): second string</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        int: length of common child string</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    m = <span class="built_in">len</span>(s1)</span><br><span class="line">    n = <span class="built_in">len</span>(s2)</span><br><span class="line">    mat = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(m+<span class="number">1</span>)]</span><br><span class="line">    <span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, m+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">            i, j = r - <span class="number">1</span>, c - <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> s1[i] == s2[j]:</span><br><span class="line">                mat[r][c] = mat[r-<span class="number">1</span>][c-<span class="number">1</span>] + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                mat[r][c] = <span class="built_in">max</span>(mat[r-<span class="number">1</span>][c], mat[r][c-<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> mat[m][n]</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> commonChild(<span class="string">&quot;SHINCHAN&quot;</span>, <span class="string">&quot;NOHARAAA&quot;</span>) == <span class="number">3</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>algo</tag>
      </tags>
  </entry>
  <entry>
    <title>CFA Note</title>
    <url>/2024/08/22/cfa-note/</url>
    <content><![CDATA[<h1 id="cfa-level-3"><a class="markdownIt-Anchor" href="#cfa-level-3"></a> CFA Level 3</h1>
<h2 id="chapter-capital-market-expectations-5-10"><a class="markdownIt-Anchor" href="#chapter-capital-market-expectations-5-10"></a> Chapter: Capital Market Expectations (5-10%)</h2>
<h3 id="trend-rate-of-growth"><a class="markdownIt-Anchor" href="#trend-rate-of-growth"></a> Trend Rate of Growth</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">%</mi><mtext>Growth</mtext><mo>=</mo><mi mathvariant="normal">%</mi><mtext>labor input</mtext><mo>+</mo><mi mathvariant="normal">%</mi><mtext>capital per worker</mtext><mo>+</mo><mi mathvariant="normal">%</mi><mtext>total factor productivity</mtext></mrow><annotation encoding="application/x-tex">\%\text{Growth}= \%\text{labor input} + \%\text{capital per worker} + \%\text{total factor productivity}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord text"><span class="mord">Growth</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.94444em;vertical-align:-0.19444em;"></span><span class="mord">%</span><span class="mord text"><span class="mord">labor input</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.94444em;vertical-align:-0.19444em;"></span><span class="mord">%</span><span class="mord text"><span class="mord">capital per worker</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.94444em;vertical-align:-0.19444em;"></span><span class="mord">%</span><span class="mord text"><span class="mord">total factor productivity</span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li>Labor input: labor force (population, demographics) + labor participation (real wages, work/leisure decision, social factors)</li>
<li>capital per worker: increases labor productivity</li>
<li>total factor productivity: technological progress + changes in government policies</li>
</ul>
<h3 id="business-cycle-phases"><a class="markdownIt-Anchor" href="#business-cycle-phases"></a> Business Cycle Phases</h3>
<p>The business cycle can be subdivided into five phases:</p>
<h4 id="1-initial-recovery"><a class="markdownIt-Anchor" href="#1-initial-recovery"></a> 1. Initial Recovery</h4>
<ul>
<li>Duration of a few months.</li>
<li>Business confidence rising.</li>
<li>Government stimulus provided by low interest rates and/or budget deficits.</li>
<li>Decelerating inflation.</li>
<li>Large output gap.</li>
<li>Low or falling short-term interest rates.</li>
<li>Bond yields bottoming out.</li>
<li>Rising stock prices.</li>
<li>Cyclical, riskier assets such as small-cap stocks and high yield bonds doing well.</li>
</ul>
<h4 id="2-early-expansion"><a class="markdownIt-Anchor" href="#2-early-expansion"></a> 2. Early Expansion</h4>
<ul>
<li>Duration of a year to several years.</li>
<li>Increasing growth with low inflation.</li>
<li>Increasing confidence.</li>
<li>Rising short-term interest rates.</li>
<li>Output gap is narrowing.</li>
<li>Stable or rising bond yields.</li>
<li>Rising stock prices.</li>
</ul>
<h4 id="3-late-expansion"><a class="markdownIt-Anchor" href="#3-late-expansion"></a> 3. Late Expansion</h4>
<ul>
<li>High confidence and employment.</li>
<li>Output gap eliminated and economy at risk of overheating.</li>
<li>Increasing inflation.</li>
<li>Central bank limits the growth of the money supply.</li>
<li>Rising short-term interest rates.</li>
<li>Rising bond yields.</li>
<li>Rising/peaking stock prices with increased risk and volatility.</li>
</ul>
<h4 id="4-slowdown"><a class="markdownIt-Anchor" href="#4-slowdown"></a> 4. Slowdown</h4>
<ul>
<li>Duration of a few months to a year or longer.</li>
<li>Declining confidence.</li>
<li>Inflation still rising.</li>
<li>Short-term interest rates at a peak.</li>
<li>Bond yields peaking and possibly falling, resulting in rising bond prices.</li>
<li>Possible inverting yield curve.</li>
<li>Falling stock prices.</li>
</ul>
<h4 id="5-contraction"><a class="markdownIt-Anchor" href="#5-contraction"></a> 5. Contraction.</h4>
<ul>
<li>Duration of 12 to 18 months.</li>
<li>Declining confidence and profits.</li>
<li>Increase in unemployment and bankruptcies.</li>
<li>Inflation topping out.</li>
<li>Falling short-term interest rates.</li>
<li>Falling bond yields, rising prices.</li>
<li>Stock prices increasing during the latter stages, anticipating the end of the recession.</li>
</ul>
<h3 id="taylor-rule"><a class="markdownIt-Anchor" href="#taylor-rule"></a> Taylor rule</h3>
<p>central bank uses taylor rule to make monetary policy decisions, determined by the target interest rate using the neutral rate, expected GDP relative to its long-term trend, and expected inflation relative to its targeted amount. It can be formalized as follows:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>n</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub><mo>=</mo><msub><mi>r</mi><mrow><mi>n</mi><mi>e</mi><mi>u</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>l</mi></mrow></msub><mo>+</mo><msub><mi>i</mi><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>+</mo><munder><munder><mrow><mo stretchy="false">[</mo><mn>0.5</mn><mo stretchy="false">(</mo><msub><mtext>GDP</mtext><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>−</mo><msub><mtext>GDP</mtext><mrow><mi>t</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>d</mi></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><mn>0.5</mn><mo stretchy="false">(</mo><msub><mi>i</mi><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>−</mo><msub><mi>i</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><mo stretchy="true">⏟</mo></munder><mtext>adjustment</mtext></munder></mrow><annotation encoding="application/x-tex">n_{target} = r_{neutral} + i_{expected} + \underbrace{[0.5(\text{GDP}_{expected} - \text{GDP}_{trend}) + 0.5(i_{expected} - i_{target})]}_{\text{adjustment}}  
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9456279999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.506324em;vertical-align:-1.756324em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-1.379784em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">adjustment</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span class="svg-align" style="top:-2.065892em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">[</span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord">GDP</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord text"><span class="mord">GDP</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.934108em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.756324em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">n_{target}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = target nominal short-term interest rate</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mrow><mi>n</mi><mi>e</mi><mi>u</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>l</mi></mrow></msub></mrow><annotation encoding="application/x-tex">r_{neutral}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = neutral real short-term interest rate</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>GDP</mtext><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>e</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\text{GDP}_{expected}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord text"><span class="mord">GDP</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = expected GDP growth rate</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>GDP</mtext><mrow><mi>t</mi><mi>r</mi><mi>e</mi><mi>n</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\text{GDP}_{trend}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">GDP</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = long-term trend in the GDP growth rate</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>i</mi><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>e</mi><mi>d</mi></mrow></msub></mrow><annotation encoding="application/x-tex">i_{expected}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9456279999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = expected inflation rate</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>i</mi><mrow><mi>t</mi><mi>a</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">i_{target}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9456279999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = target inflation rate</li>
</ul>
<h3 id="macroeconomic-linkage"><a class="markdownIt-Anchor" href="#macroeconomic-linkage"></a> Macroeconomic linkage</h3>
<p>A country’s current account and capital account are measures of macroeconomic linkages</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>net exports</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mtext>net private saving</mtext><mo>+</mo><mtext>government surplus</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>X</mi><mo>−</mo><mi>M</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><mi>S</mi><mo>−</mo><mi>I</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>T</mi><mo>−</mo><mi>G</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\text{net exports} &amp;= \text{net private saving} + \text{government surplus} \\
X - M &amp;= (S - I) + (T - G)
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000000000000004em;vertical-align:-1.2500000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">net exports</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord text"><span class="mord">net private saving</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">government surplus</span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">G</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li>X = exports</li>
<li>M = imports</li>
<li>S = private savings</li>
<li>I = investment spending</li>
<li>T = tax</li>
<li>G = government spending</li>
</ul>
<h3 id="gk-model"><a class="markdownIt-Anchor" href="#gk-model"></a> GK Model</h3>
<p>GK Model, i.e. Grinold-Kroner model, states that the expected return of a stock is its dividend yield, plus the inflation rate, plus the real earnings growth rate, minus the change in stock outstanding, plus changes in the P/E ratio:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left right left" columnspacing="0em 1em 0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>E</mi><mo stretchy="false">(</mo><msub><mi>R</mi><mi>e</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≈</mo><mfrac><mi>D</mi><mi>P</mi></mfrac><mo>+</mo><munder><munder><mrow><mo stretchy="false">(</mo><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>E</mi><mo>−</mo><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>S</mi><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mtext>growth rate of eps</mtext></munder><mo>+</mo><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mfrac><mi>P</mi><mi>E</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≈</mo><munder><munder><mrow><mfrac><mi>D</mi><mi>P</mi></mfrac><mo>−</mo><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>S</mi></mrow><mo stretchy="true">⏟</mo></munder><mtext>income (cash flow) return</mtext></munder><mo>+</mo><munder><munder><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>E</mi></mrow><mo stretchy="true">⏟</mo></munder><mtext>nominal earnings growth</mtext></munder><mo>+</mo><munder><munder><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mfrac><mi>P</mi><mi>E</mi></mfrac></mrow><mo stretchy="true">⏟</mo></munder><mtext>repricing return</mtext></munder></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≈</mo><munder><munder><mrow><mfrac><mi>D</mi><mi>P</mi></mfrac><mo>+</mo><mi>g</mi></mrow><mo stretchy="true">⏟</mo></munder><mtext>constant growth model</mtext></munder><mo>+</mo><mi>i</mi><mo>−</mo><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>S</mi><mo>+</mo><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mfrac><mi>P</mi><mi>E</mi></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≈</mo><mfrac><mi>D</mi><mi>P</mi></mfrac><mo>+</mo><munder><munder><mrow><mi>g</mi><mo>+</mo><mi>i</mi></mrow><mo stretchy="true">⏟</mo></munder><mtext>Nominal GDP Growth</mtext></munder></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>(in the long run)</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
E(R_e) &amp; \approx \frac{D}{P} + \underbrace{(\%\Delta{E} - \%\Delta{S})}_{\text{growth rate of eps}} + \%\Delta{\frac{P}{E}} \\
    &amp; \approx \underbrace{\frac{D}{P} - \%\Delta{S}}_{\text{income (cash flow) return}} + \underbrace{\%\Delta{E}}_{\text{nominal earnings growth}} + \underbrace{\%\Delta{\frac{P}{E}}}_{\text{repricing return}} \\
    &amp; \approx \underbrace{\frac{D}{P} + g}_{\text{constant growth model}} + i - \%\Delta{S} + \%\Delta{\frac{P}{E}} \\
    &amp; \approx \frac{D}{P} + \underbrace{g + i}_{\text{Nominal GDP Growth}} &amp;&amp; \text{(in the long run)}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:14.2803em;vertical-align:-6.890150000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.390149999999999em;"><span style="top:-9.39015em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-6.009604em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span><span style="top:-2.1152740000000003em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span><span style="top:1.7012720000000008em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.890150000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.390149999999999em;"><span style="top:-9.39015em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-1.415892em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">growth rate of eps</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span class="svg-align" style="top:-2.102em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.898em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.720216em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span style="top:-6.009604em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603300000000003em;"><span style="top:-1.3013300000000003em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">income (cash flow) return</span></span></span></span></span><span style="top:-3.3603300000000003em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603300000000003em;"><span class="svg-align" style="top:-2.02633em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3.3603300000000003em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.334em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.234em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7499999999999998em;"><span style="top:-1.6103319999999999em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">nominal earnings growth</span></span></span></span></span><span style="top:-2.9999999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span class="svg-align" style="top:-2.29644em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7035600000000001em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.525776em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603300000000003em;"><span style="top:-1.3588280000000001em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">repricing return</span></span></span></span></span><span style="top:-3.3603300000000003em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603300000000003em;"><span class="svg-align" style="top:-2.02633em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3.3603300000000003em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.334em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.13761em;"><span></span></span></span></span></span></span></span><span style="top:-2.1152740000000003em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-1.340222em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">constant growth model</span></span></span></span></span><span style="top:-3.36033em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603300000000003em;"><span class="svg-align" style="top:-2.02633em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3.3603300000000003em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.334em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.156216em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span style="top:1.7012720000000008em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6595199999999999em;"><span style="top:-1.471452em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">Nominal GDP Growth</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.65952em;"><span class="svg-align" style="top:-2.15756em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8424400000000001em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.528548em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.890150000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-3.7012720000000003em;"><span style="top:1.701272em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.89015em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-3.7012720000000003em;"><span style="top:1.701272em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord">(in the long run)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.89015em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><msub><mi>R</mi><mi>e</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(R_e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> = expected equity return</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mi>D</mi><mi>P</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{D}{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> = dividend yield</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">\%\Delta{E}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></span> = expected percentage change in total earnings</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>S</mi></mrow><annotation encoding="application/x-tex">\%\Delta{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></span> = expected percentage change in shares outstanding, e.g. share repurchase means negative <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>S</mi></mrow><annotation encoding="application/x-tex">\%\Delta{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></span>, increasing <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><msub><mi>R</mi><mi>e</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(R_e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mrow><mi>P</mi><mi mathvariant="normal">/</mi><mi>E</mi></mrow></mrow><annotation encoding="application/x-tex">\%\Delta{P/E}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></span> = expected percentage change in the P/E ratio</li>
<li>all the inputs should be forward-looking (i.e. forecast)</li>
</ul>
<p>note:</p>
<ul>
<li>a share repurchase is a negative <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>S</mi></mrow><annotation encoding="application/x-tex">\%\Delta{S}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></span> term, thus increasing <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><msub><mi>R</mi><mi>e</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(R_e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li>a nominal earnings growth rate is used, thus incorporating effects of inflation explicitly</li>
<li>limitation: assumption of infinite time horizon, ignoring investment horizon</li>
<li>limitation: a <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">\%\Delta{E}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></span> larger than GDP growth is not plausible, because it implies a perpetually expanding economy</li>
</ul>
<p>Real Estate Variation:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><msub><mi>R</mi><mrow><mi>r</mi><mi>e</mi></mrow></msub><mo stretchy="false">)</mo><mo>=</mo><mtext>cap rate</mtext><mo>+</mo><mtext>NOI growth rate</mtext><mo>−</mo><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mtext>cap rate</mtext></mrow><annotation encoding="application/x-tex">E(R_{re}) = \text{cap rate} + \text{NOI growth rate} - \%\Delta{\text{cap rate}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">cap rate</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">NOI growth rate</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.94444em;vertical-align:-0.19444em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord text"><span class="mord">cap rate</span></span></span></span></span></span></span></p>
<h3 id="st-model"><a class="markdownIt-Anchor" href="#st-model"></a> ST Model</h3>
<p>ST Model, i.e. Singer-Terhaar model, international CAPM</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left right left" columnspacing="0em 1em 0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>R</mi><mi>i</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>R</mi><mi>f</mi></msub><mo>+</mo><msub><mi>β</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>M</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>R</mi><mi>M</mi></msub><mo>−</mo><msub><mi>R</mi><mi>f</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>(CAPM)</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>R</mi><msub><mi>P</mi><mi>i</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>β</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>M</mi></mrow></msub><mo>×</mo><mi>R</mi><msub><mi>P</mi><mi>M</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><mo>∵</mo><mi>R</mi><mi>P</mi><mo>=</mo><mi>R</mi><mo>−</mo><msub><mi>R</mi><mi>f</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>ρ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>M</mi></mrow></msub><mo>⋅</mo><msub><mi>σ</mi><mi>i</mi></msub><mo>⋅</mo><munder><munder><mrow><mo stretchy="false">(</mo><mfrac><mrow><mi>R</mi><msub><mi>P</mi><mi>M</mi></msub></mrow><msub><mi>σ</mi><mi>M</mi></msub></mfrac><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mtext>Sharpe Ratio</mtext></munder></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><mo>∵</mo><msub><mi>β</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>M</mi></mrow></msub><mo>=</mo><msub><mi>ρ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>M</mi></mrow></msub><mfrac><msub><mi>σ</mi><mi>i</mi></msub><msub><mi>σ</mi><mi>M</mi></msub></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
  R_i &amp;= R_f + \beta_{i, M} (R_M - R_f) &amp;&amp; \text{(CAPM)} \\
  RP_i &amp;= \beta_{i, M} \times RP_M &amp;&amp; (\because RP = R - R_f) \\
       &amp;= \rho_{i, M} \cdot \sigma_i \cdot \underbrace{(\frac{RP_M}{\sigma_M})}_{\text{Sharpe Ratio}} &amp;&amp; (\because \beta_{i, M} = \rho_{i, M} \frac{\sigma_i}{\sigma_M})
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.966546em;vertical-align:-3.2332730000000005em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7332729999999996em;"><span style="top:-6.253603em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.753603em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7332729999999996em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2332730000000005em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7332729999999996em;"><span style="top:-6.253603em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.753603em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7332729999999996em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-1.1902220000000001em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">Sharpe Ratio</span></span></span></span></span><span style="top:-3.3603300000000003em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603300000000003em;"><span class="svg-align" style="top:-1.8763300000000003em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3.3603300000000003em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.484em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.306216em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2332730000000005em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7332729999999996em;"><span style="top:-6.253603em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span><span style="top:-4.753603em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span><span style="top:-2.7332729999999996em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2332730000000005em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7332729999999996em;"><span style="top:-6.253603em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mord text"><span class="mord">(CAPM)</span></span></span></span><span style="top:-4.753603em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.7332729999999996em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2332730000000005em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>Step1. Full integrated market</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left right" columnspacing="0em 1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>R</mi><msubsup><mi>P</mi><mi>i</mi><mi>G</mi></msubsup><mo>=</mo><msub><mi>ρ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>G</mi><mi>M</mi></mrow></msub><mo>⋅</mo><msub><mi>σ</mi><mi>i</mi></msub><mo>⋅</mo><mo stretchy="false">(</mo><mfrac><mrow><mi>R</mi><msub><mi>P</mi><mrow><mi>G</mi><mi>M</mi></mrow></msub></mrow><msub><mi>σ</mi><mrow><mi>G</mi><mi>M</mi></mrow></msub></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo stretchy="false">(</mo><mtext>+ e.g. liquidity premium</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
  RP_i^G = \rho_{i, GM} \cdot \sigma_i \cdot (\frac{RP_{GM}}{\sigma_{GM}}) &amp;&amp; (\text{+  e.g. liquidity premium})
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4963300000000004em;vertical-align:-0.998165em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4981650000000004em;"><span style="top:-3.498165em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.998165em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4981650000000004em;"><span style="top:-3.498165em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.998165em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4981650000000004em;"><span style="top:-3.498165em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mopen">(</span><span class="mord text"><span class="mord">+ e.g. liquidity premium</span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.998165em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>Step2. Full segmented market</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left right" columnspacing="0em 1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>R</mi><msubsup><mi>P</mi><mi>i</mi><mi>S</mi></msubsup><mo>=</mo><msub><mi>σ</mi><mi>i</mi></msub><mo>⋅</mo><mo stretchy="false">(</mo><mfrac><mrow><mi>R</mi><msubsup><mi>P</mi><mi>i</mi><mi>S</mi></msubsup></mrow><msub><mi>σ</mi><mi>i</mi></msub></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo stretchy="false">(</mo><mtext>+ e.g. liquidity premium</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
  RP_i^S = \sigma_i \cdot (\frac{RP_{i}^S}{\sigma_{i}}) &amp;&amp; (\text{+  e.g. liquidity premium})
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.654331em;vertical-align:-1.0771655em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5771655em;"><span style="top:-3.5771655em;"><span class="pstrut" style="height:3.518331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183309999999999em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0771655em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5771655em;"><span style="top:-3.5771655em;"><span class="pstrut" style="height:3.518331em;"></span><span class="mord"><span class="mord"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0771655em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5771655em;"><span style="top:-3.5771655em;"><span class="pstrut" style="height:3.518331em;"></span><span class="mord"><span class="mopen">(</span><span class="mord text"><span class="mord">+ e.g. liquidity premium</span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0771655em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>Step3. weighted average risk premium</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mi>P</mi><mo>=</mo><mi>ϕ</mi><mo>⋅</mo><mi>R</mi><msup><mi>P</mi><mi>G</mi></msup><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>ϕ</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>R</mi><msup><mi>P</mi><mi>S</mi></msup></mrow><annotation encoding="application/x-tex">RP  = \phi \cdot RP^G + (1 - \phi) \cdot RP^S
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9746609999999999em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span></span></span></span> = degree of integration with the global markets</li>
</ul>
<p>Step4. expected return</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo>=</mo><mi>R</mi><mi>P</mi><mo>+</mo><msub><mi>R</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">R = RP + R_f
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="dornbusch-overshooting-mechanism"><a class="markdownIt-Anchor" href="#dornbusch-overshooting-mechanism"></a> Dornbusch overshooting mechanism</h3>
<p>immediate capital flows will strengthen the currencies of countries with high expected returns to the point where the high return currency will be expected to depreciate going forward by the return differential.</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>E</mi><mo stretchy="false">(</mo><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><msub><mi>S</mi><mrow><mi>d</mi><mi mathvariant="normal">/</mi><mi>f</mi></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msup><mi>r</mi><mi>d</mi></msup><mo>−</mo><msup><mi>r</mi><mi>f</mi></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"/><mo>+</mo><mo stretchy="false">(</mo><msup><mtext>Term</mtext><mi>d</mi></msup><mo>−</mo><msup><mtext>Term</mtext><mi>f</mi></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"/><mo>+</mo><mo stretchy="false">(</mo><msup><mtext>Credit</mtext><mi>d</mi></msup><mo>−</mo><msup><mtext>Credit</mtext><mi>f</mi></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"/><mo>+</mo><mo stretchy="false">(</mo><msup><mtext>Equity</mtext><mi>d</mi></msup><mo>−</mo><msup><mtext>Equity</mtext><mi>f</mi></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"/><mo>+</mo><mo stretchy="false">(</mo><msup><mtext>Liquid</mtext><mi>d</mi></msup><mo>−</mo><msup><mtext>Liquid</mtext><mi>f</mi></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
E(\%\Delta S_{d/f}) &amp;= (r^d - r^f) \\
&amp;\quad + (\text{Term}^d - \text{Term}^f) \\
&amp;\quad + (\text{Credit}^d - \text{Credit}^f) \\
&amp;\quad + (\text{Equity}^d - \text{Equity}^f) \\
&amp;\quad + (\text{Liquid}^d - \text{Liquid}^f)
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.910680000000001em;vertical-align:-3.7053400000000005em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.2053400000000005em;"><span style="top:-6.3062320000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord">%</span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.7238940000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-3.130446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-1.548108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:0.04534000000000038em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.7053400000000005em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.2053400000000005em;"><span style="top:-6.3062320000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.7238940000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord">Term</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9223379999999999em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord text"><span class="mord">Term</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9223379999999999em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.130446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord">Credit</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334479999999998em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord text"><span class="mord">Credit</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334479999999998em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.548108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord">Equity</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9223379999999999em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord text"><span class="mord">Equity</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9223379999999999em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:0.04534000000000038em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord text"><span class="mord">Liquid</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334479999999998em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord text"><span class="mord">Liquid</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334479999999998em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.7053400000000005em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="chapter-asset-allocation-5-10"><a class="markdownIt-Anchor" href="#chapter-asset-allocation-5-10"></a> Chapter: Asset Allocation (5-10%)</h2>
<h3 id="mvo"><a class="markdownIt-Anchor" href="#mvo"></a> MVO</h3>
<p>MVO, i.e. Mean-variance optimization</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mtext>Utility</mtext><mo stretchy="false">)</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>−</mo><mn>0.005</mn><mo>×</mo><mi>λ</mi><mo>×</mo><mi>V</mi><mi>a</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">max(\text{Utility}) = E(R) - 0.005 \times \lambda \times Var 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord text"><span class="mord">Utility</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">λ</span></span></span></span> = risk aversion score</li>
</ul>
<p>note:</p>
<ul>
<li>E® and Var are in % terms, if using decimal, times 0.5 instead of 0.005</li>
</ul>
<p>limitation:</p>
<ul>
<li>GIGO: results sensitive to inputs, e.g. expected return, standard deviation, and correlation</li>
<li>Concentrated asset class allocations: often results in a highly concentrated subset of asset classes, with zero allocation to others, causing lack of diversification of asset classes</li>
<li>Skewness and kurtosis: only looks at expected return and variance, while in realty, there is significant skewness and kurtosis in actual returns</li>
<li>Liquidity constraint: does not automatically incorporate liquidity constraints, often resulting in over-allocation to illiquid assets.</li>
</ul>
<h3 id="black-litterman-model"><a class="markdownIt-Anchor" href="#black-litterman-model"></a> Black-Litterman Model</h3>
<p>Black-Litterman model, starts with the “optimal” portfolio weights from the global market portfolio and derive the expected returns consistent with those weights. Then adjust these return estimates (called implied returns) to do a traditional MVO and derive optimal portfolio weights for our particular investor.</p>
<p><img src="/photos/cfa-note/Black-Litterman-Model.png" alt="Black-Litterman-Model" /></p>
<p>e.g.</p>
<ul>
<li>Derives an expected return for emerging market equities of 6.5% and you believe this is too low, you could adjust the expected return by 75 basis points to 7.25%. You can then rerun the MVO using your adjusted return estimates.</li>
<li>Projects a return for U.K. large-cap equities of 8.2% and U.S. large-cap equities of 8.0% (a return differential of 20 basis points) and you believe that U.S. large-cap equities will outperform U.K. large-cap equities by 100 basis points, adjust the differential.</li>
</ul>
<p>pros:</p>
<ul>
<li>world market weights are fully diversified and theoretically optimal</li>
<li>less dependent on initial return estimates</li>
<li>resulting portfolios are likely to contain more asset classes</li>
</ul>
<h3 id="heuristic-approach"><a class="markdownIt-Anchor" href="#heuristic-approach"></a> Heuristic approach</h3>
<h4 id="6040-rule"><a class="markdownIt-Anchor" href="#6040-rule"></a> 60/40 rule</h4>
<p>60% equity, 40% fixed income for the average individual</p>
<h4 id="120-minus-age"><a class="markdownIt-Anchor" href="#120-minus-age"></a> 120 minus age</h4>
<p>120 − age = % allocation to equities, with the remainder going to fixed incomes.</p>
<h3 id="risk-budgeting-approach"><a class="markdownIt-Anchor" href="#risk-budgeting-approach"></a> Risk budgeting approach</h3>
<p>The goal of risk budgeting is to maximize return per unit of risk (e.g. total portfolio risk, active risk, or residual risk.)</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mtext>MCTR</mtext><mi>i</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>β</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>p</mi></mrow></msub><mo>×</mo><msub><mi>σ</mi><mi>p</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mtext>ACTR</mtext><mi>i</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mi>i</mi></msub><mo>×</mo><msub><mtext>MCTR</mtext><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
  \text{MCTR}_i &amp;= \beta_{i, p} \times \sigma_p \\
  \text{ACTR}_i &amp;= w_i \times \text{MCTR}_i
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000000000000004em;vertical-align:-1.2500000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord">MCTR</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord">ACTR</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord text"><span class="mord">MCTR</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>MCTR</mtext><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\text{MCTR}_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">MCTR</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = Marginal contribution to total risk, i.e. the change in total portfolio risk for a small change in the asset allocation to a specific asset class. i.e. the partial derivative of risk with respect to changes in portfolio allocations</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\beta_{i, p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = beta of asset class i with respect to the portfolio</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = total portfolio risk, i.e. standard deviation</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>ACTR</mtext><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\text{ACTR}_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">ACTR</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = Absolute contribution to total risk, 	% of risk contributed by <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>position</mtext><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\text{position}_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.912em;vertical-align:-0.24414em;"></span><span class="mord"><span class="mord text"><span class="mord">position</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.21752399999999997em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span></span></span></span>= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>ACTR</mtext><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\text{ACTR}_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">ACTR</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> / total portfolio risk</li>
</ul>
<h2 id="chapter-fixed-income"><a class="markdownIt-Anchor" href="#chapter-fixed-income"></a> Chapter: Fixed Income</h2>
<h3 id="ldi-types"><a class="markdownIt-Anchor" href="#ldi-types"></a> LDI types</h3>
<p>Four types of liability-driven investing (i.e. LDI)</p>
<ul>
<li>Type I: Known future amount(s) and payout dates(s)</li>
<li>Type II: Known future amount(s) but uncertain payout dates(s)</li>
<li>Type III: Uncertain future amount(s) but known payout dates(s)</li>
<li>Type IV: Uncertain future amount(s) and uncertain payout dates(s)</li>
</ul>
<h3 id="immunization"><a class="markdownIt-Anchor" href="#immunization"></a> Immunization</h3>
<p>Steps to compute Portfolio statistics:</p>
<ol>
<li>Project the time to receipt (starting with the nearest to most distant) of every portfolio cash flow.</li>
<li>Determine the aggregate portfolio cash flow in each period. The analysis uses six-month periods.</li>
<li>Determine the portfolio IRR that equates future cash flows with the current market value of the portfolio.</li>
<li>Use that IRR to determine the PV of each future cash flow from Step 2. (The sum of those PVs will be the current portfolio market value.)</li>
<li>Calculate the PV weight (w) to apply to each payment as its PV (Step 4) divided by the sum of the PVs.</li>
<li>For each cash flow, multiply its (w) by its time until receipt(t). The sum of the (w)(t)s is the portfolio’s Macaulay duration. Duration is normally expressed in years, so if the cash flow periods were in six-month increments, divide by 2 (two six-month periods in a year) for annual duration.</li>
<li>Portfolio dispersion is computed as the weighted average variance of when each cash flow is received around portfolio duration. (Remember, duration is just the weighted average of when all the cash flows are received).</li>
<li>Portfolio convexity can be computed by summing for each cash flow: [(t)(t + 1)(w)] and then divide this sum by (1 + portfolio <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>R</mi><msub><mi>R</mi><mrow><mi>p</mi><mi>e</mi><mi>r</mi><mi>i</mi><mi>o</mi><mi>d</mi><mi>i</mi><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">IRR_{periodic}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>)2.</li>
</ol>
<p>note:</p>
<ul>
<li>Portfolio statistics should be used for ALM work rather than traditional weighted average calculations based on each bond. With flat yield curve, there’s no diff. In an upward-sloping yield curve, portfolio duration and cashflow yield (i.e. IRR) will be higher-than-average duration and YTM of the bonds because portfolio statistics reflect all cash flows (and return) to be received and the longer maturity bonds will impact the portfolio for a longer time.</li>
<li>The goal of the immunized portfolio is to earn the initial portfolio IRR, not the average YTM of the bonds. Earning the IRR means the portfolio will grow to a sufficient FV to fund the liability.</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>convexity</mtext><mo>=</mo><mfrac><mrow><msup><mtext>Macaulay duration</mtext><mn>2</mn></msup><mo>+</mo><mtext>Macaulay duration</mtext><mo>+</mo><mtext>dispersion</mtext></mrow><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mtext>periodic IRR</mtext><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\text{convexity} = \frac{\text{Macaulay duration}^2 + \text{Macaulay duration} + \text{dispersion}}{(1 + \text{periodic IRR})^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8623000000000001em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">convexity</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5114479999999997em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5754479999999997em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">periodic IRR</span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord">Macaulay duration</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">Macaulay duration</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">dispersion</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>The dispersion and convexity will indicate the risk exposure of the immunization strategy to structural risk from shifts and twists in the yield curve.</p>
<h4 id="cash-flow-matching-strategy"><a class="markdownIt-Anchor" href="#cash-flow-matching-strategy"></a> Cash flow matching strategy</h4>
<p>the safest approach, may allow accounting defeasance to legally set aside assets dedicated to meet the liability (both to be removed from the B/S)</p>
<p>bullet, barbell, Laddered portfolios (created by bonds directly or target-date bond ETFs)</p>
<h4 id="duration-matching-strategy"><a class="markdownIt-Anchor" href="#duration-matching-strategy"></a> Duration matching strategy</h4>
<p>more flexible and generally practical approach to funding multiple liabilities.</p>
<p>for single liability:</p>
<ul>
<li>PVA &gt;= PVL</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><msub><mi>D</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">MD_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><msub><mi>D</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">MD_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li>minimize Convexity</li>
</ul>
<p>for multiple liabilities:</p>
<ul>
<li>PVA &gt;= PVL</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mi>P</mi><msub><mi>V</mi><mi>A</mi></msub><mo>=</mo><mi>B</mi><mi>P</mi><msub><mi>V</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">BPV_A = BPV_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>A</mi></msub><mo>&gt;</mo><mo>=</mo><msub><mi>C</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">C_A &gt;= C_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> slightly</li>
</ul>
<h4 id="contingent-immunization-ci"><a class="markdownIt-Anchor" href="#contingent-immunization-ci"></a> Contingent immunization (CI)</h4>
<p>a hybrid active/passive strategy. As long as a surplus is significant, the portfolio can be actively managed. if the strategy is unsuccessful, the surplus will shrink, and the portfolio must be immunized before the surplus declines below zero</p>
<h3 id="hedge-duration-gap-between-pva-and-pvl"><a class="markdownIt-Anchor" href="#hedge-duration-gap-between-pva-and-pvl"></a> Hedge Duration Gap between PVA and PVL</h3>
<p>Consider an underfunded pension (i.e. DB plan) fund (i.e. PVA &lt; PVL)</p>
<h4 id="1-using-future-contract"><a class="markdownIt-Anchor" href="#1-using-future-contract"></a> 1. using future contract</h4>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>N</mi><mi>f</mi></msub><mtext> for 100% hedge</mtext><mo>=</mo><mfrac><mover><mover><mrow><msub><mtext>BPV</mtext><mi>L</mi></msub><mo>−</mo><msub><mtext>BPV</mtext><mi>A</mi></msub></mrow><mo stretchy="true">⏞</mo></mover><mtext>BPV Gap</mtext></mover><mtext>futures BPV</mtext></mfrac></mrow><annotation encoding="application/x-tex">N_f \text{ for 100\% hedge} = \frac{\overbrace{\text{BPV}_L - \text{BPV}_A}^{\text{BPV Gap} }}{\text{futures BPV}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord"> for 100% hedge</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.5087689999999996em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8227689999999996em;"><span style="top:-3.4597689999999997em;"><span class="pstrut" style="height:4.145769em;"></span><span class="mord"><span class="mord text"><span class="mord">futures BPV</span></span></span></span><span style="top:-4.375769em;"><span class="pstrut" style="height:4.145769em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.822769em;"><span class="pstrut" style="height:4.145769em;"></span><span class="mord"><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1457689999999996em;"><span style="top:-3.33133em;"><span class="pstrut" style="height:3.33133em;"></span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.33133em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.78333em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117
-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7
 5-6 9-10 13-.7 1-7.3 1-20 1H6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M200428 334
c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14
-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7
 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11
 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M400000 542l
-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5
s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1
c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span style="top:-4.998768em;"><span class="pstrut" style="height:3.33133em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">BPV Gap</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>futures BPV</mtext><mo>≈</mo><mfrac><msub><mtext>BPV</mtext><mtext>CTD</mtext></msub><msub><mtext>CF</mtext><mtext>CTD</mtext></msub></mfrac></mrow><annotation encoding="application/x-tex">\text{futures BPV} \approx \frac{\text{BPV}_{\text{CTD}}}{\text{CF}_{\text{CTD}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">futures BPV</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3339409999999998em;vertical-align:-0.44530499999999995em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">CF</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">CTD</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">CTD</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
</ul>
<h4 id="2-using-interest-rate-swaps"><a class="markdownIt-Anchor" href="#2-using-interest-rate-swaps"></a> 2. using interest rate swaps</h4>
<p>receive-fixed swap has positive (+) duration; pay-fixed swap has negative (-) duration</p>
<p>e.g. receive-fixed swap:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>net swap BPV</mtext><mo>=</mo><mtext>fixed-side BPV</mtext><mo>−</mo><mtext>floating-side BPV</mtext></mrow><annotation encoding="application/x-tex">\text{net swap BPV} = \text{fixed-side BPV} - \text{floating-side BPV}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">net swap BPV</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord">fixed-side BPV</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">floating-side BPV</span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>NP</mtext><mo>=</mo><mfrac><mtext>BPV Gap</mtext><mtext>net swap BPV</mtext></mfrac></mrow><annotation encoding="application/x-tex">\text{NP} = \frac{\text{BPV Gap}}{\text{net swap BPV}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord">NP</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.24077em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603299999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">net swap BPV</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">BPV Gap</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<h4 id="3-using-swaption"><a class="markdownIt-Anchor" href="#3-using-swaption"></a> 3. using swaption</h4>
<ul>
<li>to increase asset duration (i.e. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>BPV</mtext><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">\text{BPV}_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, closing duration gap), buy receiver swaption</li>
<li>to decrease asset duration (i.e. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>BPV</mtext><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">\text{BPV}_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, widening duration gap), buy payer swaption</li>
</ul>
<h4 id="3-using-swaption-collar"><a class="markdownIt-Anchor" href="#3-using-swaption-collar"></a> 3*. using swaption collar</h4>
<ul>
<li>buy a receiver swaption at lower strike (i.e. SFR: swap fixed rate)</li>
<li>sell a payer swaption at higher strike (to reduce the initial premium cost outlay)</li>
</ul>
<p>note:</p>
<ul>
<li>the payoff looks like a short risk reversal, with interest rate as X-axis</li>
</ul>
<h4 id="example-choosing-an-optimal-strategy"><a class="markdownIt-Anchor" href="#example-choosing-an-optimal-strategy"></a> Example: choosing an optimal strategy</h4>
<p>The choice of optimal strategy will depend on the manager’s view of interest rates. Consider the DB plan with a duration gap and a need to increase asset duration.</p>
<ol>
<li>Enter a receive-fixed swap versus pay MRR.</li>
<li>Buy a receiver swaption.</li>
<li>Enter a zero-cost collar composed of buying the receiver swaption and selling a payer swaption.</li>
</ol>
<table>
<thead>
<tr>
<th>Premium Cost</th>
<th>Cost</th>
</tr>
</thead>
<tbody>
<tr>
<td>2.5% fixed-rate swap</td>
<td>None</td>
</tr>
<tr>
<td>2.3% receiver swaption</td>
<td>75 bp</td>
</tr>
<tr>
<td>3.3% payer swaption</td>
<td>75 bp</td>
</tr>
</tbody>
</table>
<ul>
<li>
<p>The receive 2.5% SFR swap is optimal if the manager expects the new SFR will be at or below 2.5%.</p>
<ul>
<li>This is equivalent to buying 2.5% fixed-rate bonds (financed by borrowing at MRR), increasing asset duration and BPV. The plan will benefit from the decline in rates.</li>
<li>Buying the 2.3% receiver swaption is suboptimal because there is an initial cost, and the 2.3% fixed rate received by the plan is lower.</li>
<li>The collar (buy the 2.3% receiver swaption; sell the 3.3% payer swaption) is suboptimal because the 2.3% fixed rate received by the plan is lower. The payer swaption buyer has no rational reason to exercise his right with the new SFR below 3.3%.</li>
</ul>
</li>
<li>
<p>The collar is optimal if the manager expects the new SFR will be above 2.5% but below 3.3%.</p>
<ul>
<li>The collar (buy the 2.3% receiver swaption and sell the 3.3% payer swaption) has no intrinsic value, which is the best choice.
<ul>
<li>The right to receive 2.3% when rates are above 2.5% has no value.</li>
<li>The payer swaption buyer has no rational reason to exercise his right with new SFRs below 3.3%.</li>
</ul>
</li>
<li>The other hedges have negative value or zero value with an up-front cost.
<ul>
<li>The swap of receive 2.5% will have negative value when SFRs are above 2.5%.</li>
<li>The receiver swaption (right to receive 2.3%) has no value when new SFRs are above 2.5% and required an initial cost.</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Buying the 2.3% receiver swaption is optimal at some level of new SFRs above 3.3%.</p>
<ul>
<li>The 2.3% receiver swaption has no intrinsic value with new SFRs above 3.3%. But there was an initial premium cost. This is the best case at some level of SFRs above 3.3%.</li>
<li>The receive 2.5% swap has increasing negative value as new SFRs increase above 3.3%.</li>
<li>The collar also begins to have increasing negative value as new SFRs increase above 3.3%.
<ul>
<li>The receive 2.3% swaption has no value.</li>
<li>The 3.3% payer swaption increases in value as SFRs increase above 3.3%, and this is negative value to the seller (the plan).</li>
<li>As SFRs increase, that negative value will at some point exceed the initial cost of the receiver swaption, and the receiver swaption would become optimal.</li>
<li>The breakeven rate to make the payer swaption optimal is above 3.3%.</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="fixed-income-return-decomposition"><a class="markdownIt-Anchor" href="#fixed-income-return-decomposition"></a> Fixed-income return decomposition</h3>
<ul>
<li>
<ol>
<li>rolling yield:</li>
</ol>
<ul>
<li>a. coupon income = annual coupon amount / current bond price</li>
<li>b. rolldown return = (projected bond price (BP) assuming not yield curve change - beginning BP) / beginning BP</li>
</ul>
</li>
<li>
<ol start="2">
<li>expected price change due to change in benchmark yield = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mi>M</mi><mi>D</mi><mo>×</mo><mi mathvariant="normal">Δ</mi><mi>Y</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo>×</mo><mi>C</mi><mo>×</mo><mi mathvariant="normal">Δ</mi><msup><mi>Y</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-MD \times \Delta{Y}) + (1/2 \times C \times \Delta{Y}^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">/</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ol>
</li>
<li>
<ol start="3">
<li>expected price change due to change in credit spreads = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mi>M</mi><mi>D</mi><mo>×</mo><mi mathvariant="normal">Δ</mi><mi>S</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn><mo>×</mo><mi>C</mi><mo>×</mo><mi mathvariant="normal">Δ</mi><msup><mi>S</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-MD \times \Delta{S}) + (1/2 \times C \times \Delta{S}^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">/</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ol>
</li>
<li>
<ol start="4">
<li>expected currency G/L</li>
</ol>
</li>
</ul>
<h3 id="credit-spread-measures"><a class="markdownIt-Anchor" href="#credit-spread-measures"></a> Credit Spread Measures</h3>
<h4 id="yield-spread"><a class="markdownIt-Anchor" href="#yield-spread"></a> Yield Spread</h4>
<p>yield spread or benchmark spread := bond YTM - closest maturity on-the-run govt bond</p>
<h4 id="g-spread"><a class="markdownIt-Anchor" href="#g-spread"></a> g-spread</h4>
<p>g-spread := bond YTM - interpolated YTM of the two adjacent maturity on-the-run govt bonds</p>
<h4 id="i-spread"><a class="markdownIt-Anchor" href="#i-spread"></a> i-spread</h4>
<p>i-spread, interpolated spread := bond YTM - maturity interpolated swap fixed rate</p>
<h4 id="asset-swap-spread"><a class="markdownIt-Anchor" href="#asset-swap-spread"></a> asset swap spread</h4>
<p>ASW := bond fixed coupon - maturity interpolated swap fixed rate</p>
<p>represents the spread that the bond is offering over the floating market reference rate (MRR) over its life (assuming the bond is trading close to par). Since the swap can swap fixed rate with MRR, buying the bond and payer swap can synthesize MRR + ASW return.</p>
<h4 id="z-spread"><a class="markdownIt-Anchor" href="#z-spread"></a> z-spread</h4>
<p>z-spread, zero-volatility spread, takes into account the term structure of spot rates. It uses a trial-and-error calculation to determine a single spread that, when added to risk-free spot rates, discounts the bond’s future cash flows back to its current market value.</p>
<p>note: <strong>CDS Spread</strong>, where the protection buyer pays a standardized fixed coupon adjusted by an up-front payment/receipt to reflect the fair value of the protection, should in theory, be equal to the z-spread that is earned on the underlying bond, since both are essentially a risk premium paid to the party facing the credit risk of the bond. However, differences between the CDS spread and the z-spread can occur due to technical reasons, such as the underlying bond price trading away from par, accrued interest on the underlying bond, and idiosyncratic features of the CDS protection. The <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>CDS basis</mtext><mo>:</mo><mo>=</mo><mtext>CDS spread</mtext><mo>−</mo><mtext>z-spread</mtext></mrow><annotation encoding="application/x-tex">\text{CDS basis} := \text{CDS spread} - \text{z-spread}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">CDS basis</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">CDS spread</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">z-spread</span></span></span></span></span>. This is a useful measure for those trading CDS contracts.</p>
<h4 id="option-adjusted-spread"><a class="markdownIt-Anchor" href="#option-adjusted-spread"></a> option adjusted spread</h4>
<p>option adjusted spread, OAS, is the only spread measure appropriate for assessing the credit/liquidity risk of bonds with embedded options. It uses an assumption of interest rate volatility to build an interest rate tree of possible paths for forward risk-free interest rates. Future cash flows are adjusted for the optionality of the bond along each path (i.e., to reflect whether the option would be exercised). The OAS is then a trial-and-error calculation to determine a single spread that, when added to every node of the interest rate tree of risk-free rates, discounts the bond’s adjusted future cash flows back to its current market value. By adjusting the cash flows of the bond to reflect expected interest rate volatility, the uncertainty of the cash flows due to the optionality of the bond has been removed, and the resulting OAS, therefore, does not include any impact of the option on the spread. The OAS measures the spread that is earned for facing the credit and liquidity risk of the issuer—the impact of the option has been removed from the spread.</p>
<p>The OAS is the best measure for consistent comparison of the spreads on bonds with embedded options (e.g., callable, putable) and bonds without embedded options.</p>
<h3 id="excess-spread"><a class="markdownIt-Anchor" href="#excess-spread"></a> Excess Spread</h3>
<p>excess spread: spread in excess of the fair spread for suffering credit losses.</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>Excess Spread</mtext><mo>:</mo><mo>=</mo><mtext>Spread</mtext><mo>−</mo><mtext>EffSpreadDur</mtext><mo>×</mo><mi mathvariant="normal">Δ</mi><mtext>Spread</mtext><mo>−</mo><munder><munder><mrow><mtext>POD</mtext><mo>×</mo><mtext>LGD</mtext></mrow><mo stretchy="true">⏟</mo></munder><mtext>credit loss, credit spread</mtext></munder></mrow><annotation encoding="application/x-tex">\text{Excess Spread} := \text{Spread} - \text{EffSpreadDur} \times \Delta \text{Spread} - \underbrace{\text{POD} \times \text{LGD}}_{\text{credit loss, credit spread}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">Excess Spread</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">Spread</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">EffSpreadDur</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">Δ</span><span class="mord text"><span class="mord">Spread</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.2368759999999996em;vertical-align:-1.5535459999999999em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-1.582562em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">credit loss, credit spread</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span class="svg-align" style="top:-2.26867em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">POD</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">LGD</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.73133em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5535459999999999em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>Where:</p>
<ul>
<li>EffSpreadDur: Effective Spread Duration</li>
<li>POD: Probability of Default</li>
<li>LGD: Loss Given Default, i.e. loss severity, 1 - RR (recovery rate)</li>
<li><code>Spread</code> and <code>POD</code> should be de-annualized to match holding period, if given as annualized</li>
</ul>
<p>note:</p>
<ul>
<li>Credit valuation adjustment (CVA), computed as the present value of sum of expected credit losses := POD * LGD for all periods scaled up by the expected exposure at the time of default. CVA represents the discount that the credit-risky instrument should trade below an equivalent risk-free security in order to compensate investors for their expected credit losses.</li>
</ul>
<h3 id="butterfly-strategy"><a class="markdownIt-Anchor" href="#butterfly-strategy"></a> butterfly strategy</h3>
<p>profit from a view that the curvature of the yield curve is likely to change, by combining long and short positions in bullets (i.e. body) and barbells (wings)</p>
<p>butterfly spread = - (short-term yield) + (2 x medium-term yield) - long-term yield</p>
<p>note:</p>
<ul>
<li>butterfly spread increase == curvature increase == negative butterfly twist == negative butterfly view (frowns more)</li>
</ul>
<h3 id="credit-spread-in-economic-cycle"><a class="markdownIt-Anchor" href="#credit-spread-in-economic-cycle"></a> Credit Spread in Economic Cycle</h3>
<table>
<thead>
<tr>
<th></th>
<th>Early Expansion (Recovery)</th>
<th>Late Expansion</th>
<th>Peak</th>
<th>Contraction (Recession)</th>
</tr>
</thead>
<tbody>
<tr>
<td>Corporate Defaults</td>
<td>Peak</td>
<td>Falling</td>
<td>Stable</td>
<td>Rising</td>
</tr>
<tr>
<td>Credit Spread Level</td>
<td>Stable</td>
<td>Falling</td>
<td>Rising</td>
<td>Peak</td>
</tr>
<tr>
<td>Credit Spread Slope IG</td>
<td>Stable</td>
<td>Upward sloping</td>
<td>Upward sloping</td>
<td>Flat</td>
</tr>
<tr>
<td>Credit Spread Slope HY</td>
<td>Inverted</td>
<td>Upward sloping</td>
<td>Upward sloping</td>
<td>Inverted</td>
</tr>
<tr>
<td>Corporate Leverage</td>
<td>Falling</td>
<td>Stable</td>
<td>Rising</td>
<td>Peak</td>
</tr>
</tbody>
</table>
<p><img src="/photos/cfa-note/credit-spread-economic-cycle.png" alt="credit-spread-economic-cycle" /></p>
<h3 id="cirp"><a class="markdownIt-Anchor" href="#cirp"></a> CIRP</h3>
<p>covered interest rate parity (i.e. CIRP) states that high interest rate currencies should trade at a forward discount</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mtext>forward rate</mtext><mrow><mi>D</mi><mi mathvariant="normal">/</mi><mi>F</mi></mrow></msub><mo>=</mo><msub><mtext>spot rate</mtext><mrow><mi>D</mi><mi mathvariant="normal">/</mi><mi>F</mi></mrow></msub><mo>×</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>r</mi><mi>D</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>r</mi><mi>F</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">\text{forward rate}_{D/F} = \text{spot rate}_{D/F} \times \frac{(1 + r_D)^T}{(1+r_F)^T}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04964em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord text"><span class="mord">forward rate</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.03422em;vertical-align:-0.41913999999999996em;"></span><span class="mord"><span class="mord text"><span class="mord">spot rate</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28086em;"><span style="top:-2.45586em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41913999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.454331em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183309999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>spot rate</mtext><mrow><mi>D</mi><mi mathvariant="normal">/</mi><mi>F</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\text{spot rate}_{D/F}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03422em;vertical-align:-0.41913999999999996em;"></span><span class="mord"><span class="mord text"><span class="mord">spot rate</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28086em;"><span style="top:-2.45586em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41913999999999996em;"><span></span></span></span></span></span></span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>forward rate</mtext><mrow><mi>D</mi><mi mathvariant="normal">/</mi><mi>F</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\text{forward rate}_{D/F}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04964em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord text"><span class="mord">forward rate</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>: spot and forward rates denoted in direct quotes</li>
</ul>
<h3 id="hedge-foreign-coupon-paying-bonds"><a class="markdownIt-Anchor" href="#hedge-foreign-coupon-paying-bonds"></a> Hedge Foreign Coupon-Paying Bonds</h3>
<p>Consider an Australian investor who wishes to hedge their exposure to a coupon-paying U.S. Treasury bond. Assume current USD/AUD = 0.8</p>
<table>
<thead>
<tr>
<th>Position</th>
<th>At Initiation</th>
<th>Periodic Semiannual Payments for Next 10 Years</th>
<th>At the End</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>U.S. Treasury Bond</strong></td>
<td>Pay out USD 100 million to purchase the U.S. bond</td>
<td>Receive-fixed USD bond coupon</td>
<td>Receive USD 100 million par at maturity of bond</td>
</tr>
<tr>
<td><strong>Fixed-Fixed Cross-Currency Swap</strong></td>
<td>Receive USD 100 million and pay AUD 125 million in exchange of principal amounts</td>
<td>Pay-fixed USD leg</td>
<td>Pay USD 100 million and receive AUD 125 million in exchange of principal amounts</td>
</tr>
<tr>
<td><strong>Net Flow</strong></td>
<td>Pay AUD 125 million principal outflow</td>
<td>Receive-fixed AUD payment</td>
<td>Receive AUD 125 million principal inflow</td>
</tr>
</tbody>
</table>
<p>the fixed-fixed cross-currency swap can be synthesized by:</p>
<table>
<thead>
<tr>
<th>Swap</th>
<th>Description</th>
<th>Interest Paid</th>
<th>Interest Received</th>
<th>Principal Exchange at Outset</th>
<th>Principal Exchange at End</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>A</strong></td>
<td>USD interest rate swap</td>
<td>USD Fixed</td>
<td>USD Floating</td>
<td>None</td>
<td>None</td>
</tr>
<tr>
<td><strong>B</strong></td>
<td>AUD interest rate swap</td>
<td>AUD Floating</td>
<td>AUD Fixed</td>
<td>None</td>
<td>None</td>
</tr>
<tr>
<td><strong>C</strong></td>
<td>Cross-currency basis swap</td>
<td>USD Floating</td>
<td>AUD Floating</td>
<td>Receive in USD principal, pay out AUD principal</td>
<td>Pay out USD principal, receive in AUD principal</td>
</tr>
</tbody>
</table>
<h3 id="unhedged-cross-currency-carry-trade"><a class="markdownIt-Anchor" href="#unhedged-cross-currency-carry-trade"></a> Unhedged Cross-Currency Carry Trade</h3>
<p>the carry trade involves borrowing in a low interest rate currency and depositing in a high interest rate currency, facing risk that high interest rate currency weakens.</p>
<p>total pnl = foreign returns - cost of funds + FX rate (D/F) return</p>
<h3 id="cds"><a class="markdownIt-Anchor" href="#cds"></a> CDS</h3>
<p>The protection buyer pays a regular fixed coupon to the protection seller periodically over the life of the contract in return for a payment upon a prespecified credit event on a reference issuer (or issuers). The size of the CDS is specified at the outset and referred to as the notional principal.</p>
<p><img src="/photos/cfa-note/cds-mechanics.png" alt="cds-mechanics" /></p>
<p>characteristics:</p>
<ul>
<li>OTC traded credit derivative</li>
<li>Bilateral agreement</li>
<li>Counterparty credit risk</li>
</ul>
<p>The fixed coupon paid periodically by the protection buyer is standardized to <strong>1% for investment-grade (IG)</strong> issuers and <strong>5% for high-yield (HY)</strong> issuers for operational reasons, to make  settlement and clearing of contracts more straightforward. Note this standardized coupon is not the fair premium that should be regularly paid by the protection buyer (referred to as the <strong>CDS spread</strong>) for the credit protection based on credit pricing models.</p>
<table>
<thead>
<tr>
<th>Scenario</th>
<th>Upfront Premium</th>
</tr>
</thead>
<tbody>
<tr>
<td>CDS spread = fixed coupon</td>
<td>None</td>
</tr>
<tr>
<td>CDS spread &gt; fixed coupon</td>
<td>[(CDS spread – fixed coupon) × EffSpreadDurCDS] paid to protection seller</td>
</tr>
<tr>
<td>CDS spread &lt; fixed coupon</td>
<td>[(fixed coupon – CDS spread) × EffSpreadDurCDS] paid to protection buyer</td>
</tr>
</tbody>
</table>
<p>CDS Price:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>CDS Price</mtext><mo>≈</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mtext>Fixed Coupon</mtext><mo>−</mo><mtext>CDS Spread</mtext><mo stretchy="false">)</mo><mo>×</mo><mtext>EffSpreadDurCDS</mtext></mrow><annotation encoding="application/x-tex">\text{CDS Price} ≈ 1 + (\text{Fixed Coupon} - \text{CDS Spread}) \times \text{EffSpreadDurCDS}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord">CDS Price</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">Fixed Coupon</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">CDS Spread</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">EffSpreadDurCDS</span></span></span></span></span></span></p>
<p>note:</p>
<ul>
<li>This pricing convention conforms with the usual inverse price/yield relationship seen in fixed income because, when CDS spreads rise, the CDS price will fall and vice versa.</li>
<li>For higher-quality issuers, the CDS spread will be lower than the fixed coupon and the CDS price will be above par. For lower-quality issuers, the CDS spread will be higher than the fixed coupon and the CDS price will be below par.</li>
<li>protection sell’s pnl is computed as [CDS price (t-1) - CDS price (t)] x Notional Principal</li>
</ul>
<table>
<thead>
<tr>
<th>Position</th>
<th>Profit if CDS Spreads</th>
<th>Profit if CDS Prices</th>
</tr>
</thead>
<tbody>
<tr>
<td>Sell protection (long risk)</td>
<td>Fall</td>
<td>Rise</td>
</tr>
<tr>
<td>Buy protection (short risk)</td>
<td>Rise</td>
<td>Fall</td>
</tr>
</tbody>
</table>
<p>note:</p>
<ul>
<li>buy protection == long CDS spread == short risk == decrease exposure == short bond == short price</li>
</ul>
<h4 id="cds-long-short-strategy"><a class="markdownIt-Anchor" href="#cds-long-short-strategy"></a> CDS long-short strategy</h4>
<p>involves buying protection on issuers, where credit spreads are expected to widen relative to other issuers, while simultaneously selling protection on issuers, where credit spreads are expected to narrow relative to other issuers.</p>
<h4 id="cds-curve-trades"><a class="markdownIt-Anchor" href="#cds-curve-trades"></a> CDS curve trades</h4>
<p>buying protection at maturities where CDS spreads are expected to rise relative to other maturities and selling protection at maturities where spreads are expected to fall relative to other maturities.</p>
<h3 id="credit-spread-curve-strategies"><a class="markdownIt-Anchor" href="#credit-spread-curve-strategies"></a> Credit Spread Curve Strategies</h3>
<p>profit from a view on the shape or level of the credit spread curve.</p>
<h4 id="static-credit-spread-curve-strategies"><a class="markdownIt-Anchor" href="#static-credit-spread-curve-strategies"></a> Static Credit Spread Curve Strategies</h4>
<p>A manager who believes that the current credit spread curve will remain unchanged can earn excess return in the cash market through either:</p>
<ul>
<li>lowering the average credit rating of their bond portfolio;</li>
<li>increasing the spread duration by buying and holding longer-dated bonds.</li>
</ul>
<h4 id="dynamic-credit-spread-curve-strategies"><a class="markdownIt-Anchor" href="#dynamic-credit-spread-curve-strategies"></a> Dynamic Credit Spread Curve Strategies</h4>
<p>e.g. expect upward-sloping CDS curve to flatten, buy ST CDS protection, sell LT CDS protection</p>
<table>
<thead>
<tr>
<th>Economic Stage</th>
<th>Typical Curve Feature</th>
<th>Cash</th>
<th>CDS</th>
</tr>
</thead>
<tbody>
<tr>
<td>Economic recovery</td>
<td>HY spreads narrow more than IG spreads</td>
<td>Buy HY bonds</td>
<td>Sell HY protection</td>
</tr>
<tr>
<td></td>
<td></td>
<td>Sell IG bonds</td>
<td>Buy IG protection</td>
</tr>
<tr>
<td></td>
<td>HY credit curve steepens</td>
<td>Buy short-term HY bonds</td>
<td>Sell short-term HY protection</td>
</tr>
<tr>
<td></td>
<td></td>
<td>Sell long-term HY bonds</td>
<td>Buy long-term HY protection</td>
</tr>
<tr>
<td>Economic slowdown</td>
<td>HY spreads widen more than IG spreads</td>
<td>Buy IG bonds</td>
<td>Sell IG protection</td>
</tr>
<tr>
<td></td>
<td></td>
<td>Sell HY bonds</td>
<td>Buy HY protection</td>
</tr>
<tr>
<td></td>
<td>HY credit curve flattens/inverts</td>
<td>Buy long-term HY bonds</td>
<td>Sell long-term HY protection</td>
</tr>
<tr>
<td></td>
<td></td>
<td>Sell short-term HY bonds</td>
<td>Buy short-term HY protection</td>
</tr>
</tbody>
</table>
<h2 id="chapter-equity"><a class="markdownIt-Anchor" href="#chapter-equity"></a> Chapter: Equity</h2>
<h3 id="hhi"><a class="markdownIt-Anchor" href="#hhi"></a> HHI</h3>
<p>Herfindahl-Hirschman index (i.e. HHI):</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>HHI</mtext><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msubsup><mi>w</mi><mi>i</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\text{HHI} = \sum\limits_{i=1}^n{w_i^2}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord">HHI</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>effective number of stocks</mtext><mo>=</mo><mfrac><mn>1</mn><mtext>HHI</mtext></mfrac></mrow><annotation encoding="application/x-tex">\text{effective number of stocks} = \frac{1}{\text{HHI}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">effective number of stocks</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">HHI</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li>n = the number of stocks in the portfolio</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">{w_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> = the weight of stock i</li>
</ul>
<p>note:</p>
<ul>
<li>HHI ranges from 1/n (an equally-weighted portfolio) to 1 (a single stock portfolio)</li>
<li>mcap-weighted portfolio has number of holdings larger than the number predicted by HHI, due to disproportionate effect of the largest capitalization stocks on the index</li>
</ul>
<h3 id="decomposition-of-realized-active-return"><a class="markdownIt-Anchor" href="#decomposition-of-realized-active-return"></a> Decomposition of realized active return</h3>
<p>realized (i.e. ex post) active return can be decomposed into:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mi>A</mi></msub><mo>=</mo><mo>∑</mo><mrow><mo stretchy="false">(</mo><msub><mi>β</mi><mrow><mi>p</mi><mi>k</mi></mrow></msub><mo>−</mo><msub><mi>β</mi><mrow><mi>b</mi><mi>k</mi></mrow></msub><mo stretchy="false">)</mo></mrow><mo>×</mo><msub><mi>F</mi><mi>k</mi></msub><mo>+</mo><mo stretchy="false">(</mo><mi>α</mi><mo>+</mo><mi>ϵ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_A = \sum{(\beta_{pk} - \beta_{bk})} \times F_k + (\alpha + \epsilon)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6000100000000002em;vertical-align:-0.55001em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϵ</span><span class="mclose">)</span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mrow><mi>p</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\beta_{pk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = the sensitivity of the portfolio to each rewarded factor (k)</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mrow><mi>b</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\beta_{bk}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = the sensitivity of the benchmark to each rewarded factor</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">F_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = the return of each rewarded factor</li>
<li>(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>+</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\alpha + \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>) = the return not explained by exposure to rewarded factors—alpha (α) is the active return attributable to manager skill, and ε is the idiosyncratic return—noise or luck (good or bad) (In practice it is very difficult to distinguish between α and ε)</li>
</ul>
<h3 id="active-share"><a class="markdownIt-Anchor" href="#active-share"></a> Active Share</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>Active Share</mtext><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mi mathvariant="normal">∣</mi><msub><mi>w</mi><mrow><mi>p</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mo>−</mo><msub><mi>w</mi><mrow><mi>b</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow></mrow><annotation encoding="application/x-tex">\text{Active Share} = \frac{1}{2}\sum\limits_{i=1}^n{|w_{p,i} - w_{b,i}|}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">Active Share</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li>n = total number of securities in the benchmark or the portfolio</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>p</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{p,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = weight of security i in the portfolio</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>b</mi><mo separator="true">,</mo><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{b,i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = weight of security i in the benchmark</li>
</ul>
<h3 id="risk-contribution"><a class="markdownIt-Anchor" href="#risk-contribution"></a> Risk Contribution</h3>
<p>The contribution of Asset i to portfolio variance (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">CV_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>):</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><msub><mi>V</mi><mi>i</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><msub><mi>w</mi><mi>i</mi></msub><msub><mi>w</mi><mi>j</mi></msub><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><mo>=</mo><msub><mi>w</mi><mi>i</mi></msub><msub><mi>C</mi><mrow><mi>i</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">CV_i = \sum\limits_{j=1}^n{w_i w_j C_{ij}} = w_i C_{ip}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">w_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = Asset j’s weight in the portfolio</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>	= the covariance of returns between Asset i and Asset j</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{ip}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>	= the covariance of returns between Asset i and the portfolio (= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>w</mi><mi>j</mi></msub><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow></mrow><annotation encoding="application/x-tex">\sum\limits_{j=1}^n{w_j C_{ij}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.465174em;vertical-align:-1.113777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.113777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span>)</li>
</ul>
<p>note:</p>
<ul>
<li>The portfolio variance is the sum of each asset’s contribution to portfolio variance plus any unexplained variance</li>
</ul>
<p>The contribution of Asset i to portfolio active variance (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>A</mi><msub><mi>V</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">CAV_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>):</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><mi>A</mi><msub><mi>V</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>p</mi><mi>i</mi></mrow></msub><mo>−</mo><msub><mi>w</mi><mrow><mi>b</mi><mi>i</mi></mrow></msub><mo stretchy="false">)</mo><mi>R</mi><msub><mi>C</mi><mrow><mi>i</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">CAV_i = (w_{pi} - w_{bi}) RC_{ip}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>p</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{pi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = weight of Asset i in the portfolio</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>b</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{bi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = weight of Asset i in the benchmark</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><msub><mi>C</mi><mrow><mi>i</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">RC_{ip}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>	= the covariance between the active returns of Asset i and the active returns of the portfolio, which reflects the covariances between the active returns for Asset i and the active returns for each of the n assets in the portfolio (= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><mo stretchy="false">(</mo><msub><mi>w</mi><mrow><mi>p</mi><mi>j</mi></mrow></msub><mo>−</mo><msub><mi>w</mi><mrow><mi>b</mi><mi>j</mi></mrow></msub><mo stretchy="false">)</mo><mi>R</mi><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow></mrow><annotation encoding="application/x-tex">\sum\limits_{j=1}^n{(w_{pj} - w_{bj}) RC_{ij}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.465174em;vertical-align:-1.113777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.113777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span>)</li>
</ul>
<p>note:</p>
<ul>
<li>Adding up the CAVs for all the assets in the portfolio will give the variance of the portfolio’s active return (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><msub><mi>V</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">AV_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>).</li>
</ul>
<p>The contribution of Factor i to portfolio variance:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>C</mi><msub><mi>V</mi><mi>i</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><msub><mi>β</mi><mi>i</mi></msub><msub><mi>β</mi><mi>j</mi></msub><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><mo>=</mo><msub><mi>β</mi><mi>i</mi></msub><msub><mi>C</mi><mrow><mi>i</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">CV_i = \sum\limits_{j=1}^n{\beta_{i} \beta_{j} C_{ij}} = \beta_i C_{ip}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\beta_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = sensitivity of portfolio to Factor i (regression coefficient)</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>	= the covariance of Factor i and Factor j</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mrow><mi>i</mi><mi>p</mi></mrow></msub></mrow><annotation encoding="application/x-tex">C_{ip}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>	= the covariance of Factor i and the portfolio (= <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mrow><msub><mi>β</mi><mi>j</mi></msub><msub><mi>C</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow></mrow><annotation encoding="application/x-tex">\sum\limits_{j=1}^n{\beta_{j} C_{ij}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.465174em;vertical-align:-1.113777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.113777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span>)</li>
</ul>
<p>note:</p>
<ul>
<li>The portfolio variance is the sum of each factor’s contribution to portfolio variance.</li>
</ul>
<h3 id="fundamental-law-of-active-management"><a class="markdownIt-Anchor" href="#fundamental-law-of-active-management"></a> Fundamental Law of Active Management</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><msub><mi>R</mi><mi>A</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>I</mi><mi>C</mi><mo>⋅</mo><msqrt><mrow><mi>B</mi><mi>R</mi></mrow></msqrt><mo>⋅</mo><msub><mi>σ</mi><msub><mi>R</mi><mi>A</mi></msub></msub><mo>⋅</mo><mi>T</mi><mi>C</mi></mrow><annotation encoding="application/x-tex">E(R_A) = IC \cdot \sqrt{BR} \cdot \sigma_{R_A} \cdot T C
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.06445999999999996em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9755400000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-2.93554em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.06445999999999996em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.694755em;vertical-align:-0.250305em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><msub><mi>R</mi><mi>A</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E(R_A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> = expected active return of the portfolio</li>
<li>IC = expected information coefficient of the manager, calculated as the correlation between manager forecasts and realized active returns</li>
<li>BR = breadth, i.e. the number of truly independent decisions made by the manager each year</li>
<li>TC = transfer coefficient, a number between 0 and 1 that measures the level to which the manager is constrained—TC will take a value of 1 if the manager has no constraints, and 0 if the manager is fully constrained</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><msub><mi>R</mi><mi>A</mi></msub></msub></mrow><annotation encoding="application/x-tex">\sigma_{R_A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.680865em;vertical-align:-0.250305em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span></span></span></span> = the manager’s active risk (the volatility of active returns)</li>
</ul>
<h3 id="expected-compounded-return"><a class="markdownIt-Anchor" href="#expected-compounded-return"></a> Expected Compounded Return</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mi>g</mi></msub><mo>=</mo><msub><mi>R</mi><mi>a</mi></msub><mo>−</mo><msup><mi>σ</mi><mn>2</mn></msup><mi mathvariant="normal">/</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">R_g = R_a - \sigma^2 / 2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord">/</span><span class="mord">2</span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>g</mi></msub></mrow><annotation encoding="application/x-tex">R_g</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> = geometric compounded returns</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">R_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = arithmetic non-compounded returns</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> = portfolio volatility</li>
</ul>
<p>note:</p>
<ul>
<li>increasing leverage will lower expected geometric compounded returns over time, due to multiplication to <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> is squared, while it’s not to <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">R_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</li>
</ul>
<p>example:</p>
<ul>
<li>a portfolio falls 2% and then rises by 2%, yielding a compounded return of 0.98 x 1.02 = 0.9996; vs the x10 leveraged portfolio (i.e. falls 20% and then rises by 20%), yielding 0.8 x 1.2 = 0.96</li>
</ul>
<h3 id="style-based-active-management-strategy"><a class="markdownIt-Anchor" href="#style-based-active-management-strategy"></a> Style-based Active Management Strategy</h3>
<p>Value-based approaches: attempt to identify securities that are trading below their estimated intrinsic value, including:</p>
<ul>
<li>Relative value: Comparing price multiples such as P/E and P/B to peers. An undervalued company has an inexplicably low multiple relative to the industry average.</li>
<li>Contrarian investing: Purchasing or selling securities against prevailing market sentiment. For instance, buying the securities of depressed cyclical stocks with low or negative earnings.</li>
<li>High-quality value: Equal emphasis is placed on both intrinsic value and evidence of financial strength, high quality management, and demonstrated profitability (the “Warren Buffet” approach).</li>
<li>Income investing: Focus is on high dividend yields and positive dividend growth rates.</li>
<li>Deep-value investing: Focus is on extremely low valuations relative to assets (e.g., low P/B), often due to financial distress.</li>
<li>Restructuring and distressed debt investing: Investing prior to or during an expected bankruptcy filing. The goal is to release value through restructuring the distressed company or through the company having sufficient assets in liquidation to generate appropriate returns.</li>
<li>Special situations: Identifies mispricings due to corporate events such as divestitures, spin-offs, or mergers.</li>
</ul>
<p>Growth-based approaches attempt to identify companies with revenues, earnings, or cash flows that are expected to grow faster than their industry or the overall market. Analysts will be less concerned about high valuation multiples and more concerned about the source and persistence of the growth rates of the company, including:</p>
<ul>
<li>Consistent long-term growth.</li>
<li>Shorter-term earnings momentum.</li>
<li>GARP (growth at a reasonable price); looking for growth at a reasonable valuation. Often this strategy will use the P/E-to-growth (PEG) ratio, which is calculated as the stock’s P/E ratio divided by expected earnings growth in percentage terms.</li>
</ul>
<h3 id="portfolio-management-approaches"><a class="markdownIt-Anchor" href="#portfolio-management-approaches"></a> Portfolio Management Approaches</h3>
<table>
<thead>
<tr>
<th>Investment Style</th>
<th>Description</th>
<th>Active Share and Active Risk</th>
</tr>
</thead>
<tbody>
<tr>
<td>Pure indexing</td>
<td>No active positions: portfolio is equal to the benchmark</td>
<td>Zero Active Share and zero active risk</td>
</tr>
<tr>
<td>Factor neutral</td>
<td>No active factor bets—idiosyncratic risk low if diversified</td>
<td>Low active risk—Active Share low if diversified</td>
</tr>
<tr>
<td>Factor diversified</td>
<td>Balanced exposure to risk factors and minimized idiosyncratic risk through high number of securities in portfolio</td>
<td>Reasonably low active risk—high Active Share from large amount of securities used that are unlikely to be in the benchmark</td>
</tr>
<tr>
<td>Concentrated factor bets</td>
<td>Targeted factor bets—idiosyncratic risk likely to be high</td>
<td>High Active Share and high active risk</td>
</tr>
<tr>
<td>Concentrated stock picker</td>
<td>Targeted individual stock bets</td>
<td>Highest Active Share and highest active risk</td>
</tr>
</tbody>
</table>
<p><img src="/photos/cfa-note/Portfolio-Management-Approaches.png" alt="Portfolio-Management-Approaches" /></p>
<ul>
<li>A closet indexer is defined as a fund that advertises itself as being actively managed but is substantially similar to an index fund in its exposures</li>
<li>A sector rotator would need to have large permitted deviations in sector weights</li>
<li>A stock picker would need to have large permitted deviations in individual security weights</li>
<li>A diversified multi-factor investor has large sector deviations and limited single-security deviation, and low tracking error</li>
</ul>
<h2 id="chapter-derivative-and-currency-management"><a class="markdownIt-Anchor" href="#chapter-derivative-and-currency-management"></a> Chapter: Derivative and Currency Management</h2>
<h3 id="option-strategy"><a class="markdownIt-Anchor" href="#option-strategy"></a> Option Strategy</h3>
<h4 id="covered-call"><a class="markdownIt-Anchor" href="#covered-call"></a> Covered Call</h4>
<h4 id="protective-put"><a class="markdownIt-Anchor" href="#protective-put"></a> Protective Put</h4>
<h4 id="collar"><a class="markdownIt-Anchor" href="#collar"></a> Collar</h4>
<h4 id="straddle"><a class="markdownIt-Anchor" href="#straddle"></a> Straddle</h4>
<h4 id="bull-spread-and-bear-spread"><a class="markdownIt-Anchor" href="#bull-spread-and-bear-spread"></a> Bull Spread and Bear Spread</h4>
<h4 id="calendar-spread"><a class="markdownIt-Anchor" href="#calendar-spread"></a> Calendar Spread</h4>
<p><img src="/photos/cfa-note/option-theta.png" alt="option-theta" /></p>
<p>Options that are close to ATM have the highest thetas, and these increase as expiration approaches. In other words ATM options lose time value at an increasing rate as they mature.</p>
<p>calendar spreads exploit the difference in theta between close-to-expiry and more-distant-from-expiry options. For options that are near to ATM, the nearer-dated options will have a higher absolute value of theta (more negative) than longer-dated options.</p>
<p>A long calendar spread: <strong>buying longer-dated</strong> options and <strong>selling shorter-dated</strong> options with the same strike and underlying. In principle the premium on the shorter-dated should fall faster than the premium on the longer-dated. Thus more value is gained on the short position than is lost on the long position, and a net profit is realized. The options need to be close to ATM, and little movement should be anticipated in the underlying over the period to expiry of the nearer-dated option (large movement might undermine the profit from the strategy). Both options will either be calls or puts, and the choice between calls and puts will reflect the investor’s view on the longer-term prospects for the stock (calls if bullish, puts if bearish).</p>
<p>A short calendar spread: <strong>selling longer-dated</strong> options and <strong>buying shorter-dated</strong> options with the same strike and underlying. When options are sufficiently ITM or OTM the thetas are relatively higher for the longer-dated options.  the belief is that the longer-dated options will lose time value relatively more rapidly, thus the position as a whole should gain. The short calendar spread strategy is vulnerable, however, to the underlying moving so the options end up ATM when the shorter-dated option expires (so the longer-dated option premiums rise, unless implied volatility also falls, and overall there is a loss since we are short). If the stock moves at all during the period of the strategy, it would be better for it to move a lot.</p>
<p>In general:</p>
<ul>
<li>A long calendar spread will benefit from a stable market or an increase in implied volatility.</li>
<li>A short calendar spread will benefit from a big move in the underlying market or a decrease in implied volatility.</li>
</ul>
<h4 id="risk-reversal"><a class="markdownIt-Anchor" href="#risk-reversal"></a> Risk reversal</h4>
<p>volatility skew, is where implied volatility increases for more OTM puts, and decreases for more OTM calls. This is explained by OTM puts being desirable as insurance against market declines (so their values are bid up by higher demand, and higher values imply higher volatility), while the demand for OTM calls is low.</p>
<p>If a trader believes that put implied volatility is relatively too high, compared to that for calls, a long risk reversal could be created by buying the OTM call (seen as relatively underpriced) and selling the OTM put (seen as relatively overpriced) for the same expiration.</p>
<p>The net positive delta exposure is then hedged by shorting the underlying stock.</p>
<h3 id="bpvhr"><a class="markdownIt-Anchor" href="#bpvhr"></a> BPVHR</h3>
<p>BPVHR, i.e. Basis Point Value Hedge Ratio</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>BPVHR</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msub><mtext>BPV</mtext><mtext>target</mtext></msub><mo>−</mo><msub><mtext>BPV</mtext><mtext>port</mtext></msub></mrow><msub><mtext>BPV</mtext><mtext>futures</mtext></msub></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msub><mtext>BPV</mtext><mtext>target</mtext></msub><mo>−</mo><msub><mtext>BPV</mtext><mtext>port</mtext></msub></mrow><msub><mtext>BPV</mtext><mtext>CTD</mtext></msub></mfrac><mo>×</mo><mtext>CF</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\text{BPVHR} &amp; = \frac{\text{BPV}_{\text{target}} - \text{BPV}_{\text{port}}}{\text{BPV}_{\text{futures}}} \\
&amp; = \frac{\text{BPV}_{\text{target}} - \text{BPV}_{\text{port}}}{\text{BPV}_{\text{CTD}}} \times \text{CF}
\end{aligned}

</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.992660000000001em;vertical-align:-2.2463300000000004em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7463300000000004em;"><span style="top:-4.74633em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord text"><span class="mord">BPVHR</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2463300000000004em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7463300000000004em;"><span style="top:-4.74633em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">futures</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">target</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">port</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">CTD</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">target</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28055599999999997em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">port</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">CF</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2463300000000004em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>BPV</mtext><mtext>CTD</mtext></msub></mrow><annotation encoding="application/x-tex">\text{BPV}_{\text{CTD}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">CTD</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>MD</mtext><mtext>CTD</mtext></msub><mo>×</mo><mn>0.0001</mn><mo>×</mo><mo stretchy="false">[</mo><mtext>price</mtext><mi mathvariant="normal">/</mi><mn>100</mn><mo>×</mo><mtext>contract size</mtext><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\text{MD}_{\text{CTD}} \times 0.0001 \times [\text{price} / 100 \times \text{contract size}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">MD</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">CTD</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord text"><span class="mord">price</span></span><span class="mord">/</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">contract size</span></span><span class="mclose">]</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mtext>BPV</mtext><mtext>futures</mtext></msub><mo>≈</mo><mfrac><msub><mtext>BPV</mtext><mtext>CTD</mtext></msub><msub><mtext>CF</mtext><mtext>CTD</mtext></msub></mfrac></mrow><annotation encoding="application/x-tex">\text{BPV}_{\text{futures}} \approx \frac{\text{BPV}_{\text{CTD}}}{\text{CF}_{\text{CTD}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">futures</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.3339409999999998em;vertical-align:-0.44530499999999995em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8886359999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">CF</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">CTD</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.410305em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">BPV</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">CTD</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44530499999999995em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li>
<li>CF: conversion factor</li>
</ul>
<h3 id="fomc-probability-of-rate-change"><a class="markdownIt-Anchor" href="#fomc-probability-of-rate-change"></a> FOMC % probability of rate change</h3>
<p>FOMC, i.e. The Federal Open Market Committee</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mtext>effective rate implied by future</mtext><mo>−</mo><mtext>current fed target rate</mtext></mrow><mrow><mtext>fed fund rate assuming change</mtext><mo>−</mo><mtext>current fed target rate</mtext></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{
    \text{effective rate implied by future} - \text{current fed target rate}
}{
    \text{fed fund rate assuming change} - \text{current fed target rate}
}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">fed fund rate assuming change</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">current fed target rate</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">effective rate implied by future</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">current fed target rate</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<h3 id="cross-currency-basis-swap"><a class="markdownIt-Anchor" href="#cross-currency-basis-swap"></a> Cross-Currency Basis &amp; Swap</h3>
<p>Cross-Currency Basis represents the additional cost of borrowing dollars synthetically with a currency swap relative to the cost of borrowing directly in the USD cash market. Typically, when describing basis we view it from the foreign-currency perspective rather than the USD perspective. If the cost of borrowing dollars synthetically via a swap is greater than the cost of direct USD borrowing, the foreign currency is said to be exhibiting negative basis. Most currencies have shown a negative basis against the dollar since the financial crisis of 2008. The implication is that the USD borrower must accept a lower interest rate on the foreign-currency interest payments it receives.</p>
<p><strong>currency swap</strong> only exchanges interest payments. But <strong>cross-currency basis swap</strong> exchanges both interest and notional principal of each currency at the beginning and end of the swap. Typically, the periodic payments are floating for floating.</p>
<p>Rationale:<br />
A foreign company requiring USD, might not have access to direct USD borrowing or finds it prohibitively expensive.</p>
<p>e.g.:<br />
A French company requires $50 million to invest in US. The cost to borrow USD directly is MRR + 100 bp. it decided to borrow for 4 years in euros at Euribor + 60 bp with interest paid quarterly, and enter a currency swap to exchange euros for dollars. Basis on the Eurodollar swap is being quoted at –20 bps. The swap pays variable interest on both legs on a quarterly settlement basis. The current $/€ exchange rate is $1.1815.</p>
<p>The three-month euro reference rate is 1.5% and U.S. dollar reference rate is 2.0% at swap initiation. Three months later at the first settlement date, the three-month euro reference rate is 1.6% and the U.S. dollar reference rate is 1.9%.</p>
<ul>
<li>At initiation</li>
</ul>
<p>Principal flows: $50,000,000 / $1.1815 = €42,319,086</p>
<p>the company borrows €42,319,086 and exchange it for $50,000,000. These amounts will be swapped back at maturity.</p>
<ul>
<li>At first settlement</li>
</ul>
<p><em>Pays:</em></p>
<ul>
<li>€ interest on the loan: €42,319,086 × (0.015 + 0.006) × 90 / 360 = €222,175</li>
<li>$ interest on the swap: $50,000,000 × 0.02 × 90 / 360 = $250,000</li>
</ul>
<p><em>Receives:</em></p>
<ul>
<li>€ interest on the swap: €42,319,086 × (0.015 − 0.002) × 90 / 360 = €137,537</li>
</ul>
<p><em>Cost of $ financing:</em></p>
<ul>
<li>
<p>Cost of borrowing $ direct: $50,000,000 × (0.02 + 0.01) × 90 / 360 = $375,000 (U.S. dollar reference rate + 100 bp)</p>
</li>
<li>
<p>Cost of synthetic $ borrowing: $50,000,000 × (0.02 + 0.006 + 0.002) × 90 / 360 = $350,000 (U.S. dollar reference rate + 80 bp)</p>
</li>
<li>
<p>Net benefit of swap: $375,000 − $350,000 = $25,000</p>
</li>
<li>
<p>Net benefit of swap: $50,000,000 (1% − 0.8%) × 90 / 360 = $25,000</p>
</li>
<li>
<p>At second settlement</p>
</li>
</ul>
<p><em>Pays:</em></p>
<ul>
<li>€ interest on the loan: €42,319,086 × (0.016 + 0.006) × 90 / 360 = €232,755</li>
<li>$ interest on the swap: $50,000,000 × 0.019 × 90 / 360 = $237,500</li>
</ul>
<p><em>Receives:</em></p>
<ul>
<li>€ interest on the swap: €42,319,086 × (0.016 − 0.002) × 90 / 360 = €148,117</li>
</ul>
<p><em>Cost of $ financing:</em></p>
<ul>
<li>Cost of borrowing $ direct: $50,000,000 × (0.019 + 0.01) × 90 / 360 = $362,500 (U.S. dollar reference rate + 100 bp)</li>
<li>Cost of synthetic $ borrowing: $50,000,000 × (0.019 + 0.006 + 0.002) × 90 / 360 = $337,500 (U.S. dollar reference rate + 80 bp)</li>
<li>Net benefit of swap: $362,500 − $337,500 = $25,000</li>
<li>Net benefit of swap: $50,000,000 (1% − 0.8%) × 90 / 360 = $25,000</li>
</ul>
<p>note:</p>
<ul>
<li>same principal amounts are exchanged at maturity as initialization. (i.e. no exchange risk on principal)</li>
<li>the European company is the <strong>dollar payer</strong>; the swap dealer is the <strong>euro payer</strong>.</li>
<li>By borrowing in euros and entering a currency swap, the company has locked into a cost of the U.S. dollar reference rate + 80 bp for their USD borrowing, reflecting the 60 bp spread above the euro reference rate on the loan and the –20 bp on the swap.</li>
</ul>
<h3 id="vix"><a class="markdownIt-Anchor" href="#vix"></a> VIX</h3>
<p>CBOE Volatility Index, i.e. VIX, measures implied volatility in the S&amp;P 500 Index over a forward period of 30 days. VIX computes a weighted average of implied volatility inferred from S&amp;P 500 traded options (calls and puts) with an average expiration of 30 days. The VIX Index value is the annualized standard deviation of the expected +/− percentage moves in the S&amp;P 500 Index over the following 30 days.</p>
<p>e.g. if the VIX was at 20, we could interpret it as telling us that the market expects that the S&amp;P will stay within a +/−20% range over one year with a 68% level of confidence. This implies a range +/− <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>20</mn><msqrt><mn>12</mn></msqrt></mfrac><mo>=</mo><mn>5.77</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">\frac{20}{\sqrt{12}} = 5.77\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.383108em;vertical-align:-0.5379999999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.5510085em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.912845em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span><span style="top:-2.872845em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.12715500000000002em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5379999999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">5</span><span class="mord">.</span><span class="mord">7</span><span class="mord">7</span><span class="mord">%</span></span></span></span> over the next 30-day period.</p>
<h4 id="vix-futures"><a class="markdownIt-Anchor" href="#vix-futures"></a> VIX futures</h4>
<p>The VIX futures price can be interpreted as the expected S&amp;P 500 Index volatility in the 30-day period after the futures contract expiration date. An equity holding can be protected from extreme downturns (tail risk) by buying VIX futures. Selling VIX futures creates a short volatility position and captures the volatility risk premium embedded in S&amp;P 500 options. Short volatility positions can result in large losses if expected volatility rises significantly. The term structure of VIX futures can provide insights into the market’s expectations of volatility over time.</p>
<h4 id="vix-options"><a class="markdownIt-Anchor" href="#vix-options"></a> VIX Options</h4>
<p>VIX options are cash-settled European-style options. VIX options can only be exercised at contract maturity; therefore, the value of the option is determined by the expectations of VIX at the contract expiry.</p>
<h4 id="other-volatility-indexes"><a class="markdownIt-Anchor" href="#other-volatility-indexes"></a> Other volatility Indexes</h4>
<p>Volatility indexes also exist on European stock market indexes. Using similar methodology to the VIX Index, VSTOXX is an implied volatility-based index based on the EURO STOXX 50 Index. VFTSE is a volatility index based on the FTSE 100, and VDAX-NEW is based on the DAX 30.</p>
<h3 id="variance-swaps"><a class="markdownIt-Anchor" href="#variance-swaps"></a> Variance Swaps</h3>
<p>The party receiving the variable payment (the purchaser) will gain on the contract when the realized variance is greater than the implied variance and will lose when the realized variance is less than the implied variance. A variance swap can, therefore, be viewed as a pure play on whether realized variance will be higher or lower than expected variance (implied variance) over the tenor of the swap.</p>
<p><img src="/photos/cfa-note/variance-swap.png" alt="variance-swap" /></p>
<p>There is no exchange of notional principal at the initiation of the swap. A variance swap also has no interim settlement periods. With a variance swap, there is a single payment at the expiration of the swap based on the difference between actual and implied variance over the life of the swap:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mtext>settlement amount</mtext><mi>T</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mtext>variance notional</mtext><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mtext>realized variance</mtext><mo>−</mo><mtext>variance strike</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{settlement amount}_T = (\text{variance notional})(\text{realized variance} - \text{variance strike})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord text"><span class="mord">settlement amount</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">variance notional</span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord text"><span class="mord">realized variance</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">variance strike</span></span><span class="mclose">)</span></span></span></span></span></p>
<p>The value of the swap is zero at initiation because implied volatility is the best ex ante estimate of realized volatility.</p>
<p>Realized variance is calculated by taking the natural log of the daily price relatives, the closing price on day t, divided by the closing price on day t − 1:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub><mo>=</mo><mi>l</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mi>t</mi></msub><mi mathvariant="normal">/</mi><msub><mi>P</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_i = ln(P_t / P_{t-1})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>If having N days of traded prices, we can compute N − 1 price relatives ®:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>daily variance</mtext><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mfrac><msubsup><mi>R</mi><mi>i</mi><mn>2</mn></msubsup><mrow><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\text{daily variance} = \sum_{i=1}^{N-1} \frac{R_i^2}{(N-1)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">daily variance</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1060050000000006em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>annualized variance = daily variance × 252</p>
<p>The notional amount for a variance swap can be expressed as either variance notional (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mrow><mi>v</mi><mi>a</mi><mi>r</mi></mrow></msub></mrow><annotation encoding="application/x-tex">N_{var}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>) or vega notional (<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mrow><mi>v</mi><mi>e</mi><mi>g</mi><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">N_{vega}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>).</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>p</mi><mi>n</mi><mi>l</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>N</mi><mtext>var</mtext></msub><mo>×</mo><mo stretchy="false">(</mo><msup><mi>σ</mi><mn>2</mn></msup><mo>−</mo><msup><mi>K</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>N</mi><mtext>vega</mtext></msub><mo>×</mo><mo stretchy="false">(</mo><mfrac><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>−</mo><msup><mi>K</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><mi>K</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
pnl &amp;= N_{\text{var}} \times (\sigma^2 - K^2) \\ 
    &amp;= N_{\text{vega}} \times (\frac{\sigma^2 -K^2}{2K})
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.001216em;vertical-align:-1.7506080000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.250608em;"><span style="top:-4.877608em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span><span style="top:-2.7265em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7506080000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.250608em;"><span style="top:-4.877608em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">var</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.7265em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">vega</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7506080000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>since:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>variance notional</mtext><mo>=</mo><mfrac><mtext>vega notional</mtext><mrow><mn>2</mn><mo>×</mo><mtext>strike price (K)</mtext></mrow></mfrac></mrow><annotation encoding="application/x-tex">\text{variance notional} = \frac{\text{vega notional}}{2 \times \text{strike price (K)}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">variance notional</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.3074399999999997em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">strike price (K)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">vega notional</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<h3 id="currency-quotes"><a class="markdownIt-Anchor" href="#currency-quotes"></a> Currency Quotes</h3>
<p>The Price and Base Currencies: The base currency is the denominator of the exchange rate and it is priced in terms of the numerator. Unless clearly identified otherwise, the terms “buy” and “sell” refer to the base currency. e.g. sell spot 1,000,000 at CAD/USD 0.9800 is assumed to mean sell for “immediate delivery” 1,000,000 U.S. dollars and buy 980,000 Canadian dollars.</p>
<p>Bid/Asked Rules: Currencies are quoted with a bid/offered or bid/asked price. By convention, the smaller number is written first and the larger number is second. e.g. A quote of 0.9790/0.9810 CAD/USD. The customer pays the bid/ask spread, paying more and/or receiving less in the transaction.</p>
<p>Forward points are an adjustment to the spot price to determine the forward price, e.g.</p>
<table>
<thead>
<tr>
<th>Spot Quote</th>
<th>Forward Points</th>
<th>Points with Decimal Adjusted</th>
<th>Forward Price</th>
</tr>
</thead>
<tbody>
<tr>
<td>1.33</td>
<td>1.1</td>
<td>1.1 / 100 = 0.011</td>
<td>1.33 + 0.011 = 1.341</td>
</tr>
<tr>
<td>2.554</td>
<td>–9.6</td>
<td>–9.6 / 1,000 = –0.0096</td>
<td>2.554 − 0.0096 = 2.5444</td>
</tr>
<tr>
<td>0.7654</td>
<td>13.67</td>
<td>13.67 / 10,000 = 0.001367</td>
<td>0.7654 + 0.001367 = 0.766767</td>
</tr>
</tbody>
</table>
<p>Spot and forward bid/asked, e.g.</p>
<table>
<thead>
<tr>
<th>Maturity/Settlement</th>
<th>Spot Quote/Forward Points</th>
</tr>
</thead>
<tbody>
<tr>
<td>Spot AUD/EUR</td>
<td>1.2571/1.2574</td>
</tr>
<tr>
<td>30 days</td>
<td>–1.0/–0.9</td>
</tr>
<tr>
<td>90 days</td>
<td>+11.7/+12.0</td>
</tr>
</tbody>
</table>
<p>FX Swap, a misnomer, rolls over a maturing forward contract using a spot transaction into a new forward contract. An existing forward is “swapped” for another forward transaction.</p>
<h3 id="currency-effects-on-return-and-risk"><a class="markdownIt-Anchor" href="#currency-effects-on-return-and-risk"></a> Currency effects on return and risk</h3>
<h4 id="return"><a class="markdownIt-Anchor" href="#return"></a> return</h4>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>R</mi><mrow><mi>D</mi><mi>C</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≈</mo><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub><mo>+</mo><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
  R_{DC} &amp;= (1+R_{FC})(1+R_{FX}) - 1 \\ 
         &amp;\approx R_{FC} + R_{FX}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000000000000004em;vertical-align:-1.2500000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>note:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>D</mi><mi>C</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{DC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = asset return denoted in domestic currency</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{FC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = asset return denoted in foreign currency</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{FX}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = percentage change in value of the foreign currency denoted in D/F (use domestic/foreign and then solve as EV / BV − 1 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{FX}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)</li>
</ul>
<h4 id="risk"><a class="markdownIt-Anchor" href="#risk"></a> risk</h4>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>σ</mi><msub><mi>R</mi><mrow><mi>D</mi><mi>C</mi></mrow></msub><mn>2</mn></msubsup><mo>≈</mo><msubsup><mi>σ</mi><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>σ</mi><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub><mn>2</mn></msubsup><mo>+</mo><mn>2</mn><msub><mi>σ</mi><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub></msub><msub><mi>σ</mi><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub></msub><msub><mi>ρ</mi><mrow><mo stretchy="false">(</mo><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub><mo separator="true">,</mo><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">\sigma_{R_{DC}}^2 \approx \sigma_{R_{FC}}^2 + \sigma_{R_{FX}}^2 + 2\sigma_{R_{FC}}\sigma_{R_{FX}}\rho_{(R_{FC}, R_{FX})}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2114129999999999em;vertical-align:-0.347305em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.347305em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2114129999999999em;vertical-align:-0.347305em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.347305em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2114129999999999em;vertical-align:-0.347305em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.347305em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9996399999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>note:</p>
<ul>
<li>for domestic investor, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><msub><mi>R</mi><mrow><mi>D</mi><mi>C</mi></mrow></msub><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{R_{DC}}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.189744em;vertical-align:-0.37563599999999997em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.424669em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.37563599999999997em;"><span></span></span></span></span></span></span></span></span></span> is usually higher than <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>σ</mi><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">\sigma_{R_{FC}}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.189744em;vertical-align:-0.37563599999999997em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.424669em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.37563599999999997em;"><span></span></span></span></span></span></span></span></span></span>, meaning more risk</li>
<li>correlation between <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{FC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{FX}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> matters:
<ul>
<li>if positive, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{FC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is amplified by <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{FX}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, increasing the volatility to domestic investor</li>
<li>if negative, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{FC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is dampened by <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{FX}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, decreasing the volatility to domestic investor</li>
</ul>
</li>
</ul>
<p>special case if <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{FC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> is a risk-free return:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>σ</mi><msub><mi>R</mi><mrow><mi>D</mi><mi>C</mi></mrow></msub><mo>=</mo><msub><mi>σ</mi><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub></msub><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>R</mi><mrow><mi>F</mi><mi>C</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma{R_{DC}} = \sigma_{R_{FX}} (1 + R_{FC})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.000305em;vertical-align:-0.250305em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.00773em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.250305em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>minimum variance hedge ratio (MVHR) is a mathematical approach to determining the hedge ratio. When applied to currency hedging, it is a regression of the past changes in value of the portfolio <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>D</mi><mi>C</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{DC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> to the past changes in value of the <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>F</mi><mi>X</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{FX}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> to minimize the variance of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>D</mi><mi>C</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{DC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>. The hedge ratio is the beta (slope coefficient) of that regression. e.g.</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mrow><mi>D</mi><mi>C</mi></mrow></msub></mrow><annotation encoding="application/x-tex">R_{DC}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = 0.12 + 1.25(%Δ<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>U</mi><mi>S</mi><mi>D</mi><mi mathvariant="normal">/</mi><mi>E</mi><mi>U</mi><mi>R</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{USD/EUR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">U</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="mord mtight">/</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">U</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>) + ε</p>
<p>hedge ratio = 1.25, the manager will short EUR 1.25 times a long EUR exposure in the portfolio</p>
<h3 id="ndfs"><a class="markdownIt-Anchor" href="#ndfs"></a> NDFs</h3>
<p>NDFs, i.e. Non-Deliverable Forward, alternative to deliverable forwards and require a cash settlement of gains or losses in a developed market currency at settlement rather than a currency exchange. Emerging market governments frequently restrict movement of their currency into or out of the country to settle normal derivative transactions. Such countries have included Brazil (BRL), China (CNY), and Russia (RUB).</p>
<p>A benefit of NDFs is lower credit risk because delivery of the notional amounts of both currencies is not required. Only the gains to one party are paid at settlement, <strong>made in the developed market currency</strong>.</p>
<h2 id="chapter-alternative-investment"><a class="markdownIt-Anchor" href="#chapter-alternative-investment"></a> Chapter: Alternative Investment</h2>
<h3 id="hedge-fund-strategy"><a class="markdownIt-Anchor" href="#hedge-fund-strategy"></a> Hedge Fund Strategy</h3>
<p>six strategy categories:</p>
<ul>
<li>
<ol>
<li>Equity related</li>
</ol>
</li>
<li>
<ol start="2">
<li>Event driven</li>
</ol>
</li>
<li>
<ol start="3">
<li>Relative value</li>
</ol>
</li>
<li>
<ol start="4">
<li>Opportunistic</li>
</ol>
</li>
<li>
<ol start="5">
<li>Specialist</li>
</ol>
</li>
<li>
<ol start="6">
<li>Multi-manager</li>
</ol>
</li>
</ul>
<h4 id="equity-related"><a class="markdownIt-Anchor" href="#equity-related"></a> Equity-related</h4>
<p>Ranked by overall long exposure to market</p>
<h5 id="ls-equity"><a class="markdownIt-Anchor" href="#ls-equity"></a> L/S Equity:</h5>
<p>L/S Equity, i.e. Long/Short Equity. The fund manager longs stocks that they think will rise, and shorts stocks that they believe will fall.</p>
<ul>
<li>typically have 40% - 60% net long exposure, benefitting from market’s long term upward trend</li>
<li>more concentrated on particular sector or industry</li>
<li>aspire to provide returns comparable to long-only fund, but with half of volatility</li>
<li>may use leverage to achieve worthwhile returns</li>
</ul>
<p>Example:</p>
<ul>
<li>Long extension: net exposure of 100%. e.g. 130/30 fund (gross exposure 160%)</li>
</ul>
<h5 id="emn"><a class="markdownIt-Anchor" href="#emn"></a> EMN:</h5>
<p>EMN, i.e. Equity Market Neutral</p>
<ul>
<li>near-zero market risk exposure; (immune to overall market movements)</li>
<li>systematic approach to take long and short positions in diversified stocks</li>
<li>alpha seeking, low volatility</li>
<li>leverage is generally applied to achieve acceptable level of return</li>
</ul>
<h5 id="dedicated-short-selling-and-short-biased"><a class="markdownIt-Anchor" href="#dedicated-short-selling-and-short-biased"></a> Dedicated Short Selling and Short-Biased</h5>
<p>dedicated short-selling: pure shorts overpriced stocks (e.g. poorly managed, in declining market segment, or with deceitful accounting); typically 60% - 120% short (by holding the rest in cash).</p>
<p>short-biased, similar except somewhat offset by a long exposure</p>
<ul>
<li>negative corr with market, lower returns, greater volatility, little leverage</li>
<li>activist short selling: not only shorts, but also presents research that contends overprice</li>
</ul>
<h4 id="event-driven"><a class="markdownIt-Anchor" href="#event-driven"></a> Event driven</h4>
<ul>
<li>soft-catalyst event-driven approach: investment made before an event is being announced</li>
<li>hard-catalyst event-driven approach: investment made after a corporate event is being announced, taking advantage of security prices that have not fully adjusted.</li>
</ul>
<p>note: Soft-catalyst investing is generally more volatile and, thus, riskier than a hard-catalyst approach.</p>
<h5 id="merger-arbitrage"><a class="markdownIt-Anchor" href="#merger-arbitrage"></a> Merger Arbitrage</h5>
<p>long target company stock, and short acquiring company stock. Reverse if assume a failed merger (e.g., antitrust regulation)</p>
<ul>
<li>possibly 300% to 500% leverage for returns</li>
<li>high sharpe ratios (relatively steady returns), but large left-tail risk (merger unexpectedly fails)</li>
</ul>
<h5 id="distressed-securities"><a class="markdownIt-Anchor" href="#distressed-securities"></a> Distressed Securities</h5>
<p>take positions in the securities of firms that are in financial distress, including firms that are in bankruptcy or near bankruptcy. Firms may find themselves in this position for a number of reasons, including too much leverage, difficulty competing in their sector, or accounting issues. The securities of such a firm will often trade at greatly depressed prices.</p>
<p>Compounding the discounting of the securities of distressed firms is the fact that institutions such as insurance companies and banks are often not permitted to hold non-investment-grade securities. The selling of such securities can create significant pricing inefficiencies and can open up opportunities for hedge funds seeking profit.</p>
<h4 id="relative-value"><a class="markdownIt-Anchor" href="#relative-value"></a> Relative Value</h4>
<p>attempt to exploit valuation differences between securities</p>
<h5 id="fixed-income-arbitrage"><a class="markdownIt-Anchor" href="#fixed-income-arbitrage"></a> Fixed-Income Arbitrage</h5>
<p>take advantage of temporary mispricing of fixed-income instruments, by going long comparatively undervalued securities, and going short comparatively overvalued securities, under the assumption that prices will revert toward their fair values.</p>
<ul>
<li>Yield curve trades: anticipated changes in yields</li>
<li>Carry trades: long high-yielding and short low yielding</li>
</ul>
<p>note:</p>
<ul>
<li>substantial leverage is often applied, since fixed-income securities tend to be priced fairly efficiently, the amount of profit that can be earned by fixed-income arbitrage is somewhat limited. 400% leverage is not uncommon; even 1500% leverage is not unheard of.</li>
</ul>
<h5 id="convertible-bond-arbitrage"><a class="markdownIt-Anchor" href="#convertible-bond-arbitrage"></a> Convertible Bond Arbitrage</h5>
<p>One way to view convertible bonds is as a regular bond plus a long call option on the corresponding stock</p>
<p>exploit the fact that the options within convertible instruments usually exhibit low implied volatilities when compared to the historical volatilities of the equities that underlie the option. To do this without taking on excess risk, convertible bond arbitrageurs will take on other positions to try to hedge out the delta and gamma risk of the convertible bond holdings.</p>
<p>buy relatively undervalued convertible bond and short the relatively overvalued underlying stock</p>
<ul>
<li>delta-hedge based on delta of the convertible bond, typically 300% long vs 200% short</li>
<li>profitable if realized equity volatility exceeds implied volatility of convertible’s embedded option net of costs.</li>
</ul>
<h4 id="opportunistic"><a class="markdownIt-Anchor" href="#opportunistic"></a> Opportunistic</h4>
<p>top-down focus on regions, sectors, asset classes (not individual securities). Diversification potential with traditional assets, often with beneficial right-tail skew. Highly liquid, and high leverage.</p>
<h5 id="global-macro"><a class="markdownIt-Anchor" href="#global-macro"></a> Global Macro</h5>
<p>identify global economic changes (e.g. inflation, FX, rates). may use significant leverage (600% - 700%). Can have high alpha and strong diversification potential. Successful manager being contrarian, investing ahead of others.</p>
<h5 id="managed-futures"><a class="markdownIt-Anchor" href="#managed-futures"></a> Managed Futures</h5>
<p>invest long-short via derivatives, usually with high leverage (built-in feature of margin trading). Possible crowding. Typically systematic. many based on volatility or momentum. use signals for exit.</p>
<h4 id="specialist"><a class="markdownIt-Anchor" href="#specialist"></a> Specialist</h4>
<h5 id="volatility-trading"><a class="markdownIt-Anchor" href="#volatility-trading"></a> Volatility trading</h5>
<p>exploit mispriced volatility (exploit skew and smile volatility surface), using:</p>
<ul>
<li>options (e.g. straddles, calendar and price spreads)</li>
<li>futures on VIX</li>
<li>Variance swaps</li>
</ul>
<p>note:</p>
<ul>
<li>potential large gains due to convexity of volatility derivatives</li>
<li>hard to benchmark</li>
</ul>
<h5 id="reinsurance-life-settlements"><a class="markdownIt-Anchor" href="#reinsurance-life-settlements"></a> Reinsurance / Life settlements</h5>
<ul>
<li>
<p>Life settlement: HF buys policy from insured, takes over premium payments and receives death benefits</p>
</li>
<li>
<p>Catastrophe risk reinsurance: HF buys earthquake, tornado, hurricane, flood, etc insurance from reinsurer. Considerable expertise required. Typically illiquid.</p>
</li>
</ul>
<h4 id="multi-manager"><a class="markdownIt-Anchor" href="#multi-manager"></a> Multi-manager</h4>
<p>A portfolio of various HF diversified strategies</p>
<h5 id="fof-funds-of-funds"><a class="markdownIt-Anchor" href="#fof-funds-of-funds"></a> FoF (Funds-of-funds)</h5>
<p>typically 2% management fees + 20% performance incentive on gross gains net of management fees &amp; expenses. Plus fees charged by FoF manager. Lack of transparency into individual HFs; principle-agent issues. Multi-layer fees, no performance fee netting across managers. May include HFs otherwise inaccessible.</p>
<h5 id="multi-strategy-funds"><a class="markdownIt-Anchor" href="#multi-strategy-funds"></a> Multi-strategy funds</h5>
<p>One org, better knowledge over when, how much capital and leverage, of fund correlations and risks. Ease of reallocation between strategies. Absorb netting risk internally (favorable fees). Less diversified operational risk.</p>
<h3 id="investment-opportunity-set"><a class="markdownIt-Anchor" href="#investment-opportunity-set"></a> Investment Opportunity Set</h3>
<ul>
<li>traditional approach:</li>
</ul>
<p><img src="/photos/cfa-note/Liquidity-Based-Investment-Opportunity-Set.png" alt="Liquidity-Based-Investment-Opportunity-Set" /></p>
<p><img src="/photos/cfa-note/Economic-Environment-Based-Investment-Opportunity-Set.png" alt="Economic-Environment-Based-Investment-Opportunity-Set" /></p>
<ul>
<li>risk factor based approach:</li>
</ul>
<p>defining asset classes by statistically estimating their sensitivities to risk factors, e.g. economic growth and inflation, interest rates and credit spreads, or currency values, liquidity, capitalization, and value-versus-growth.</p>
<p>advantage:</p>
<ul>
<li>Identifying sources of risk that are common across asset classes, mitigating a limitation of the traditional approaches, which may classify investments into different classes even when they face largely the same risk factors, leading a manager to believe the portfolio is more diversified than it actually is.</li>
<li>by allowing a manager to analyze multiple dimensions of portfolio risk, this approach is useful for developing an integrated risk management framework. In this sense, it can be more useful than the traditional approaches for highlighting the primary drivers of portfolio risk.</li>
</ul>
<p>disadvantage:</p>
<ul>
<li>risk factor estimates can be sensitive to the period used for analysis</li>
<li>The results may also be more difficult to communicate to decision makers and to implement compared to traditional approaches.</li>
</ul>
<h2 id="chapter-private-wealth-management"><a class="markdownIt-Anchor" href="#chapter-private-wealth-management"></a> Chapter: Private Wealth Management</h2>
<h3 id="ttllu-rr"><a class="markdownIt-Anchor" href="#ttllu-rr"></a> TTLLU-RR</h3>
<p>set of consideration for private wealth management</p>
<ul>
<li>T: Time horizon;</li>
<li>T: Taxes;</li>
<li>L: Liquidity</li>
<li>L: Legal issues</li>
<li>U: Unique Constraints</li>
<li>R: Returns</li>
<li>R: Risk
<ul>
<li>ATBR: ability to bear risk</li>
<li>WTBR: willingness to bear risk</li>
</ul>
</li>
</ul>
<h3 id="samurai"><a class="markdownIt-Anchor" href="#samurai"></a> SAMURAI</h3>
<p>criteria for a good benchmark</p>
<ul>
<li>S: Specified in advance</li>
<li>A: Appropriate and consistent with the manager’s investment style</li>
<li>M: Measurable</li>
<li>U: Unambiguous, able to clearly identify the securities</li>
<li>R: Reflective of current investment opinions</li>
<li>A: Accountable, accepted by the manager</li>
<li>I: Investible, possible to replicate passively</li>
</ul>
<h3 id="portfolio-reporting"><a class="markdownIt-Anchor" href="#portfolio-reporting"></a> Portfolio Reporting</h3>
<p>Portfolio reporting enables private clients to understand how their investment portfolio is performing and whether their financial goals are likely to be achieved. It provides a basis for a private wealth manager to review a client’s IPS and investment strategy with the client to determine if changes are required to achieve the client’s goals.</p>
<ul>
<li>Performance summary for the current period.</li>
<li>Market commentary for the current period to provide context for the portfolio’s performance.</li>
<li>Portfolio asset allocation at the end of the current period, including strategic asset allocation - weights or tactical asset class target ranges.</li>
<li>Detailed performance of asset classes and individual securities.</li>
<li>Benchmark report comparing asset class and overall portfolio performance to appropriate benchmarks.</li>
<li>Historical performance of client’s investment portfolio since inception.</li>
<li>Transaction details for the current period (e.g., contributions, withdrawals, interest, dividends, and capital appreciation).</li>
<li>Purchase and sale report for the current period.</li>
<li>Impact of currency exposure and exchange-rate fluctuations.</li>
<li>Progress toward meeting goal portfolios when using a goals-based investing approach.</li>
</ul>
<h3 id="portfolio-review"><a class="markdownIt-Anchor" href="#portfolio-review"></a> Portfolio Review</h3>
<p>A portfolio review enables the private wealth manager to reassess a client’s IPS and investment strategy in light of recent performance to determine if changes are required. A portfolio review typically addresses the following areas:</p>
<ul>
<li>Appropriateness of client’s existing goals and investment parameters and if any changes are  required.</li>
<li>Rebalancing of portfolio asset allocation to target allocation or ranges.</li>
<li>Any changes to the wealth manager’s ongoing management of the portfolio (e.g., degree of - discretionary authority).</li>
<li>Any changes or updates in the wealth manager’s duties and responsibilities.</li>
<li>Any changes to IPS and portfolio review frequency.</li>
</ul>
<h3 id="balance-sheet-management-of-banks-and-insurers"><a class="markdownIt-Anchor" href="#balance-sheet-management-of-banks-and-insurers"></a> Balance Sheet Management of Banks and Insurers</h3>
<p>how changes in the market value of assets, liabilities, and leverage levels affect the change in the market value of equity is:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>E</mi><mo>=</mo><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>A</mi><mo>⋅</mo><mi>M</mi><mo>−</mo><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>L</mi><mo>⋅</mo><mo stretchy="false">(</mo><mi>M</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\%\Delta E = \%\Delta A \cdot M - \%\Delta L \cdot (M - 1)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">\%\Delta E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span> = percentage change in the value of equity</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\%\Delta A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord mathnormal">A</span></span></span></span> = percentage change in the value of assets</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi><mi mathvariant="normal">Δ</mi><mi>L</mi></mrow><annotation encoding="application/x-tex">\%\Delta L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span><span class="mord">Δ</span><span class="mord mathnormal">L</span></span></span></span> = percentage change in the value of liabilities</li>
<li>M = leverage multiplier, A / E</li>
</ul>
<p>The sensitivity of the institution’s equity capital to a unit change in the reference yield, y, of the assets (i.e., the modified duration of the equity capital) is:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>D</mi><mi>E</mi></msub><mo>=</mo><msub><mi>D</mi><mi>A</mi></msub><mo>⋅</mo><mi>M</mi><mo>−</mo><msub><mi>D</mi><mi>L</mi></msub><mo>⋅</mo><mo stretchy="false">(</mo><mi>M</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⋅</mo><mfrac><mrow><mi mathvariant="normal">Δ</mi><mi>i</mi></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>y</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">D_E = D_A \cdot M - D_L \cdot (M - 1) \cdot \frac{\Delta i}{\Delta y}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.2407700000000004em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord mathnormal">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>E</mi></msub></mrow><annotation encoding="application/x-tex">D_E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = modified duration of the institution’s equity capital</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">D_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = modified duration of the institution’s assets</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">D_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = modified duration of the institution’s liabilities</li>
<li>M = leverage multiplier, A / E</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">Δ</mi><mi>i</mi></mrow><mrow><mi mathvariant="normal">Δ</mi><mi>y</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\Delta i}{\Delta y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3534389999999998em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Δ</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> = estimated change in yield of liabilities, i, relative to a unit change in yield of assets, y</li>
</ul>
<p>Expected volatility of the percentage changes in the market value of equity capital:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>σ</mi><mi>E</mi><mn>2</mn></msubsup><mo>=</mo><msup><mi>M</mi><mn>2</mn></msup><msubsup><mi>σ</mi><mi>A</mi><mn>2</mn></msubsup><mo>+</mo><mo stretchy="false">(</mo><mi>M</mi><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><msubsup><mi>σ</mi><mi>L</mi><mn>2</mn></msubsup><mo>−</mo><mn>2</mn><mi>M</mi><mo stretchy="false">(</mo><mi>M</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msub><mi>σ</mi><mi>A</mi></msub><msub><mi>σ</mi><mi>L</mi></msub><msub><mi>ρ</mi><mrow><mi>A</mi><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\sigma_E^2 = M^2 \sigma_A^2 + (M - 1)^2 \sigma_L^2 - 2 M (M - 1) \sigma_A \sigma_L \rho_{AL}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>E</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = standard deviation of percentage change in the market value of equity</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = standard deviation of percentage change in the value of assets</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = standard deviation of percentage change in the value of liabilities</li>
<li>M = leverage multiplier, A / E</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>ρ</mi><mrow><mi>A</mi><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\rho_{AL}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">ρ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> = correlation of percentage value changes in assets and liabilities</li>
</ul>
<h3 id="estate-planing"><a class="markdownIt-Anchor" href="#estate-planing"></a> Estate Planing</h3>
<p>Lifetime Gifts vs Testamentary Bequests:</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left right left" columnspacing="0em 1em 0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>F</mi><msub><mi>V</mi><mtext>gift</mtext></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">[</mo><mn>1</mn><mo>+</mo><msub><mi>r</mi><mi>g</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>t</mi><mi>g</mi></msub><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mi>n</mi></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>T</mi><mi>g</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>F</mi><msub><mi>V</mi><mtext>bequest</mtext></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">[</mo><mn>1</mn><mo>+</mo><msub><mi>r</mi><mi>e</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>t</mi><mi>e</mi></msub><mo stretchy="false">)</mo><msup><mo stretchy="false">]</mo><mi>n</mi></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>T</mi><mi>e</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>R</mi><mi>V</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>F</mi><msub><mi>V</mi><mtext>gift</mtext></msub></mrow><mrow><mi>F</mi><msub><mi>V</mi><mtext>bequest</mtext></msub></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
&amp; FV_{\text{gift}} &amp;&amp;= [1 + r_g(1-t_g)]^n(1-T_g) \\
&amp; FV_{\text{bequest}} &amp;&amp;= [1 + r_e(1-t_e)]^n(1-T_e) \\
&amp; RV &amp;&amp;= \frac{FV_{\text{gift}}}{FV_{\text{bequest}}}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.6324380000000005em;vertical-align:-2.5662190000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0662190000000002em;"><span style="top:-5.586549000000001em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span><span style="top:-4.086549em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span><span style="top:-2.0662190000000002em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5662190000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0662190000000002em;"><span style="top:-5.586549000000001em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">gift</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.086549em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">bequest</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.0662190000000002em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5662190000000002em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0662190000000002em;"><span style="top:-5.586549000000001em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span><span style="top:-4.086549em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span><span style="top:-2.0662190000000002em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5662190000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0662190000000002em;"><span style="top:-5.586549000000001em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-4.086549em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.0662190000000002em;"><span class="pstrut" style="height:3.3603300000000003em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">bequest</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">gift</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5662190000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>note:</p>
<ul>
<li>RV of tax-free gift, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>g</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">T_g = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></li>
</ul>
<h3 id="life-insurance-cost-comparison"><a class="markdownIt-Anchor" href="#life-insurance-cost-comparison"></a> Life Insurance cost comparison</h3>
<ul>
<li>Net payment cost index: assumes the individual dies at the end of the horizon and cash value is not considered</li>
<li>Net surrender cost index: assumes the individual terminates the policy (insurance ceases) at the end of the horizon and the cash value is received</li>
</ul>
<p>steps:</p>
<ul>
<li>
<ol>
<li>use annuity due (BGN mode) to compute FV of the premium</li>
</ol>
</li>
<li>
<ol start="2">
<li>use ordinary annuity (END mode) to compute FV of the dividend</li>
</ol>
</li>
<li>
<ol start="3">
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><msub><mi>V</mi><mtext>premium</mtext></msub><mo>−</mo><mi>F</mi><msub><mi>V</mi><mtext>dividend</mtext></msub></mrow><annotation encoding="application/x-tex">FV_{\text{premium}} - FV_{\text{dividend}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.317502em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">premium</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">dividend</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, further minus cash value if using new surrender cost index</li>
</ol>
</li>
<li>
<ol start="4">
<li>use annuity due (BGN mode) to compute annuitized cost</li>
</ol>
</li>
</ul>
<h3 id="growth-adjusted-discount-rate"><a class="markdownIt-Anchor" href="#growth-adjusted-discount-rate"></a> Growth-adjusted discount rate</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>r</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>g</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">r = (1 + r) / (1 + g) - 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<h3 id="taxation"><a class="markdownIt-Anchor" href="#taxation"></a> Taxation</h3>
<h4 id="after-tax-holding-period-return"><a class="markdownIt-Anchor" href="#after-tax-holding-period-return"></a> After-Tax Holding Period Return</h4>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>R</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mfrac><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><msub><mi>e</mi><mn>1</mn></msub><mo>−</mo><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><msub><mi>e</mi><mn>0</mn></msub><mo>+</mo><mi>i</mi><mi>n</mi><mi>c</mi><mi>o</mi><mi>m</mi><mi>e</mi><mo>−</mo><mi>t</mi><mi>a</mi><mi>x</mi></mrow><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><msub><mi>e</mi><mn>0</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">R&#x27; = \frac{value_1 - value_0 + income - tax}{value_0}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">c</span><span class="mord mathnormal">o</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>or</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>R</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>R</mi><mo>−</mo><mfrac><mrow><mi>t</mi><mi>a</mi><mi>x</mi></mrow><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><msub><mi>e</mi><mn>0</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">R&#x27; = R - \frac{tax}{value_0}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.1280799999999997em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.29208em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>note:</p>
<ul>
<li>if any intermediate cashflow paid as income, adjust <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mi>u</mi><msub><mi>e</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">value_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> using the way used in modified dietz return</li>
</ul>
<h4 id="after-tax-post-liquidation-return"><a class="markdownIt-Anchor" href="#after-tax-post-liquidation-return"></a> After-Tax Post-Liquidation Return</h4>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mrow><mi>P</mi><mi>L</mi></mrow></msub><mo>=</mo><mroot><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msubsup><mi>R</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msubsup><mi>R</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo>⋯</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msubsup><mi>R</mi><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mtext>liquidity tax</mtext><mi mathvariant="normal">/</mi><mtext>final value</mtext><mo stretchy="false">)</mo></mrow><mi>n</mi></mroot><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">R_{PL} = \sqrt[n]{(1 + R&#x27;_1)(1 + R&#x27;_2) \cdots (1 + R&#x27;_n)(1 - \text{liquidity tax} / {\text{final value}})} - 1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.564279em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6421452000000001em;"><span style="top:-2.9268652em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.275721em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.733692em;"><span style="top:-2.433692em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.733692em;"><span style="top:-2.433692em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.677892em;"><span style="top:-2.4530000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">liquidity tax</span></span><span class="mord">/</span><span class="mord"><span class="mord text"><span class="mord">final value</span></span></span><span class="mclose">)</span></span></span><span style="top:-3.235721em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90
l0 -0
c4,-6.7,10,-10,18,-10 H400000v40
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.564279em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<h4 id="after-tax-excess-return"><a class="markdownIt-Anchor" href="#after-tax-excess-return"></a> After-Tax Excess Return</h4>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><msup><mi>R</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>−</mo><msup><mi>B</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">x&#x27; = R&#x27; - B&#x27;
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8852220000000001em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">R&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> = after-tax return of the portfolio</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>B</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">B&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> = after-tax return of the benchmark</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>α</mi><mtext>tax</mtext></msub><mo>=</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>−</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\alpha_{\text{tax}} = x&#x27; - x
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">tax</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8852220000000001em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">x&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> = after-tax excess return</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> = pretax excess return</li>
</ul>
<h4 id="tax-efficiency-ratio-ter"><a class="markdownIt-Anchor" href="#tax-efficiency-ratio-ter"></a> Tax-Efficiency Ratio (TER)</h4>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mi>E</mi><mi>R</mi><mo>=</mo><mfrac><msup><mi>R</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi>R</mi></mfrac></mrow><annotation encoding="application/x-tex">TER = \frac{R&#x27;}{R}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.114892em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">R&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> = after-tax return</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span> = pretax return</li>
</ul>
<p>note:</p>
<ul>
<li>for positive returns in taxable accounts, the higher the TER, the better.</li>
</ul>
<h2 id="chapter-trading-performance-evaluation"><a class="markdownIt-Anchor" href="#chapter-trading-performance-evaluation"></a> Chapter: Trading, Performance Evaluation</h2>
<h3 id="implementation-shortfall"><a class="markdownIt-Anchor" href="#implementation-shortfall"></a> Implementation Shortfall</h3>
<p>IS (i.e. implementation shortfall) measures the total cost of trading, expressed as basis points of the total cost of the paper portfolio. e.g. buy order</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>IS</mtext><mo>=</mo><mtext>paper return</mtext><mo>−</mo><mtext>actual return</mtext></mrow><annotation encoding="application/x-tex">\text{IS} = \text{paper return} - \text{actual return}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord text"><span class="mord">IS</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">paper return</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">actual return</span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>paper return</mtext><mo>=</mo><mtext>total order size</mtext><mo>×</mo><mo stretchy="false">(</mo><mtext>close price</mtext><mo>−</mo><mtext>decision price</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{paper return} = \text{total order size} \times (\text{close price} - \text{decision price})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">paper return</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord">total order size</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">close price</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">decision price</span></span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>actual return</mtext><mo>=</mo><mtext>filled order size</mtext><mo>×</mo><mo stretchy="false">(</mo><mtext>close price</mtext><mo>−</mo><mtext>execution price</mtext><mo stretchy="false">)</mo><mo>−</mo><mtext>commission</mtext></mrow><annotation encoding="application/x-tex">\text{actual return} = \text{filled order size} \times (\text{close price} - \text{execution price}) - \text{commission}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">actual return</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord">filled order size</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">close price</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">execution price</span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66786em;vertical-align:0em;"></span><span class="mord text"><span class="mord">commission</span></span></span></span></span></li>
</ul>
<p>Decomposition of IS. e.g. buy order</p>
<ul>
<li>Execution cost = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>filled order size</mtext><mo>×</mo><mo stretchy="false">(</mo><mtext>execution price</mtext><mo>−</mo><mtext>decision price</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{filled order size} \times (\text{execution price} - \text{decision price})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord">filled order size</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">execution price</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">decision price</span></span><span class="mclose">)</span></span></span></span>
<ul>
<li>Delay cost = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>filled order size</mtext><mo>×</mo><mo stretchy="false">(</mo><mtext>arrival price</mtext><mo>−</mo><mtext>decision price</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{filled order size} \times (\text{arrival price} - \text{decision price})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord">filled order size</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">arrival price</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">decision price</span></span><span class="mclose">)</span></span></span></span>:</li>
<li>trading cost (i.e. market impact cost) = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>filled order size</mtext><mo>×</mo><mo stretchy="false">(</mo><mtext>execution price</mtext><mo>−</mo><mtext>arrival price</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{filled order size} \times (\text{execution price} - \text{arrival price})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord">filled order size</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">execution price</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">arrival price</span></span><span class="mclose">)</span></span></span></span></li>
</ul>
</li>
<li>Opportunity cost = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>unfilled order size</mtext><mo>×</mo><mo stretchy="false">(</mo><mtext>close price</mtext><mo>−</mo><mtext>decision price</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{unfilled order size} \times (\text{close price} - \text{decision price})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord">unfilled order size</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">close price</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">decision price</span></span><span class="mclose">)</span></span></span></span></li>
<li>Fixed cost = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>filled order size</mtext><mo>×</mo><mtext>commission</mtext></mrow><annotation encoding="application/x-tex">\text{filled order size} \times \text{commission}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord">filled order size</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66786em;vertical-align:0em;"></span><span class="mord text"><span class="mord">commission</span></span></span></span></span></li>
</ul>
<p>note:</p>
<ul>
<li>for sell order, flip the sign</li>
<li>execution risk: adverse price movement occurs over the trading horizon (in volatile market)</li>
<li>market impact cost: trade at more adverse prices to execute a larger transaction (in illiquid market)</li>
</ul>
<h3 id="market-adjusted-cost"><a class="markdownIt-Anchor" href="#market-adjusted-cost"></a> Market-adjusted cost</h3>
<p>market-adjusted cost removes the impact of market movements on trade cost.</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>market-adjusted cost(bps)</mtext><mo>=</mo><mtext>arrival cost(bps)</mtext><mo>−</mo><mi>β</mi><mo>×</mo><mtext>index cost(bps)</mtext></mrow><annotation encoding="application/x-tex">\text{market-adjusted cost} \text{(bps)} = \text{arrival cost} \text{(bps)} - \beta \times\text{index cost} \text{(bps)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">market-adjusted cost</span></span><span class="mord text"><span class="mord">(bps)</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">arrival cost</span></span><span class="mord text"><span class="mord">(bps)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">index cost</span></span><span class="mord text"><span class="mord">(bps)</span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li>arrival cost = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>side</mtext><mo>×</mo><mo stretchy="false">(</mo><mtext>execution price</mtext><mi mathvariant="normal">/</mi><mtext>arrival price</mtext><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{side} \times (\text{execution price} / \text{arrival price} - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord">side</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">execution price</span></span><span class="mord">/</span><span class="mord text"><span class="mord">arrival price</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
<li>index cost = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>side</mtext><mo>×</mo><mo stretchy="false">(</mo><mtext>index average price</mtext><mi mathvariant="normal">/</mi><mtext>index arrival price</mtext><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{side} \times (\text{index average price} / \text{index arrival price} - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord text"><span class="mord">side</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">index average price</span></span><span class="mord">/</span><span class="mord text"><span class="mord">index arrival price</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></li>
</ul>
<h3 id="return-attribution"><a class="markdownIt-Anchor" href="#return-attribution"></a> Return Attribution</h3>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mi>A</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><mi mathvariant="normal">Δ</mi><msub><mi>W</mi><mi>i</mi></msub></mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_A = \sum\limits_{i=1}^N{\Delta W_i}{R_i}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: return from security i</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\Delta W_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: active weight of security i, i.e. diff between portfolio and benchmark weight</li>
</ul>
<h4 id="bhb-method-ie-brinson-hood-beebower"><a class="markdownIt-Anchor" href="#bhb-method-ie-brinson-hood-beebower"></a> BHB Method, i.e. Brinson-Hood-Beebower</h4>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing=""><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>Portfolio Return</mtext><mo separator="true">,</mo><mi>R</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>R</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>Benchmark Return</mtext><mo separator="true">,</mo><mi>B</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>W</mi><mi>i</mi></msub><msub><mi>B</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}
\text{Portfolio Return}, R = \sum\limits_{i=1}^n{w_i}{R_i} \\
\text{Benchmark Return}, B = \sum\limits_{i=1}^n{W_i}{B_i}
\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.458132000000001em;vertical-align:-2.9790660000000004em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.4790660000000004em;"><span style="top:-5.479066em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord text"><span class="mord">Portfolio Return</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord text"><span class="mord">Benchmark Return</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9790660000000004em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: portfolio weight of the ith segment (e.g. style, sector, geography, etc.)</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: portfolio return in the ith segment</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">W_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: benchmark weight of the ith segment</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">B_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: benchmark return in the ith segment</li>
<li>n: number of segments</li>
</ul>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>R</mi><mi>A</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>R</mi><mo>−</mo><mi>B</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>R</mi><mi>i</mi></msub><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>W</mi><mi>i</mi></msub><msub><mi>B</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><msub><mi>R</mi><mi>i</mi></msub><mo>−</mo><msub><mi>W</mi><mi>i</mi></msub><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">[</mo><munder><munder><mrow><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo>−</mo><msub><mi>W</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>B</mi><mi>i</mi></msub></mrow><mo stretchy="true">⏟</mo></munder><mtext>Allocation Effect</mtext></munder><mo>+</mo><munder><munder><mrow><mi>W</mi><mi>i</mi><mo>⋅</mo><mo stretchy="false">(</mo><msub><mi>R</mi><mi>i</mi></msub><mo>−</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mtext>Selection Effect</mtext></munder><mo>+</mo><munder><munder><mrow><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo>−</mo><msub><mi>W</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><msub><mi>R</mi><mi>i</mi></msub><mo>−</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mtext>Interaction Effect </mtext></munder><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} 
R_A &amp; = R - B \\ 
    &amp; = \sum\limits_{i=1}^n{w_i}{R_i} - \sum\limits_{i=1}^n{W_i}{B_i} \\
    &amp; = \sum\limits_{i=1}^n(w_i R_i - W_i B_i) \\
    &amp; = \sum\limits_{i=1}^n[\underbrace{(w_i - W_i)\cdot B_i}_{\text{Allocation Effect}} + \underbrace{Wi \cdot (R_i - B_i)}_{\text{Selection Effect}} + \underbrace{(w_i - W_i) \cdot (R_i - B_i)}_{\text{Interaction Effect }}]
\end{aligned} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:11.493637000000003em;vertical-align:-5.496818500000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.996818500000001em;"><span style="top:-8.808215500000001em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-6.496818500000001em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"></span></span><span style="top:-3.2677525000000003em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"></span></span><span style="top:-0.038686499999998736em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.496818500000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.996818500000001em;"><span style="top:-8.808215500000001em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span><span style="top:-6.496818500000001em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2677525000000003em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-0.038686499999998736em;"><span class="pstrut" style="height:3.6513970000000002em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">[</span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-1.415892em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">Allocation Effect</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span class="svg-align" style="top:-2.102em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.898em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.584108em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-1.415892em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">Selection Effect</span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span class="svg-align" style="top:-2.102em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.898em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.584108em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-1.415892em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">Interaction Effect </span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span class="svg-align" style="top:-2.102em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.898em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.584108em;"><span></span></span></span></span></span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.496818500000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<h4 id="bf-method-ie-brinson-fachler"><a class="markdownIt-Anchor" href="#bf-method-ie-brinson-fachler"></a> BF Method, i.e. Brinson-Fachler</h4>
<p>to solve BHB Method’s issue of misleading allocation effect, due to the sign of the resulting allocation effect does not automatically indicate whether the decision to overweight/underweight a particular segment of the portfolio was correct.</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>Allocation Effect</mtext><mo>=</mo><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo>−</mo><msub><mi>W</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><msub><mi>B</mi><mi>i</mi></msub><mo>−</mo><mi mathvariant="bold-italic">B</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{Allocation Effect} = (w_i - W_i)\cdot (B_i - \bm{B})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">Allocation Effect</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.04835em;">B</span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>where:</p>
<ul>
<li>B: overall benchmark return</li>
</ul>
<p>note:</p>
<ul>
<li>the additional term: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo>−</mo><msub><mi>W</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><mo>−</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>w</mi><mi>i</mi></msub><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>W</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><mo>−</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><mo>−</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\sum\limits_{i=1}^n(w_i - W_i) \cdot (-B) = (\sum\limits_{i=1}^n{w_i} - \sum\limits_{i=1}^n{W_i}) \cdot (-B) = (1 - 1) \cdot (-B) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.329066em;vertical-align:-0.9776689999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9776689999999999em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.329066em;vertical-align:-0.9776689999999999em;"></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9776689999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.329066em;vertical-align:-0.9776689999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9776689999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></li>
</ul>
<h3 id="arithmetic-vs-geometric-attribution"><a class="markdownIt-Anchor" href="#arithmetic-vs-geometric-attribution"></a> Arithmetic vs Geometric Attribution</h3>
<table>
<thead>
<tr>
<th></th>
<th>Period 1</th>
<th>Period 2</th>
</tr>
</thead>
<tbody>
<tr>
<td>Portfolio Return ®</td>
<td>5%</td>
<td>5%</td>
</tr>
<tr>
<td>Benchmark Return (B)</td>
<td>3%</td>
<td>3%</td>
</tr>
</tbody>
</table>
<ul>
<li>arithmetic attribution: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>A</mi></msub><mo>=</mo><mi>R</mi><mo>−</mo><mi>B</mi><mo>=</mo><mn>5</mn><mi mathvariant="normal">%</mi><mo>−</mo><mn>3</mn><mi mathvariant="normal">%</mi><mo>=</mo><mn>2</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">R_A = R - B = 5\% - 3\% = 2\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.08333em;"></span><span class="mord">5</span><span class="mord">%</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">3</span><span class="mord">%</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">2</span><span class="mord">%</span></span></span></span></li>
<li>geometric attribution: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>A</mi></msub><mo>=</mo><mfrac><mrow><mn>1</mn><mo>+</mo><mi>R</mi></mrow><mrow><mn>1</mn><mo>+</mo><mi>B</mi></mrow></mfrac><mo>−</mo><mn>1</mn><mo>=</mo><mfrac><mn>1.05</mn><mn>1.03</mn></mfrac><mo>−</mo><mn>1</mn><mo>=</mo><mn>1.94</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">R_A = \frac{1 + R}{1 + B} - 1 = \frac{1.05}{1.03} - 1 = 1.94\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.275662em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">0</span><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">0</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">9</span><span class="mord">4</span><span class="mord">%</span></span></span></span></li>
</ul>
<p>geometric attribution does compound across periods: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>1.94</mn><mi mathvariant="normal">%</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mn>1.05</mn><mi mathvariant="normal">/</mi><mn>1.03</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>−</mo><mn>1</mn><mo>=</mo><mn>3.92</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">(1 + 1.94\%)^2 - 1 = (1.05/1.03)^2 - 1 = 3.92\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">9</span><span class="mord">4</span><span class="mord">%</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mord">5</span><span class="mord">/</span><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mord">3</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">3</span><span class="mord">.</span><span class="mord">9</span><span class="mord">2</span><span class="mord">%</span></span></span></span></p>
<h3 id="performance-metrics"><a class="markdownIt-Anchor" href="#performance-metrics"></a> Performance Metrics</h3>
<h4 id="sharpe-ratio"><a class="markdownIt-Anchor" href="#sharpe-ratio"></a> Sharpe Ratio</h4>
<p>calculated as excess return over the risk-free rate (numerator) divided by standard deviation (denominator)</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>S</mi><mi>A</mi></msub><mo>=</mo><mfrac><mrow><msub><mover accent="true"><mi>R</mi><mo>ˉ</mo></mover><mi>A</mi></msub><mo>−</mo><msub><mover accent="true"><mi>r</mi><mo>ˉ</mo></mover><mi>f</mi></msub></mrow><msub><mover accent="true"><mi>σ</mi><mo>^</mo></mover><mi>A</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">S_A = \frac{\bar{R}_A - \bar{r}_f}{\hat{\sigma}_A}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.33311em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.49711em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>note:</p>
<ul>
<li>denominator does not differentiate between volatility that is upside versus downside. Therefore, there is a penalty for all volatility, even if it is “good” volatility (addressed in Sortino Ratio below).</li>
</ul>
<h4 id="treynor-ratio"><a class="markdownIt-Anchor" href="#treynor-ratio"></a> Treynor Ratio</h4>
<p>similar to the Sharpe ratio, but the denominator is measured by beta, so only considering systematic risk rather than total risk</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>T</mi><mi>A</mi></msub><mo>=</mo><mfrac><mrow><msub><mover accent="true"><mi>R</mi><mo>ˉ</mo></mover><mi>A</mi></msub><mo>−</mo><msub><mover accent="true"><mi>r</mi><mo>ˉ</mo></mover><mi>f</mi></msub></mrow><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mi>A</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">T_A = \frac{\bar{R}_A - \bar{r}_f}{\hat{\beta}_A}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.53943em;vertical-align:-1.04232em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.49711em;"><span style="top:-2.15212em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8201099999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.04232em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>note:</p>
<ul>
<li>assume efficient markets</li>
<li>only useful in evaluating portfolios that have systematic risk and do not have unsystematic risk (i.e. well diversified)</li>
</ul>
<h4 id="information-ratio"><a class="markdownIt-Anchor" href="#information-ratio"></a> Information Ratio</h4>
<p>measures a portfolio’s performance against the benchmark but accounts for differences in risk</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>I</mi><mi>R</mi><mo>=</mo><mfrac><mrow><mi>E</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>p</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>B</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>p</mi></msub><mo>−</mo><msub><mi>r</mi><mi>B</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">IR = \frac{E(r_p) - E(r_B)}{\sigma(r_p - r_B)}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.399108em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>note:</p>
<ul>
<li>the denominator is known as the tracking risk, or the variability in the portfolio performance with that of its benchmark</li>
</ul>
<h4 id="appraisal-ratio"><a class="markdownIt-Anchor" href="#appraisal-ratio"></a> Appraisal Ratio</h4>
<p>measures the ratio of active return, α, to the volatility of the residual term, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>ε</mi></msub></mrow><annotation encoding="application/x-tex">σ_ε</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ε</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, both derived from a factor-based regression</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>R</mi><mo>=</mo><mfrac><mi>α</mi><msub><mi>σ</mi><mi>ε</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">AR = \frac{α}{σ_ε}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.9435600000000002em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ε</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>note:</p>
<ul>
<li>higher AR indicates generating more active return per unit of active risk (as represented by residual risk <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>ε</mi></msub></mrow><annotation encoding="application/x-tex">σ_ε</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ε</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> also referred to as the “standard error of the regression”) and is therefore a superior active manager according to this measure.</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>ε</mi></msub></mrow><annotation encoding="application/x-tex">σ_ε</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ε</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, i.e. the standard error of the regression, is the volatility of the error term in a factor-based regression, representing the component of the volatility of returns not explained by the regression model factors. This component of volatility is generated by the manager taking active bets relative to the factors in the model, hence <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>ε</mi></msub></mrow><annotation encoding="application/x-tex">σ_ε</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">ε</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> here is playing the role of active risk.</li>
<li>The AR is analogous to the IR. It looks at active return per unit of active risk. The only difference is that the AR uses a factor-based regression to estimate active return and active risk.</li>
</ul>
<h4 id="sortino-ratio"><a class="markdownIt-Anchor" href="#sortino-ratio"></a> Sortino Ratio</h4>
<p>only considers the standard deviation of the downside risk, in contrast to the Sharpe ratio, which considers all risk (e.g., both upside and downside). Positive volatility associated with the upside can be considered “good” volatility. As a result, the Sortino ratio can provide a more meaningful view of a portfolio’s risk-adjusted performance than the Sharpe ratio.</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><msub><mi>R</mi><mi>D</mi></msub><mo>=</mo><mfrac><mrow><mi>E</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mi>p</mi></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>r</mi><mi>T</mi></msub></mrow><msub><mi>σ</mi><mi>D</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">SR_D = \frac{E(r_p) - r_T}{\sigma_D}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.263em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">r_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: target rate of return, or minimum acceptable return (MAR)</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>D</mi></msub></mrow><annotation encoding="application/x-tex">\sigma_D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: target semideviation, measuring the standard deviation of returns below the target return</li>
</ul>
<p>note:</p>
<ul>
<li>determination of MAR is subjective and specific to each investor, causing comparability problems</li>
</ul>
<h4 id="capture-ratio"><a class="markdownIt-Anchor" href="#capture-ratio"></a> Capture Ratio</h4>
<p>Capture Ratio (CR) = UC ratio / DC ratio, a measure of return asymmetry, &gt; 1 = positive asymmetry (convex shape), &lt; 1 = negative asymmetry (concave shape)</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>Capture Ratio</mtext><mo>=</mo><mfrac><mtext>Upside Capture Ratio</mtext><mtext>Downside Capture Ratio</mtext></mfrac></mrow><annotation encoding="application/x-tex">\text{Capture Ratio} = \frac{\text{Upside Capture Ratio}}{\text{Downside Capture Ratio}} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">Capture Ratio</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">Downside Capture Ratio</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord">Upside Capture Ratio</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>e.g.</p>
<ul>
<li>if portfolio return is 5%, and benchmark return is 4%, then upside capture ratio 5% / 4% = 125%, &gt; 100% indicates outperformed</li>
<li>if portfolio return is -3%, and benchmark return is -4%, then downside capture ratio -3% / -4% = 75% &lt; 100% indicates outperformed</li>
<li>then the capture ratio is 125% / 75% = 1.67, indicates a positively asymmetrical (convex) return profile</li>
</ul>
<p>note:</p>
<ul>
<li>ideally, the manager would capture as much of the upside as possible and capture as little of the downside as possible to maximize the capture ratio</li>
<li>when betas are increasing (decreasing), momentum-driven strategies should have higher (lower) UC than value-driven strategies. A low-beta (high-beta) strategy will have lower (higher) UC and DC. Therefore, CRs can be used to confirm the investment strategy.</li>
</ul>
<h4 id="drawdown"><a class="markdownIt-Anchor" href="#drawdown"></a> Drawdown</h4>
<table>
<thead>
<tr>
<th>Month</th>
<th>Monthly Return</th>
<th>Drawdown</th>
<th>Cumulative Drawdown</th>
<th>Comments</th>
</tr>
</thead>
<tbody>
<tr>
<td>01/2018</td>
<td>3.14%</td>
<td></td>
<td>0.00%</td>
<td></td>
</tr>
<tr>
<td>02/2018</td>
<td>–2.55%</td>
<td>–2.55%</td>
<td>–2.55%</td>
<td>Drawdown phase begins</td>
</tr>
<tr>
<td>03/2018</td>
<td>–2.71%</td>
<td>–2.71%</td>
<td>–5.26%</td>
<td></td>
</tr>
<tr>
<td>04/2018</td>
<td>–4.66%</td>
<td>–4.66%</td>
<td>–9.92%</td>
<td></td>
</tr>
<tr>
<td>05/2018</td>
<td>–4.91%</td>
<td>–4.91%</td>
<td>–14.83%</td>
<td></td>
</tr>
<tr>
<td>06/2018</td>
<td>–0.73%</td>
<td>–0.73%</td>
<td>–15.56%</td>
<td>Maximum drawdown</td>
</tr>
<tr>
<td>07/2018</td>
<td>2.18%</td>
<td></td>
<td>–13.38%</td>
<td>Recovery phase begins</td>
</tr>
<tr>
<td>08/2018</td>
<td>3.11%</td>
<td></td>
<td>–10.27%</td>
<td></td>
</tr>
<tr>
<td>09/2018</td>
<td>2.45%</td>
<td></td>
<td>–7.82%</td>
<td></td>
</tr>
<tr>
<td>10/2018</td>
<td>3.65%</td>
<td></td>
<td>–4.17%</td>
<td></td>
</tr>
<tr>
<td>11/2018</td>
<td>4.03%</td>
<td></td>
<td>–0.14%</td>
<td></td>
</tr>
<tr>
<td>12/2018</td>
<td>4.14%</td>
<td></td>
<td>0.00%</td>
<td>Drawdown recovered</td>
</tr>
</tbody>
</table>
<h3 id="time-to-cash-table"><a class="markdownIt-Anchor" href="#time-to-cash-table"></a> Time-to-Cash Table</h3>
<p>liquidity classification schedule (time-to-cash table) is used to manage liquidity risk, including:</p>
<ul>
<li>
<ol>
<li>amount of time needed to convert assets to cash</li>
</ol>
</li>
<li>
<ol start="2">
<li>liquidity classification level</li>
</ol>
</li>
<li>
<ol start="3">
<li>liquidity budget</li>
</ol>
</li>
</ul>
<table>
<thead>
<tr>
<th>Time to Cash</th>
<th>Liquidity Classification</th>
<th>Liquidity Budget (% of portfolio)</th>
</tr>
</thead>
<tbody>
<tr>
<td>&lt; 1 week</td>
<td>Highly liquid</td>
<td>At least 5%</td>
</tr>
<tr>
<td>&lt; 1 quarter</td>
<td>Liquid</td>
<td>At least 25%</td>
</tr>
<tr>
<td>&lt; 1 year</td>
<td>Semi-liquid</td>
<td>At least 40%</td>
</tr>
<tr>
<td>&gt; 1 year</td>
<td>Illiquid</td>
<td>Up to 40%</td>
</tr>
</tbody>
</table>
<h2 id="ethical-and-professional-standards"><a class="markdownIt-Anchor" href="#ethical-and-professional-standards"></a> Ethical and Professional Standards</h2>
<h3 id="gips-return-calculation"><a class="markdownIt-Anchor" href="#gips-return-calculation"></a> GIPS return calculation</h3>
<p>Rt to be evaluated each time an interim ECF occurs. Then sub-periods returns are geometrically linked to create a TWRR (i.e. time-weighted rate of return).</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mi>t</mi></msub><mo>=</mo><mfrac><mrow><mi>E</mi><mi>V</mi><mo>−</mo><mi>B</mi><mi>V</mi></mrow><mrow><mi>B</mi><mi>V</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">R_t = \frac{EV - BV}{BV}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mrow><mi>T</mi><mi>W</mi><mi>R</mi><mi>R</mi></mrow></msub><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>R</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>R</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>×</mo><mo>⋯</mo><mo>×</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><msub><mi>R</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R_{TWRR} = (1+R_1) \times (1+R_2) \times \cdots \times (1+R_t)

</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>Approximations when portfolios are not valued daily, and ECFs (i.e. external cash flows) are relatively small. The larger the ECFs and the more volatile the market, the greater the discrepancy will be between the true TWRR and the approximations.</p>
<h4 id="modified-dietz-return"><a class="markdownIt-Anchor" href="#modified-dietz-return"></a> Modified Dietz Return</h4>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>R</mi><mrow><mi>M</mi><mi>D</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>E</mi><mi>V</mi><mo>−</mo><mi>B</mi><mi>V</mi><mo>−</mo><mi>E</mi><mi>C</mi><mi>F</mi></mrow><mrow><mi>B</mi><mi>V</mi><mo>+</mo><mtext>adjusted ECF</mtext></mrow></mfrac></mrow><annotation encoding="application/x-tex">R_{MD} = \frac{EV - BV - ECF}{BV + \text{adjusted ECF}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.2407700000000004em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">adjusted ECF</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>adjusted ECF</mtext><mo>=</mo><mo>∑</mo><mrow><mtext>ECF</mtext><mo>×</mo><mtext>weight</mtext></mrow></mrow><annotation encoding="application/x-tex">\text{adjusted ECF} = \sum{\text{ECF} \times \text{weight}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">adjusted ECF</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6000100000000002em;vertical-align:-0.55001em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord text"><span class="mord">ECF</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">weight</span></span></span></span></span></span></span></p>
<p>where:</p>
<ul>
<li>weight is based on proportion of days in use, e.g. if the 1st ECF was received on Day 7, meaning that the manager had use of it for 23 days. Then the weight is 23/30.</li>
</ul>
<p>note:</p>
<ul>
<li>ECFs will be positive if cash inflow, and negative if cash outflow</li>
</ul>
<h4 id="mirr"><a class="markdownIt-Anchor" href="#mirr"></a> MIRR</h4>
<p>MIRR (i.e. modified internal rate of return)</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mi>V</mi><mo>=</mo><mi>B</mi><mi>V</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>r</mi><mo stretchy="false">)</mo><mo>+</mo><mo>∑</mo><mrow><mi>E</mi><mi>C</mi><mi>F</mi><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>r</mi><msup><mo stretchy="false">)</mo><mtext>weight</mtext></msup></mrow></mrow><annotation encoding="application/x-tex">EV = BV(1+r) + \sum{ECF(1 + r)^{\text{weight}}}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.6000100000000002em;vertical-align:-0.55001em;"></span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">weight</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>solve for r</p>
<p>where:</p>
<ul>
<li>weight is the same defined in the modified Dietz Return</li>
</ul>
]]></content>
      <tags>
        <tag>cfa</tag>
      </tags>
  </entry>
  <entry>
    <title>CKA Note</title>
    <url>/2022/01/18/cka-note/</url>
    <content><![CDATA[<h1 id="installation-and-configuration"><a class="markdownIt-Anchor" href="#installation-and-configuration"></a> Installation and Configuration</h1>
<h2 id="intall-kubectl"><a class="markdownIt-Anchor" href="#intall-kubectl"></a> Intall kubectl</h2>
<ul>
<li>
<p>configuration file location: <code>$HOME/.kube/config</code>.</p>
</li>
<li>
<p>handy when going from a local environment to a cluster in the cloud, or from one cluster to another, such as from development to production.</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ kubectl config use-context foobar</span><br></pre></td></tr></table></figure>
<h2 id="gke-quickstart"><a class="markdownIt-Anchor" href="#gke-quickstart"></a> GKE Quickstart</h2>
<ol>
<li>
<p><a href="https://cloud.google.com/sdk/docs/install#linux">GKE Install</a></p>
</li>
<li>
<p><a href="https://cloud.google.com/kubernetes-engine/docs/quickstart">GKE Quickstart</a></p>
</li>
<li>
<p>quick start command</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gcloud container clusters create linuxfoundation</span><br><span class="line"></span><br><span class="line">$ gcloud container clusters list</span><br><span class="line"></span><br><span class="line">$ kubectl get nodes <span class="comment"># kubectl comes free from gcloud</span></span><br><span class="line"></span><br><span class="line">$ gcloud container clusters delete linuxfoundation</span><br></pre></td></tr></table></figure>
<h2 id="minikube"><a class="markdownIt-Anchor" href="#minikube"></a> Minikube</h2>
<ol>
<li>
<p><a href="https://github.com/kubernetes/minikube">github repo</a></p>
</li>
<li>
<p>install</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-darwin-amd64</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">chmod</span> +x minikube</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">sudo</span> <span class="built_in">mv</span> minikube /usr/local/bin</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>quick start command</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ minikube start</span><br><span class="line"></span><br><span class="line">$ kubectl get nodes</span><br></pre></td></tr></table></figure>
<h2 id="main-deployment-configuration"><a class="markdownIt-Anchor" href="#main-deployment-configuration"></a> Main Deployment configuration</h2>
<ol>
<li>Single-node</li>
</ol>
<p>With a single-node deployment, all the components run on the same server. This is great for testing, learning, and developing around Kubernetes.</p>
<ol start="2">
<li>Single head node, multiple workers</li>
</ol>
<p>Adding more workers, a single head node and multiple workers typically will consist of a single node etcd instance running on the head node with the API, the scheduler, and the controller-manager.</p>
<ol start="3">
<li>Multiple head nodes with HA, multiple workers</li>
</ol>
<p>Multiple head nodes in an HA configuration and multiple workers add more durability to the cluster. The API server will be fronted by a load balancer, the scheduler and the controller-manager will elect a leader (which is configured via flags). The etcd setup can still be single node.</p>
<ol start="4">
<li>HA etcd, HA head nodes, multiple workers</li>
</ol>
<p>The most advanced and resilient setup would be an HA etcd cluster, with HA head nodes and multiple workers. Also, etcd would run as a true cluster, which would provide HA and would run on nodes separate from the Kubernetes head nodes.</p>
]]></content>
      <tags>
        <tag>k8s, cka</tag>
      </tags>
  </entry>
  <entry>
    <title>CPA Note</title>
    <url>/2020/11/20/cpa-note/</url>
    <content><![CDATA[<h1 id="cpa-c-certified-associate-programmer"><a class="markdownIt-Anchor" href="#cpa-c-certified-associate-programmer"></a> CPA – C++ Certified Associate Programmer</h1>
<h2 id="readings"><a class="markdownIt-Anchor" href="#readings"></a> Readings</h2>
<ul>
<li><a href="https://www.stroustrup.com/4th.html">The C++ Programming Language (4th Edition)</a> by Bjarne Stroustrup</li>
<li>Thinking in C++ by Bruce Eckel</li>
<li><a href="https://www.cprogramming.com/c++book/?inl=sb">Jumping into C++.</a></li>
<li><a href="https://www.amazon.com/gp/product/0321334876?ie=UTF8&amp;tag=aristeia.com-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0321334876">Effective C++.</a> by Scott Meyers</li>
</ul>
<p>More books: <a href="https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list">https://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list</a></p>
<h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2>
<ul>
<li><a href="https://isocpp.org/std">https://isocpp.org/std</a></li>
<li><a href="https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#main">C++ Core Guidelines</a></li>
</ul>
<h2 id="cout-manipulator"><a class="markdownIt-Anchor" href="#cout-manipulator"></a> cout manipulator</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> byte = <span class="number">255</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Byte in hex: &quot;</span> &lt;&lt; hex &lt;&lt; byte;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Byte in decimal: &quot;</span> &lt;&lt; dec &lt;&lt; byte;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Byte in octal: &quot;</span> &lt;&lt; oct &lt;&lt; byte;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> byte = <span class="number">255</span>;</span><br><span class="line">	cout &lt;&lt; <span class="built_in">setbase</span>(<span class="number">16</span>) &lt;&lt; byte;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> x = <span class="number">2.5</span>, y = <span class="number">0.0000000025</span>;</span><br><span class="line">cout &lt;&lt; fixed &lt;&lt; x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; y &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; scientific &lt;&lt; x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; y &lt;&lt; endl;</span><br></pre></td></tr></table></figure>
<h2 id="string-methods"><a class="markdownIt-Anchor" href="#string-methods"></a> String methods</h2>
<h3 id="compare"><a class="markdownIt-Anchor" href="#compare"></a> compare</h3>
<p>str1.compare(str2)</p>
<ul>
<li>
<p>str1.compare(str2) == 0 when str1 == str2</p>
</li>
<li>
<p>str1.compare(str2) &gt; 0 when str1 &gt; str2</p>
</li>
<li>
<p>str1.compare(str2) &lt; 0 when str1 &lt; str2</p>
</li>
</ul>
<p>S.compare(substr_start, substr_length, other_string)</p>
<p>S.compare(substr_start, substr_length, other_string, other_substr_start, other_substr_length)</p>
<h3 id="substr"><a class="markdownIt-Anchor" href="#substr"></a> substr</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string newstr = oldstr.<span class="built_in">substr</span>(substring_start_position, length_of_substring)</span><br></pre></td></tr></table></figure>
<h3 id="length-size-capacity-max_size"><a class="markdownIt-Anchor" href="#length-size-capacity-max_size"></a> length, size, capacity, max_size</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> string_size = S.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> string_length = S.<span class="built_in">length</span>();</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> string_capacity = s.<span class="built_in">capacity</span>();</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> string_max_size = s.<span class="built_in">max_size</span>();</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">TheString.<span class="built_in">reserve</span>(<span class="number">100</span>);</span><br></pre></td></tr></table></figure>
<h3 id="reserve-resize-clear-empty"><a class="markdownIt-Anchor" href="#reserve-resize-clear-empty"></a> reserve, resize, clear, empty</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> is_empty = TheString.<span class="built_in">empty</span>();</span><br><span class="line"></span><br><span class="line">TheString.<span class="built_in">resize</span>(<span class="number">50</span>,<span class="string">&#x27;?&#x27;</span>);</span><br><span class="line"></span><br><span class="line">TheString.<span class="built_in">resize</span>(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">TheString.<span class="built_in">clear</span>();</span><br></pre></td></tr></table></figure>
<h3 id="find"><a class="markdownIt-Anchor" href="#find"></a> find</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> where_it_begins = S.<span class="built_in">find</span>(another_string, start_here);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> where_it_is = S.<span class="built_in">find</span>(any_character, start_here);</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> comma = greeting.<span class="built_in">find</span>(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(comma != string::npos)&#123;</span><br><span class="line">	<span class="comment">//found</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="append-push_back-insert"><a class="markdownIt-Anchor" href="#append-push_back-insert"></a> append, push_back, insert</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">NewString.<span class="built_in">append</span>(TheString);</span><br><span class="line">NewString.<span class="built_in">append</span>(TheString,<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line">NewString.<span class="built_in">append</span>(<span class="number">2</span>,<span class="string">&#x27;!&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">TheString.<span class="built_in">push_back</span>(car);</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string quote = <span class="string">&quot;Whyserious?&quot;</span>, anyword = <span class="string">&quot;monsoon&quot;</span>;</span><br><span class="line">quote.<span class="built_in">insert</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27; &#x27;</span>).<span class="built_in">insert</span>(<span class="number">4</span>,anyword,<span class="number">3</span>,<span class="number">2</span>); <span class="comment">// Why so serious?</span></span><br></pre></td></tr></table></figure>
<h3 id="assign"><a class="markdownIt-Anchor" href="#assign"></a> assign</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string sky; </span><br><span class="line">sky.<span class="built_in">assign</span>(<span class="number">80</span>,<span class="string">&#x27;*&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="replace"><a class="markdownIt-Anchor" href="#replace"></a> replace</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string ToDo = <span class="string">&quot;I&#x27;ll think about that in one hour&quot;</span>; </span><br><span class="line">string Schedule = <span class="string">&quot;today yesterday tomorrow&quot;</span>;</span><br><span class="line"></span><br><span class="line">ToDo.<span class="built_in">replace</span>(<span class="number">22</span>, <span class="number">12</span>, Schedule, <span class="number">16</span>, <span class="number">8</span>); <span class="comment">// I&#x27;ll think about that tomorrow</span></span><br></pre></td></tr></table></figure>
<h3 id="erase"><a class="markdownIt-Anchor" href="#erase"></a> erase</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string WhereAreWe = <span class="string">&quot;I&#x27;ve got a feeling we&#x27;re not in Kansas anymore&quot;</span>; </span><br><span class="line"></span><br><span class="line">WhereAreWe.<span class="built_in">erase</span>(<span class="number">38</span>, <span class="number">8</span>).<span class="built_in">erase</span>(<span class="number">25</span>, <span class="number">4</span>); <span class="comment">// I&#x27;ve got a feeling we&#x27;re in Kansas</span></span><br><span class="line">TheString.<span class="built_in">erase</span>();</span><br></pre></td></tr></table></figure>
<h3 id="swap"><a class="markdownIt-Anchor" href="#swap"></a> swap</h3>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">string Drink = <span class="string">&quot;A martini&quot;</span>;</span><br><span class="line">string Needs = <span class="string">&quot;Shaken, not stirred&quot;</span>;</span><br><span class="line">	</span><br><span class="line">Drink.<span class="built_in">swap</span>(Needs);</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>cpp, cpa</tag>
      </tags>
  </entry>
  <entry>
    <title>AWS Note</title>
    <url>/2020/06/08/aws-note/</url>
    <content><![CDATA[<h1 id="aws-basics"><a class="markdownIt-Anchor" href="#aws-basics"></a> AWS Basics</h1>
<h2 id="aws-website"><a class="markdownIt-Anchor" href="#aws-website"></a> AWS website</h2>
<p><a href="https://infrastructure.aws/">infrastructure.aws</a></p>
<p><a href="http://awstcocalculator.com/">TCO(total cost of ownership) Calculator</a></p>
<p><a href="https://calculator.aws/#/">Pricing Calculator</a></p>
<h2 id="install"><a class="markdownIt-Anchor" href="#install"></a> Install</h2>
<h3 id="aws-cli-and-boto3"><a class="markdownIt-Anchor" href="#aws-cli-and-boto3"></a> AWS CLI and Boto3</h3>
<h4 id="amazon-linux-2"><a class="markdownIt-Anchor" href="#amazon-linux-2"></a> Amazon Linux 2</h4>
<p>The AWS CLI is already installed on Amazon Linux 2.</p>
<p>Install Python 3:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install -y python3-pip python3 python3-setuptools</span><br></pre></td></tr></table></figure>
<p>Install Boto3:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install boto3 --user</span><br></pre></td></tr></table></figure>
<h4 id="macos"><a class="markdownIt-Anchor" href="#macos"></a> macOS</h4>
<p>Install Python3 using Homebrew:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>Install Python 3:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install python</span><br></pre></td></tr></table></figure>
<p>Insert the Homebrew Python directory at the top of your PATH environment variable:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/opt/python/libexec/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>Verify you are using Python 3:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python --version</span><br></pre></td></tr></table></figure>
<p>Install the AWS CLI and Boto3:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install awscli boto3 --upgrade --user</span><br></pre></td></tr></table></figure>
<h3 id="docker"><a class="markdownIt-Anchor" href="#docker"></a> Docker</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> amazon-linux-extras install docker</span><br></pre></td></tr></table></figure>
<h2 id="configuring-your-aws-environment"><a class="markdownIt-Anchor" href="#configuring-your-aws-environment"></a> Configuring your AWS environment</h2>
<p>Obtain your AWS access key and secret access key from the AWS Management Console. Run the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws configure</span><br></pre></td></tr></table></figure>
<p>This sets up a text file that the AWS CLI and Boto3 libraries look at by default for your credentials: <code>~/.aws/credentials</code>.</p>
<p>The file should look like this:</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">[default]</span><br><span class="line">aws_access_key_id = AKIAIOSFODNN7EXAMPLE</span><br><span class="line">aws_secret_access_key = wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</span><br></pre></td></tr></table></figure>
<h2 id="test-your-credentials"><a class="markdownIt-Anchor" href="#test-your-credentials"></a> Test Your Credentials</h2>
<p>AWS CLI<br />
Run the following command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws sts get-caller-identity</span><br></pre></td></tr></table></figure>
<p>The output should look like this:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;UserId&quot;</span>: <span class="string">&quot;AIDAJKLMNOPQRSTUVWXYZ&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Account&quot;</span>: <span class="string">&quot;123456789012&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Arn&quot;</span>: <span class="string">&quot;arn:aws:iam::123456789012:userdevuser&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="aws-cli"><a class="markdownIt-Anchor" href="#aws-cli"></a> AWS CLI</h1>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws configure</span><br><span class="line">aws sts get-caller-identity</span><br></pre></td></tr></table></figure>
<h2 id="s3"><a class="markdownIt-Anchor" href="#s3"></a> S3</h2>
<p>Upload folder to s3:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws s3 <span class="built_in">cp</span> &lt;path-to-source-folder&gt; s3://&lt;path-to-target-folder&gt; --recursive --exclude <span class="string">&quot;.DS_Store&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="dynamodb"><a class="markdownIt-Anchor" href="#dynamodb"></a> Dynamodb</h2>
<p>create table:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws dynamodb create-table \</span><br><span class="line">    --table-name Music \</span><br><span class="line">    --key-schema AttributeName=Artist,KeyType=HASH \</span><br><span class="line">                 AttributeName=SongTitle,KeyType=RANGE \</span><br><span class="line">    --attribute-definitions \</span><br><span class="line">        AttributeName=Artist,AttributeType=S \</span><br><span class="line">        AttributeName=SongTitle,AttributeType=S \</span><br><span class="line">    --provisioned-throughput \</span><br><span class="line">        ReadCapacityUnits=5,WriteCapacityUnits=5</span><br></pre></td></tr></table></figure>
<p>describe table:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws dynamodb describe-table --table-name Music</span><br></pre></td></tr></table></figure>
<p>put item:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws dynamodb put-item \</span><br><span class="line">    --table-name Music \</span><br><span class="line">    --item <span class="string">&#x27;&#123;</span></span><br><span class="line"><span class="string">        &quot;Artist&quot;: &#123;&quot;S&quot;: &quot;Dream Theater&quot;&#125;,</span></span><br><span class="line"><span class="string">        &quot;AlbumTitle&quot;: &#123;&quot;S&quot;: &quot;Images and Words&quot;&#125;,</span></span><br><span class="line"><span class="string">        &quot;SongTitle&quot;: &#123;&quot;S&quot;: &quot;Under a Glass Moon&quot;&#125; &#125;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>scan table:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws dynamodb scan --table-name Music</span><br></pre></td></tr></table></figure>
<h1 id="boto3-ec2"><a class="markdownIt-Anchor" href="#boto3-ec2"></a> Boto3 - EC2</h1>
<p>This section follows <a href="https://github.com/linuxacademy/content-dynamodb-deepdive">https://github.com/linuxacademy/content-dynamodb-deepdive</a></p>
<h2 id="helloworld"><a class="markdownIt-Anchor" href="#helloworld"></a> HelloWorld</h2>
<h3 id="list-all-s3-bucket-name"><a class="markdownIt-Anchor" href="#list-all-s3-bucket-name"></a> List all S3 bucket name:</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line">s3 = boto3.resource(<span class="string">&#x27;s3&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> bucket <span class="keyword">in</span> s3.buckets.<span class="built_in">all</span>():</span><br><span class="line">    <span class="built_in">print</span>(bucket.name)</span><br></pre></td></tr></table></figure>
<h3 id="spin-up-an-ec2-instance"><a class="markdownIt-Anchor" href="#spin-up-an-ec2-instance"></a> Spin up an ec2 instance</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line">ec2 = boto3.client(<span class="string">&#x27;ec2&#x27;</span>)</span><br><span class="line">response = ec2.run_instances(</span><br><span class="line">    ImageId=<span class="string">&#x27;ami-0947d2ba12ee1ff75&#x27;</span>, <span class="comment"># Amazon Linux 2 AMI (HVM), SSD Volume Type</span></span><br><span class="line">    InstanceType=<span class="string">&#x27;t2.micro&#x27;</span>,</span><br><span class="line">    KeyName=<span class="string">&#x27;xyshell&#x27;</span>,</span><br><span class="line">    MinCount=<span class="number">1</span>,</span><br><span class="line">    MaxCount=<span class="number">1</span>,</span><br><span class="line">    SubnetId=<span class="string">&#x27;subnet-05b78e3323bcabddc&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(response[<span class="string">&#x27;Instances&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;InstanceId&#x27;</span>])</span><br></pre></td></tr></table></figure>
<h2 id="stopping-ec2-instances-nightly"><a class="markdownIt-Anchor" href="#stopping-ec2-instances-nightly"></a> Stopping EC2 Instances Nightly</h2>
<p><img src="/photos/aws-note/Stopping-EC2-Instances-Nightly.png" alt="Stopping-EC2-Instances-Nightly.png" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># lambda_function.py</span></span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line">    ec2_client = boto3.client(<span class="string">&#x27;ec2&#x27;</span>)</span><br><span class="line">    <span class="comment"># get list of regions</span></span><br><span class="line">    regions = [region[<span class="string">&#x27;RegionName&#x27;</span>] <span class="keyword">for</span> region <span class="keyword">in</span> ec2_client.describe_regions()[<span class="string">&#x27;Regions&#x27;</span>]]</span><br><span class="line">    <span class="comment"># iterate over each region</span></span><br><span class="line">    <span class="keyword">for</span> region <span class="keyword">in</span> regions:</span><br><span class="line">        ec2 = boto3.resource(<span class="string">&#x27;ec2&#x27;</span>, region_name=region)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Region:&#x27;</span>, region)</span><br><span class="line">        <span class="comment"># get only running instances</span></span><br><span class="line">        instances = ec2.instances.<span class="built_in">filter</span>(</span><br><span class="line">            Filters=[</span><br><span class="line">                &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;instance-state-name&#x27;</span>,</span><br><span class="line">                 <span class="string">&#x27;Values&#x27;</span>: [<span class="string">&#x27;running&#x27;</span>]&#125;</span><br><span class="line">            ]</span><br><span class="line">        )</span><br><span class="line">        <span class="comment"># stop instances</span></span><br><span class="line">        <span class="keyword">for</span> instance <span class="keyword">in</span> instances:</span><br><span class="line">            instance.stop()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;stopped instance:&#x27;</span>, instance.<span class="built_in">id</span>)</span><br></pre></td></tr></table></figure>
<h2 id="backing-up-ec2-instances"><a class="markdownIt-Anchor" href="#backing-up-ec2-instances"></a> Backing Up EC2 Instances</h2>
<p><img src="/photos/aws-note/Backing-Up-EC2-Instances.png" alt="Backing-Up-EC2-Instances" /></p>
<h3 id="create-backups"><a class="markdownIt-Anchor" href="#create-backups"></a> Create-Backups</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line"></span><br><span class="line">    ec2_client = boto3.client(<span class="string">&#x27;ec2&#x27;</span>)</span><br><span class="line">    regions = [region[<span class="string">&#x27;RegionName&#x27;</span>]</span><br><span class="line">               <span class="keyword">for</span> region <span class="keyword">in</span> ec2_client.describe_regions()[<span class="string">&#x27;Regions&#x27;</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> region <span class="keyword">in</span> regions:</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Instances in EC2 Region &#123;0&#125;:&#x27;</span>.<span class="built_in">format</span>(region))</span><br><span class="line">        ec2 = boto3.resource(<span class="string">&#x27;ec2&#x27;</span>, region_name=region)</span><br><span class="line"></span><br><span class="line">        instances = ec2.instances.<span class="built_in">filter</span>(</span><br><span class="line">            Filters=[</span><br><span class="line">                &#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;tag:backup&#x27;</span>, <span class="string">&#x27;Values&#x27;</span>: [<span class="string">&#x27;true&#x27;</span>]&#125;</span><br><span class="line">            ]</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment"># ISO 8601 timestamp, i.e. 2019-01-31T14:01:58</span></span><br><span class="line">        timestamp = datetime.utcnow().replace(microsecond=<span class="number">0</span>).isoformat()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> instances.<span class="built_in">all</span>():</span><br><span class="line">            <span class="keyword">for</span> v <span class="keyword">in</span> i.volumes.<span class="built_in">all</span>():</span><br><span class="line"></span><br><span class="line">                desc = <span class="string">&#x27;Backup of &#123;0&#125;, volume &#123;1&#125;, created &#123;2&#125;&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                    i.<span class="built_in">id</span>, v.<span class="built_in">id</span>, timestamp)</span><br><span class="line">                <span class="built_in">print</span>(desc)</span><br><span class="line"></span><br><span class="line">                snapshot = v.create_snapshot(Description=desc)</span><br><span class="line"></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Created snapshot:&quot;</span>, snapshot.<span class="built_in">id</span>)</span><br></pre></td></tr></table></figure>
<h3 id="prune-backups"><a class="markdownIt-Anchor" href="#prune-backups"></a> Prune-Backups</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line"></span><br><span class="line">    account_id = boto3.client(<span class="string">&#x27;sts&#x27;</span>).get_caller_identity().get(<span class="string">&#x27;Account&#x27;</span>)</span><br><span class="line">    ec2 = boto3.client(<span class="string">&#x27;ec2&#x27;</span>)</span><br><span class="line">    regions = [region[<span class="string">&#x27;RegionName&#x27;</span>]</span><br><span class="line">               <span class="keyword">for</span> region <span class="keyword">in</span> ec2.describe_regions()[<span class="string">&#x27;Regions&#x27;</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> region <span class="keyword">in</span> regions:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Region:&quot;</span>, region)</span><br><span class="line">        ec2 = boto3.client(<span class="string">&#x27;ec2&#x27;</span>, region_name=region)</span><br><span class="line">        response = ec2.describe_snapshots(OwnerIds=[account_id])</span><br><span class="line">        snapshots = response[<span class="string">&quot;Snapshots&quot;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Sort snapshots by date ascending</span></span><br><span class="line">        snapshots.sort(key=<span class="keyword">lambda</span> x: x[<span class="string">&quot;StartTime&quot;</span>])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Remove snapshots we want to keep (i.e. 3 most recent)</span></span><br><span class="line">        snapshots = snapshots[:-<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> snapshot <span class="keyword">in</span> snapshots:</span><br><span class="line">            <span class="built_in">id</span> = snapshot[<span class="string">&#x27;SnapshotId&#x27;</span>]</span><br><span class="line">            <span class="keyword">try</span>: <span class="comment"># EBS might be using this snapshot</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Deleting snapshot:&quot;</span>, <span class="built_in">id</span>)</span><br><span class="line">                ec2.delete_snapshot(SnapshotId=<span class="built_in">id</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Snapshot &#123;&#125; in use, skipping.&quot;</span>.<span class="built_in">format</span>(<span class="built_in">id</span>))</span><br><span class="line">                <span class="keyword">continue</span></span><br></pre></td></tr></table></figure>
<h3 id="removing-unattached-ebs-volumes"><a class="markdownIt-Anchor" href="#removing-unattached-ebs-volumes"></a> Removing Unattached EBS Volumes</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params"><span class="built_in">object</span>, context</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get list of regions</span></span><br><span class="line">    ec2_client = boto3.client(<span class="string">&#x27;ec2&#x27;</span>)</span><br><span class="line">    regions = [region[<span class="string">&#x27;RegionName&#x27;</span>]</span><br><span class="line">               <span class="keyword">for</span> region <span class="keyword">in</span> ec2_client.describe_regions()[<span class="string">&#x27;Regions&#x27;</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> region <span class="keyword">in</span> regions:</span><br><span class="line">        ec2 = boto3.resource(<span class="string">&#x27;ec2&#x27;</span>, region_name=region)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Region:&quot;</span>, region)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># List only unattached volumes (&#x27;available&#x27; vs. &#x27;in-use&#x27;)</span></span><br><span class="line">        volumes = ec2.volumes.<span class="built_in">filter</span>(</span><br><span class="line">            Filters=[&#123;<span class="string">&#x27;Name&#x27;</span>: <span class="string">&#x27;status&#x27;</span>, <span class="string">&#x27;Values&#x27;</span>: [<span class="string">&#x27;available&#x27;</span>]&#125;])</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> volume <span class="keyword">in</span> volumes:</span><br><span class="line">            v = ec2.Volume(volume.<span class="built_in">id</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Deleting EBS volume: &#123;&#125;, Size: &#123;&#125; GiB&quot;</span>.<span class="built_in">format</span>(v.<span class="built_in">id</span>, v.size))</span><br><span class="line">            v.delete()</span><br></pre></td></tr></table></figure>
<h3 id="deregistering-old-amis"><a class="markdownIt-Anchor" href="#deregistering-old-amis"></a> Deregistering Old AMIs</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> dateutil.parser <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">days_old</span>(<span class="params">date</span>):</span><br><span class="line">    parsed = parse(date).replace(tzinfo=<span class="literal">None</span>)</span><br><span class="line">    diff = datetime.datetime.now() - parsed</span><br><span class="line">    <span class="keyword">return</span> diff.days</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get list of regions</span></span><br><span class="line">    ec2_client = boto3.client(<span class="string">&#x27;ec2&#x27;</span>)</span><br><span class="line">    regions = [region[<span class="string">&#x27;RegionName&#x27;</span>]</span><br><span class="line">               <span class="keyword">for</span> region <span class="keyword">in</span> ec2_client.describe_regions()[<span class="string">&#x27;Regions&#x27;</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> region <span class="keyword">in</span> regions:</span><br><span class="line">        ec2 = boto3.client(<span class="string">&#x27;ec2&#x27;</span>, region_name=region)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Region:&quot;</span>, region)</span><br><span class="line"></span><br><span class="line">        amis = ec2.describe_images(Owners=[<span class="string">&#x27;self&#x27;</span>])[<span class="string">&#x27;Images&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> ami <span class="keyword">in</span> amis:</span><br><span class="line">            creation_date = ami[<span class="string">&#x27;CreationDate&#x27;</span>]</span><br><span class="line">            age_days = days_old(creation_date)</span><br><span class="line">            image_id = ami[<span class="string">&#x27;ImageId&#x27;</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;ImageId: &#123;&#125;, CreationDate: &#123;&#125; (&#123;&#125; days old)&#x27;</span>.<span class="built_in">format</span>(</span><br><span class="line">                image_id, creation_date, age_days))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> age_days &gt;= <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;Deleting ImageId:&#x27;</span>, image_id)</span><br><span class="line"></span><br><span class="line">                <span class="comment"># Deregister the AMI</span></span><br><span class="line">                ec2.deregister_image(ImageId=image_id)</span><br></pre></td></tr></table></figure>
<h1 id="boto3-dynamodb"><a class="markdownIt-Anchor" href="#boto3-dynamodb"></a> Boto3 - Dynamodb</h1>
<p>This chapter follows <a href="https://github.com/linuxacademy/content-lambda-boto3">https://github.com/linuxacademy/content-lambda-boto3</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line">client = boto3.client(<span class="string">&#x27;dynamodb&#x27;</span>, endpoint_url=<span class="string">&#x27;http://localhost:8000&#x27;</span>) <span class="comment"># dynamodb-local</span></span><br><span class="line">client.list_tables()</span><br></pre></td></tr></table></figure>
<h3 id="create-tables"><a class="markdownIt-Anchor" href="#create-tables"></a> Create Tables</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dynamodb = boto3.resource(<span class="string">&#x27;dynamodb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">table = dynamodb.create_table(</span><br><span class="line">    TableName=<span class="string">&#x27;Movies&#x27;</span>,</span><br><span class="line">    KeySchema=[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&#x27;AttributeName&#x27;</span>: <span class="string">&#x27;year&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;KeyType&#x27;</span>: <span class="string">&#x27;HASH&#x27;</span>  <span class="comment"># Partition key</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&#x27;AttributeName&#x27;</span>: <span class="string">&#x27;title&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;KeyType&#x27;</span>: <span class="string">&#x27;RANGE&#x27;</span>  <span class="comment"># Sort key</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    AttributeDefinitions=[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&#x27;AttributeName&#x27;</span>: <span class="string">&#x27;year&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;AttributeType&#x27;</span>: <span class="string">&#x27;N&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&#x27;AttributeName&#x27;</span>: <span class="string">&#x27;title&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;AttributeType&#x27;</span>: <span class="string">&#x27;S&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">    ],</span><br><span class="line">    ProvisionedThroughput=&#123;</span><br><span class="line">        <span class="string">&#x27;ReadCapacityUnits&#x27;</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="string">&#x27;WriteCapacityUnits&#x27;</span>: <span class="number">5</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Table status:&#x27;</span>, table.table_status)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Waiting for&#x27;</span>, table.name, <span class="string">&#x27;to complete creating...&#x27;</span>)</span><br><span class="line">table.meta.client.get_waiter(<span class="string">&#x27;table_exists&#x27;</span>).wait(TableName=<span class="string">&#x27;Movies&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Table status:&#x27;</span>, dynamodb.Table(<span class="string">&#x27;Movies&#x27;</span>).table_status)</span><br></pre></td></tr></table></figure>
<h3 id="load-data"><a class="markdownIt-Anchor" href="#load-data"></a> Load Data</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dynamodb = boto3.resource(<span class="string">&#x27;dynamodb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">table = dynamodb.Table(<span class="string">&#x27;Movies&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;moviedata.json&quot;</span>) <span class="keyword">as</span> json_file:</span><br><span class="line">    movies = json.load(json_file, parse_float=decimal.Decimal)</span><br><span class="line">    <span class="keyword">for</span> movie <span class="keyword">in</span> movies:</span><br><span class="line">        year = <span class="built_in">int</span>(movie[<span class="string">&#x27;year&#x27;</span>])</span><br><span class="line">        title = movie[<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">        info = movie[<span class="string">&#x27;info&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Adding movie:&quot;</span>, year, title)</span><br><span class="line"></span><br><span class="line">        table.put_item(</span><br><span class="line">            Item=&#123;</span><br><span class="line">                <span class="string">&#x27;year&#x27;</span>: year,</span><br><span class="line">                <span class="string">&#x27;title&#x27;</span>: title,</span><br><span class="line">                <span class="string">&#x27;info&#x27;</span>: info,</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br></pre></td></tr></table></figure>
<p><code>moviedata.json</code>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;year&quot;</span><span class="punctuation">:</span> <span class="number">2013</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Rush&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;info&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;directors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;Ron Howard&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;release_date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2013-09-02T00:00:00Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rating&quot;</span><span class="punctuation">:</span> <span class="number">8.3</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;genres&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;Action&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Biography&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Drama&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Sport&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;image_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;http://ia.media-imdb.com/images/M/MV5BMTQyMDE0MTY0OV5BMl5BanBnXkFtZTcwMjI2OTI0OQ@@._V1_SX400_.jpg&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;plot&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A re-creation of the merciless 1970s rivalry between Formula One rivals James Hunt and Niki Lauda.&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;rank&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;running_time_secs&quot;</span><span class="punctuation">:</span> <span class="number">7380</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;actors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;Daniel Bruhl&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Chris Hemsworth&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Olivia Wilde&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>
<h3 id="put-item"><a class="markdownIt-Anchor" href="#put-item"></a> Put Item</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DecimalEncoder</span>(json.JSONEncoder):</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;Helper class to convert a DynamoDB item to JSON&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">default</span>(<span class="params">self, o</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(o, decimal.Decimal):</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">abs</span>(o) % <span class="number">1</span> &gt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">float</span>(o)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">int</span>(o)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>(DecimalEncoder, <span class="variable language_">self</span>).default(o)</span><br><span class="line"></span><br><span class="line">title = <span class="string">&quot;The Big New Movie&quot;</span></span><br><span class="line">year = <span class="number">2015</span></span><br><span class="line"></span><br><span class="line">response = table.put_item(</span><br><span class="line">    Item=&#123;</span><br><span class="line">        <span class="string">&#x27;year&#x27;</span>: year,</span><br><span class="line">        <span class="string">&#x27;title&#x27;</span>: title,</span><br><span class="line">        <span class="string">&#x27;info&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;plot&#x27;</span>: <span class="string">&quot;Nothing happens at all.&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;rating&#x27;</span>: decimal.Decimal(<span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;PutItem succeeded:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(json.dumps(response, indent=<span class="number">4</span>, cls=DecimalEncoder))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="get-item"><a class="markdownIt-Anchor" href="#get-item"></a> Get Item</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> botocore.exceptions <span class="keyword">import</span> ClientError</span><br><span class="line"></span><br><span class="line">title = <span class="string">&quot;The Big New Movie&quot;</span></span><br><span class="line">year = <span class="number">2015</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = table.get_item(</span><br><span class="line">        Key=&#123;</span><br><span class="line">            <span class="string">&#x27;year&#x27;</span>: year,</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span>: title</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">except</span> ClientError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e.response[<span class="string">&#x27;Error&#x27;</span>][<span class="string">&#x27;Message&#x27;</span>])</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    item = response[<span class="string">&#x27;Item&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;GetItem succeeded:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(json.dumps(item, indent=<span class="number">4</span>, cls=DecimalEncoder))</span><br></pre></td></tr></table></figure>
<h3 id="update-item"><a class="markdownIt-Anchor" href="#update-item"></a> Update Item</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">title = <span class="string">&quot;The Big New Movie&quot;</span></span><br><span class="line">year = <span class="number">2015</span></span><br><span class="line"></span><br><span class="line">response = table.update_item(</span><br><span class="line">    Key=&#123;</span><br><span class="line">        <span class="string">&#x27;year&#x27;</span>: year,</span><br><span class="line">        <span class="string">&#x27;title&#x27;</span>: title</span><br><span class="line">    &#125;,</span><br><span class="line">    UpdateExpression=<span class="string">&quot;set info.rating = :r, info.plot=:p, info.actors=:a&quot;</span>,</span><br><span class="line">    ExpressionAttributeValues=&#123;</span><br><span class="line">        <span class="string">&#x27;:r&#x27;</span>: decimal.Decimal(<span class="number">5.5</span>),</span><br><span class="line">        <span class="string">&#x27;:p&#x27;</span>: <span class="string">&quot;Everything happens all at once.&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;:a&#x27;</span>: [<span class="string">&quot;Larry&quot;</span>, <span class="string">&quot;Moe&quot;</span>, <span class="string">&quot;Curly&quot;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    ReturnValues=<span class="string">&quot;UPDATED_NEW&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;UpdateItem succeeded:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(json.dumps(response, indent=<span class="number">4</span>, cls=DecimalEncoder))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">title = <span class="string">&quot;The Big New Movie&quot;</span></span><br><span class="line">year = <span class="number">2015</span></span><br><span class="line"></span><br><span class="line">response = table.update_item(</span><br><span class="line">    Key=&#123;</span><br><span class="line">        <span class="string">&#x27;year&#x27;</span>: year,</span><br><span class="line">        <span class="string">&#x27;title&#x27;</span>: title</span><br><span class="line">    &#125;,</span><br><span class="line">    UpdateExpression=<span class="string">&quot;set info.rating = info.rating + :val&quot;</span>,</span><br><span class="line">    ExpressionAttributeValues=&#123;</span><br><span class="line">        <span class="string">&#x27;:val&#x27;</span>: decimal.Decimal(<span class="number">1</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    ReturnValues=<span class="string">&quot;UPDATED_NEW&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;UpdateItem succeeded:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(json.dumps(response, indent=<span class="number">4</span>, cls=DecimalEncoder))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">title = <span class="string">&quot;The Big New Movie&quot;</span></span><br><span class="line">year = <span class="number">2015</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Conditional update (will fail)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Attempting conditional update...&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = table.update_item(</span><br><span class="line">        Key=&#123;</span><br><span class="line">            <span class="string">&#x27;year&#x27;</span>: year,</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span>: title</span><br><span class="line">        &#125;,</span><br><span class="line">        UpdateExpression=<span class="string">&quot;remove info.actors[0]&quot;</span>,</span><br><span class="line">        ConditionExpression=<span class="string">&quot;size(info.actors) &gt;= :num&quot;</span>,</span><br><span class="line">        ExpressionAttributeValues=&#123;</span><br><span class="line">            <span class="string">&#x27;:num&#x27;</span>: <span class="number">3</span></span><br><span class="line">        &#125;,</span><br><span class="line">        ReturnValues=<span class="string">&quot;UPDATED_NEW&quot;</span></span><br><span class="line">    )</span><br><span class="line"><span class="keyword">except</span> ClientError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">if</span> e.response[<span class="string">&#x27;Error&#x27;</span>][<span class="string">&#x27;Code&#x27;</span>] == <span class="string">&quot;ConditionalCheckFailedException&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(e.response[<span class="string">&#x27;Error&#x27;</span>][<span class="string">&#x27;Message&#x27;</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;UpdateItem succeeded:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(json.dumps(response, indent=<span class="number">4</span>, cls=DecimalEncoder))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="delete-item"><a class="markdownIt-Anchor" href="#delete-item"></a> Delete Item</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">title = <span class="string">&quot;The Big New Movie&quot;</span></span><br><span class="line">year = <span class="number">2015</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Attempting a conditional delete...&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = table.delete_item(</span><br><span class="line">        Key=&#123;</span><br><span class="line">            <span class="string">&#x27;year&#x27;</span>: year,</span><br><span class="line">            <span class="string">&#x27;title&#x27;</span>: title</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line"><span class="keyword">except</span> ClientError <span class="keyword">as</span> e:</span><br><span class="line">    <span class="keyword">if</span> e.response[<span class="string">&#x27;Error&#x27;</span>][<span class="string">&#x27;Code&#x27;</span>] == <span class="string">&quot;ConditionalCheckFailedException&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(e.response[<span class="string">&#x27;Error&#x27;</span>][<span class="string">&#x27;Message&#x27;</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;DeleteItem succeeded:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(json.dumps(response, indent=<span class="number">4</span>, cls=DecimalEncoder))</span><br></pre></td></tr></table></figure>
<h3 id="query"><a class="markdownIt-Anchor" href="#query"></a> Query</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> boto3.dynamodb.conditions <span class="keyword">import</span> Key</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Movies from 1985&quot;</span>)</span><br><span class="line"></span><br><span class="line">response = table.query(</span><br><span class="line">    KeyConditionExpression=Key(<span class="string">&#x27;year&#x27;</span>).eq(<span class="number">1985</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> response[<span class="string">&#x27;Items&#x27;</span>]:</span><br><span class="line">    <span class="built_in">print</span>(i[<span class="string">&#x27;year&#x27;</span>], <span class="string">&quot;:&quot;</span>, i[<span class="string">&#x27;title&#x27;</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Movies from 1992 - titles A-L, with genres and lead actor&quot;</span>)</span><br><span class="line"></span><br><span class="line">response = table.query(</span><br><span class="line">    ProjectionExpression=<span class="string">&quot;#yr, title, info.genres, info.actors[0]&quot;</span>,</span><br><span class="line">    <span class="comment"># Expression Attribute Names for Projection Expression only.</span></span><br><span class="line">    ExpressionAttributeNames=&#123;<span class="string">&quot;#yr&quot;</span>: <span class="string">&quot;year&quot;</span>&#125;,</span><br><span class="line">    KeyConditionExpression=Key(<span class="string">&#x27;year&#x27;</span>).eq(</span><br><span class="line">        <span class="number">1992</span>) &amp; Key(<span class="string">&#x27;title&#x27;</span>).between(<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> response[<span class="string">u&#x27;Items&#x27;</span>]:</span><br><span class="line">    <span class="built_in">print</span>(json.dumps(i, cls=DecimalEncoder))</span><br></pre></td></tr></table></figure>
<h3 id="scan"><a class="markdownIt-Anchor" href="#scan"></a> Scan</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">fe = Key(<span class="string">&#x27;year&#x27;</span>).between(<span class="number">1950</span>, <span class="number">1959</span>)</span><br><span class="line">pe = <span class="string">&quot;#yr, title, info.rating&quot;</span></span><br><span class="line"><span class="comment"># Expression Attribute Names for Projection Expression only.</span></span><br><span class="line">ean = &#123;<span class="string">&quot;#yr&quot;</span>: <span class="string">&quot;year&quot;</span>, &#125;</span><br><span class="line">esk = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">response = table.scan(</span><br><span class="line">    FilterExpression=fe,</span><br><span class="line">    ProjectionExpression=pe,</span><br><span class="line">    ExpressionAttributeNames=ean</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> response[<span class="string">&#x27;Items&#x27;</span>]:</span><br><span class="line">    <span class="built_in">print</span>(json.dumps(i, cls=DecimalEncoder))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="string">&#x27;LastEvaluatedKey&#x27;</span> <span class="keyword">in</span> response:</span><br><span class="line">    response = table.scan(</span><br><span class="line">        ProjectionExpression=pe,</span><br><span class="line">        FilterExpression=fe,</span><br><span class="line">        ExpressionAttributeNames=ean,</span><br><span class="line">        ExclusiveStartKey=response[<span class="string">&#x27;LastEvaluatedKey&#x27;</span>]</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> response[<span class="string">&#x27;Items&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(json.dumps(i, cls=DecimalEncoder))</span><br></pre></td></tr></table></figure>
<h3 id="delete-table"><a class="markdownIt-Anchor" href="#delete-table"></a> Delete table</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line">dynamodb = boto3.resource(<span class="string">&#x27;dynamodb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">table = dynamodb.Table(<span class="string">&#x27;Movies&#x27;</span>)</span><br><span class="line"></span><br><span class="line">table.delete()</span><br></pre></td></tr></table></figure>
<h1 id="boto3-s3"><a class="markdownIt-Anchor" href="#boto3-s3"></a> Boto3 - S3</h1>
<p>This chapter follows <a href="https://github.com/linuxacademy/content-lambda-boto3">https://github.com/linuxacademy/content-lambda-boto3</a></p>
<h2 id="resizing-images"><a class="markdownIt-Anchor" href="#resizing-images"></a> Resizing Images</h2>
<p><img src="/photos/aws-note/Resizing-Images.png" alt="Resizing-Images" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> tempfile</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">s3 = boto3.client(<span class="string">&#x27;s3&#x27;</span>)</span><br><span class="line">DEST_BUCKET = os.environ[<span class="string">&#x27;DEST_BUCKET&#x27;</span>]</span><br><span class="line">SIZE = <span class="number">128</span>, <span class="number">128</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> record <span class="keyword">in</span> event[<span class="string">&#x27;Records&#x27;</span>]:</span><br><span class="line">        source_bucket = record[<span class="string">&#x27;s3&#x27;</span>][<span class="string">&#x27;bucket&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">        key = record[<span class="string">&#x27;s3&#x27;</span>][<span class="string">&#x27;object&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line">        thumb = <span class="string">&#x27;thumb-&#x27;</span> + key</span><br><span class="line">        <span class="keyword">with</span> tempfile.TemporaryDirectory() <span class="keyword">as</span> tmpdir:</span><br><span class="line">            download_path = os.path.join(tmpdir, key)</span><br><span class="line">            upload_path = os.path.join(tmpdir, thumb)</span><br><span class="line">            s3.download_file(source_bucket, key, download_path)</span><br><span class="line">            generate_thumbnail(download_path, upload_path)</span><br><span class="line">            s3.upload_file(upload_path, DEST_BUCKET, thumb)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Thumbnail image saved at &#123;&#125;/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(DEST_BUCKET, thumb))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_thumbnail</span>(<span class="params">source_path, dest_path</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Generating thumbnail from:&#x27;</span>, source_path)</span><br><span class="line">    <span class="keyword">with</span> Image.<span class="built_in">open</span>(source_path) <span class="keyword">as</span> image:</span><br><span class="line">        image.thumbnail(SIZE)</span><br><span class="line">        image.save(dest_path)</span><br></pre></td></tr></table></figure>
<p>To get pillow pkg, find it at <a href="https://pypi.org/project/Pillow/">https://pypi.org/project/Pillow/</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip Pillow-5.4.1-cp37-cp37m-manylinux1_x86_64.whl</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf Pillow-5.4.1.dist-info</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">zip -r9 lambda.zip lambda_function.py PIL</span><br></pre></td></tr></table></figure>
<p>upload the zip file to AWS Lambda.</p>
<h2 id="importing-csv-files-into-dynamodb"><a class="markdownIt-Anchor" href="#importing-csv-files-into-dynamodb"></a> Importing CSV Files into DynamoDB</h2>
<p><img src="/photos/aws-note/Importing-CSV-Files-into-DynamoDB.png" alt="Importing-CSV-Files-into-DynamoDB" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> tempfile</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line">dynamodb = boto3.resource(<span class="string">&#x27;dynamodb&#x27;</span>)</span><br><span class="line">table = dynamodb.Table(<span class="string">&#x27;Movies&#x27;</span>)</span><br><span class="line">s3 = boto3.client(<span class="string">&#x27;s3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> record <span class="keyword">in</span> event[<span class="string">&#x27;Records&#x27;</span>]:</span><br><span class="line">        source_bucket = record[<span class="string">&#x27;s3&#x27;</span>][<span class="string">&#x27;bucket&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">        key = record[<span class="string">&#x27;s3&#x27;</span>][<span class="string">&#x27;object&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line">        <span class="keyword">with</span> tempfile.TemporaryDirectory() <span class="keyword">as</span> tmpdir:</span><br><span class="line">            download_path = os.path.join(tmpdir, key)</span><br><span class="line">            s3.download_file(source_bucket, key, download_path)</span><br><span class="line">            items = read_csv(download_path)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">with</span> table.batch_writer() <span class="keyword">as</span> batch:</span><br><span class="line">                <span class="keyword">for</span> item <span class="keyword">in</span> items:</span><br><span class="line">                    batch.put_item(Item=item)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read_csv</span>(<span class="params">file</span>):</span><br><span class="line">    items = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file) <span class="keyword">as</span> csvfile:</span><br><span class="line">        reader = csv.DictReader(csvfile)</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">            data = &#123;&#125;</span><br><span class="line">            data[<span class="string">&#x27;Meta&#x27;</span>] = &#123;&#125;</span><br><span class="line">            data[<span class="string">&#x27;Year&#x27;</span>] = <span class="built_in">int</span>(row[<span class="string">&#x27;Year&#x27;</span>])</span><br><span class="line">            data[<span class="string">&#x27;Title&#x27;</span>] = row[<span class="string">&#x27;Title&#x27;</span>] <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line">            data[<span class="string">&#x27;Meta&#x27;</span>][<span class="string">&#x27;Length&#x27;</span>] = <span class="built_in">int</span>(row[<span class="string">&#x27;Length&#x27;</span>] <span class="keyword">or</span> <span class="number">0</span>)</span><br><span class="line">            data[<span class="string">&#x27;Meta&#x27;</span>][<span class="string">&#x27;Subject&#x27;</span>] = row[<span class="string">&#x27;Subject&#x27;</span>] <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line">            data[<span class="string">&#x27;Meta&#x27;</span>][<span class="string">&#x27;Actor&#x27;</span>] = row[<span class="string">&#x27;Actor&#x27;</span>] <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line">            data[<span class="string">&#x27;Meta&#x27;</span>][<span class="string">&#x27;Actress&#x27;</span>] = row[<span class="string">&#x27;Actress&#x27;</span>] <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line">            data[<span class="string">&#x27;Meta&#x27;</span>][<span class="string">&#x27;Director&#x27;</span>] = row[<span class="string">&#x27;Director&#x27;</span>] <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line">            data[<span class="string">&#x27;Meta&#x27;</span>][<span class="string">&#x27;Popularity&#x27;</span>] = row[<span class="string">&#x27;Popularity&#x27;</span>] <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line">            data[<span class="string">&#x27;Meta&#x27;</span>][<span class="string">&#x27;Awards&#x27;</span>] = row[<span class="string">&#x27;Awards&#x27;</span>] == <span class="string">&#x27;Yes&#x27;</span></span><br><span class="line">            data[<span class="string">&#x27;Meta&#x27;</span>][<span class="string">&#x27;Image&#x27;</span>] = row[<span class="string">&#x27;Image&#x27;</span>] <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line">            data[<span class="string">&#x27;Meta&#x27;</span>] = &#123;k: v <span class="keyword">for</span> k,</span><br><span class="line">                            v <span class="keyword">in</span> data[<span class="string">&#x27;Meta&#x27;</span>].items() <span class="keyword">if</span> v <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>&#125;</span><br><span class="line">            items.append(data)</span><br><span class="line">    <span class="keyword">return</span> items</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="transcribing-audio"><a class="markdownIt-Anchor" href="#transcribing-audio"></a> Transcribing Audio</h2>
<p><img src="/photos/aws-note/Transcribing-Audio.png" alt="Transcribing-Audio" /></p>
<p>TranscribeAudio:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line">s3 = boto3.client(<span class="string">&#x27;s3&#x27;</span>)</span><br><span class="line">transcribe = boto3.client(<span class="string">&#x27;transcribe&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> record <span class="keyword">in</span> event[<span class="string">&#x27;Records&#x27;</span>]:</span><br><span class="line">        source_bucket = record[<span class="string">&#x27;s3&#x27;</span>][<span class="string">&#x27;bucket&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">        key = record[<span class="string">&#x27;s3&#x27;</span>][<span class="string">&#x27;object&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line">        object_url = <span class="string">&quot;https://s3.amazonaws.com/&#123;0&#125;/&#123;1&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            source_bucket, key)</span><br><span class="line">        response = transcribe.start_transcription_job(</span><br><span class="line">            TranscriptionJobName=<span class="string">&#x27;MyTranscriptionJob&#x27;</span>,</span><br><span class="line">            Media=&#123;<span class="string">&#x27;MediaFileUri&#x27;</span>: object_url&#125;,</span><br><span class="line">            MediaFormat=<span class="string">&#x27;mp3&#x27;</span>,</span><br><span class="line">            LanguageCode=<span class="string">&#x27;en-US&#x27;</span></span><br><span class="line">        )</span><br><span class="line">        <span class="built_in">print</span>(response)</span><br></pre></td></tr></table></figure>
<p>ParseTranscription:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">BUCKET_NAME = os.environ[<span class="string">&#x27;BUCKET_NAME&#x27;</span>]</span><br><span class="line"></span><br><span class="line">s3 = boto3.resource(<span class="string">&#x27;s3&#x27;</span>)</span><br><span class="line">transcribe = boto3.client(<span class="string">&#x27;transcribe&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line">    job_name = event[<span class="string">&#x27;detail&#x27;</span>][<span class="string">&#x27;TranscriptionJobName&#x27;</span>]</span><br><span class="line">    job = transcribe.get_transcription_job(TranscriptionJobName=job_name)</span><br><span class="line">    uri = job[<span class="string">&#x27;TranscriptionJob&#x27;</span>][<span class="string">&#x27;Transcript&#x27;</span>][<span class="string">&#x27;TranscriptFileUri&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(uri)</span><br><span class="line"></span><br><span class="line">    content = urllib.request.urlopen(uri).read().decode(<span class="string">&#x27;UTF-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(json.dumps(content))</span><br><span class="line"></span><br><span class="line">    data = json.loads(content)</span><br><span class="line"></span><br><span class="line">    text = data[<span class="string">&#x27;results&#x27;</span>][<span class="string">&#x27;transcripts&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;transcript&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    <span class="built_in">object</span> = s3.Object(BUCKET_NAME, job_name + <span class="string">&#x27;-asrOutput.txt&#x27;</span>)</span><br><span class="line">    <span class="built_in">object</span>.put(Body=text)</span><br></pre></td></tr></table></figure>
<h2 id="detecting-faces-with-rekognition"><a class="markdownIt-Anchor" href="#detecting-faces-with-rekognition"></a> Detecting Faces with Rekognition</h2>
<p><img src="/photos/aws-note/Detecting-Faces-with-Rekognition.png" alt="Detecting-Faces-with-Rekognition" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line">TABLE_NAME = os.environ[<span class="string">&#x27;TABLE_NAME&#x27;</span>]</span><br><span class="line"></span><br><span class="line">dynamodb = boto3.resource(<span class="string">&#x27;dynamodb&#x27;</span>)</span><br><span class="line">table = dynamodb.Table(TABLE_NAME)</span><br><span class="line">s3 = boto3.resource(<span class="string">&#x27;s3&#x27;</span>)</span><br><span class="line">rekognition = boto3.client(<span class="string">&#x27;rekognition&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get the object from the event</span></span><br><span class="line">    bucket = event[<span class="string">&#x27;Records&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;s3&#x27;</span>][<span class="string">&#x27;bucket&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    key = event[<span class="string">&#x27;Records&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;s3&#x27;</span>][<span class="string">&#x27;object&#x27;</span>][<span class="string">&#x27;key&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    obj = s3.Object(bucket, key)</span><br><span class="line">    image = obj.get()[<span class="string">&#x27;Body&#x27;</span>].read()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Recognizing celebrities...&#x27;</span>)</span><br><span class="line">    response = rekognition.recognize_celebrities(Image=&#123;<span class="string">&#x27;Bytes&#x27;</span>: image&#125;)</span><br><span class="line"></span><br><span class="line">    names = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> celebrity <span class="keyword">in</span> response[<span class="string">&#x27;CelebrityFaces&#x27;</span>]:</span><br><span class="line">        name = celebrity[<span class="string">&#x27;Name&#x27;</span>]</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Name: &#x27;</span> + name)</span><br><span class="line">        names.append(name)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(names)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Saving face data to DynamoDB table:&#x27;</span>, TABLE_NAME)</span><br><span class="line">    response = table.put_item(</span><br><span class="line">        Item=&#123;</span><br><span class="line">            <span class="string">&#x27;key&#x27;</span>: key,</span><br><span class="line">            <span class="string">&#x27;names&#x27;</span>: names,</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">print</span>(response)</span><br></pre></td></tr></table></figure>
<h1 id="boto3-sqs"><a class="markdownIt-Anchor" href="#boto3-sqs"></a> Boto3 - SQS</h1>
<h2 id="triggering-lambda-from-sqs"><a class="markdownIt-Anchor" href="#triggering-lambda-from-sqs"></a> Triggering Lambda from SQS</h2>
<p><img src="/photos/aws-note/Triggering-Lambda-from-SQS.png" alt="Triggering-Lambda-from-SQS" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line">QUEUE_NAME = os.environ[<span class="string">&#x27;QUEUE_NAME&#x27;</span>]</span><br><span class="line">MAX_QUEUE_MESSAGES = os.environ[<span class="string">&#x27;MAX_QUEUE_MESSAGES&#x27;</span>]</span><br><span class="line">DYNAMODB_TABLE = os.environ[<span class="string">&#x27;DYNAMODB_TABLE&#x27;</span>]</span><br><span class="line"></span><br><span class="line">sqs = boto3.resource(<span class="string">&#x27;sqs&#x27;</span>)</span><br><span class="line">dynamodb = boto3.resource(<span class="string">&#x27;dynamodb&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Receive messages from SQS queue</span></span><br><span class="line">    queue = sqs.get_queue_by_name(QueueName=QUEUE_NAME)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;ApproximateNumberOfMessages:&quot;</span>,</span><br><span class="line">          queue.attributes.get(<span class="string">&#x27;ApproximateNumberOfMessages&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> message <span class="keyword">in</span> queue.receive_messages(</span><br><span class="line">            MaxNumberOfMessages=<span class="built_in">int</span>(MAX_QUEUE_MESSAGES)):</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(message)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Write message to DynamoDB</span></span><br><span class="line">        table = dynamodb.Table(DYNAMODB_TABLE)</span><br><span class="line"></span><br><span class="line">        response = table.put_item(</span><br><span class="line">            Item=&#123;</span><br><span class="line">                <span class="string">&#x27;MessageId&#x27;</span>: message.message_id,</span><br><span class="line">                <span class="string">&#x27;Body&#x27;</span>: message.body,</span><br><span class="line">                <span class="string">&#x27;Timestamp&#x27;</span>: datetime.now().isoformat()</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Wrote message to DynamoDB:&quot;</span>, json.dumps(response))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Delete SQS message</span></span><br><span class="line">        message.delete()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Deleted message:&quot;</span>, message.message_id)</span><br></pre></td></tr></table></figure>
<p>send_message.py:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3.7</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"><span class="keyword">from</span> faker <span class="keyword">import</span> Faker</span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">&quot;--queue-name&quot;</span>, <span class="string">&quot;-q&quot;</span>, required=<span class="literal">True</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&quot;SQS queue name&quot;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&quot;--interval&quot;</span>, <span class="string">&quot;-i&quot;</span>, required=<span class="literal">True</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&quot;timer interval&quot;</span>, <span class="built_in">type</span>=<span class="built_in">float</span>)</span><br><span class="line">parser.add_argument(<span class="string">&quot;--message&quot;</span>, <span class="string">&quot;-m&quot;</span>, <span class="built_in">help</span>=<span class="string">&quot;message to send&quot;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&quot;--log&quot;</span>, <span class="string">&quot;-l&quot;</span>, default=<span class="string">&quot;INFO&quot;</span>,</span><br><span class="line">                    <span class="built_in">help</span>=<span class="string">&quot;logging level&quot;</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> args.log:</span><br><span class="line">    logging.basicConfig(</span><br><span class="line">        <span class="built_in">format</span>=<span class="string">&#x27;[%(levelname)s] %(message)s&#x27;</span>, level=args.log)</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    parser.print_help(sys.stderr)</span><br><span class="line"></span><br><span class="line">sqs = boto3.client(<span class="string">&#x27;sqs&#x27;</span>)</span><br><span class="line"></span><br><span class="line">response = sqs.get_queue_url(QueueName=args.queue_name)</span><br><span class="line"></span><br><span class="line">queue_url = response[<span class="string">&#x27;QueueUrl&#x27;</span>]</span><br><span class="line"></span><br><span class="line">logging.info(queue_url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    message = args.message</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> args.message:</span><br><span class="line">        fake = Faker()</span><br><span class="line">        message = fake.text()</span><br><span class="line"></span><br><span class="line">    logging.info(<span class="string">&#x27;Sending message: &#x27;</span> + message)</span><br><span class="line"></span><br><span class="line">    response = sqs.send_message(</span><br><span class="line">        QueueUrl=queue_url, MessageBody=message)</span><br><span class="line"></span><br><span class="line">    logging.info(<span class="string">&#x27;MessageId: &#x27;</span> + response[<span class="string">&#x27;MessageId&#x27;</span>])</span><br><span class="line">    sleep(args.interval)</span><br></pre></td></tr></table></figure>
<h2 id="creating-a-queue-using-cross-account-permissions"><a class="markdownIt-Anchor" href="#creating-a-queue-using-cross-account-permissions"></a> Creating a Queue Using Cross-Account Permissions</h2>
<p><img src="/photos/aws-note/Creating-a-Queue-Using-Cross-Account-Permissions.png" alt="Creating-a-Queue-Using-Cross-Account-Permissions" /></p>
<p>SQS does not allow API calls such as CreateQueue using cross-account permissions. A workaround is to create and invoke a Lambda function in another account in order to call that API.</p>
<p>Create AWS CLI Profiles<br />
Development account admin:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws configure --profile devadmin</span><br><span class="line">Production account admin:</span><br><span class="line"></span><br><span class="line">aws configure --profile prodadmin</span><br></pre></td></tr></table></figure>
<p>Create a Lambda Function in the Production Account<br />
Function name: CreateSQSQueue</p>
<p>See lambda_function.py and assign the role lambda_execution_role.json.</p>
<p>Assign Permissions to the Lambda Function<br />
Add permissions to the production Lambda function that allow it to be invoked by the development account user:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws lambda add-permission \</span><br><span class="line">--function-name CreateSQSQueue \</span><br><span class="line">--statement-id DevAccountAccess \</span><br><span class="line">--action <span class="string">&#x27;lambda:InvokeFunction&#x27;</span> \</span><br><span class="line">--principal <span class="string">&#x27;arn:aws:iam::__DEVELOPMENT_ACCOUNT_NUMBER__:user/devadmin&#x27;</span> \</span><br><span class="line">--region us-east-2 \</span><br><span class="line">--profile prodadmin</span><br></pre></td></tr></table></figure>
<p>To view the policy:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws lambda get-policy \</span><br><span class="line">--function-name CreateSQSQueue \</span><br><span class="line">--region us-east-2 \</span><br><span class="line">--profile prodadmin</span><br></pre></td></tr></table></figure>
<p>To remove the policy:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws lambda remove-permission \</span><br><span class="line">--function-name CreateSQSQueue \</span><br><span class="line">--statement-id DevAccountAccess \</span><br><span class="line">--region us-east-2 \</span><br><span class="line">--profile prodadmin</span><br></pre></td></tr></table></figure>
<p>Invoke the Production Lambda Function from the Development Account:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">aws lambda invoke \</span><br><span class="line">--function-name <span class="string">&#x27;__LAMBDA_FUNCTION_ARN__&#x27;</span> \</span><br><span class="line">--payload <span class="string">&#x27;&#123;&quot;QueueName&quot;: &quot;MyQueue&quot; &#125;&#x27;</span> \</span><br><span class="line">--invocation-type RequestResponse \</span><br><span class="line">--profile devadmin \</span><br><span class="line">--region us-east-2 \</span><br><span class="line">output.txt</span><br></pre></td></tr></table></figure>
<p>lambda_function.py:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line">sqs = boto3.resource(<span class="string">&#x27;sqs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line"></span><br><span class="line">    queue = sqs.create_queue(QueueName=event[<span class="string">&#x27;QueueName&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Queue URL&#x27;</span>, queue.url)</span><br></pre></td></tr></table></figure>
<p>lambda_execution_role.json:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2012-10-17&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Statement&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;logs:CreateLogGroup&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;logs:CreateLogStream&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;logs:PutLogEvents&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:logs:*:*:*&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;sqs:CreateQueue&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h1 id="boto3-third-party"><a class="markdownIt-Anchor" href="#boto3-third-party"></a> Boto3 - Third party</h1>
<h2 id="creating-slack-notifications-for-cloudwatch-alarms"><a class="markdownIt-Anchor" href="#creating-slack-notifications-for-cloudwatch-alarms"></a> Creating Slack Notifications for CloudWatch Alarms</h2>
<p><img src="/photos/aws-note/Creating-Slack-Notifications-for-CloudWatch-Alarms.png" alt="Creating-Slack-Notifications-for-CloudWatch-Alarms" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> urllib.error <span class="keyword">import</span> HTTPError, URLError</span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> Request, urlopen</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line">ssm = boto3.client(<span class="string">&#x27;ssm&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line">    <span class="built_in">print</span>(json.dumps(event))</span><br><span class="line"></span><br><span class="line">    message = json.loads(event[<span class="string">&#x27;Records&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;Sns&#x27;</span>][<span class="string">&#x27;Message&#x27;</span>])</span><br><span class="line">    <span class="built_in">print</span>(json.dumps(message))</span><br><span class="line"></span><br><span class="line">    alarm_name = message[<span class="string">&#x27;AlarmName&#x27;</span>]</span><br><span class="line">    new_state = message[<span class="string">&#x27;NewStateValue&#x27;</span>]</span><br><span class="line">    reason = message[<span class="string">&#x27;NewStateReason&#x27;</span>]</span><br><span class="line"></span><br><span class="line">    slack_message = &#123;</span><br><span class="line">        <span class="string">&#x27;text&#x27;</span>: <span class="string">f&#x27;:fire: <span class="subst">&#123;alarm_name&#125;</span> state is now <span class="subst">&#123;new_state&#125;</span>: <span class="subst">&#123;reason&#125;</span>\n&#x27;</span></span><br><span class="line">                <span class="string">f&#x27;```\n<span class="subst">&#123;message&#125;</span>```&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    webhook_url = ssm.get_parameter(</span><br><span class="line">        Name=<span class="string">&#x27;SlackWebHookURL&#x27;</span>, WithDecryption=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">    req = Request(webhook_url[<span class="string">&#x27;Parameter&#x27;</span>][<span class="string">&#x27;Value&#x27;</span>],</span><br><span class="line">                  json.dumps(slack_message).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = urlopen(req)</span><br><span class="line">        response.read()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;Message posted to Slack&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> HTTPError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Request failed: <span class="subst">&#123;e.code&#125;</span> <span class="subst">&#123;e.reason&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;Server connection failed: <span class="subst">&#123;e.reason&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="creating-a-twitter-app"><a class="markdownIt-Anchor" href="#creating-a-twitter-app"></a> Creating a Twitter App</h2>
<p><img src="/photos/aws-note/Creating-a-Twitter-App.png" alt="Creating-a-Twitter-App" /></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"><span class="keyword">from</span> botocore.exceptions <span class="keyword">import</span> ClientError</span><br><span class="line"><span class="keyword">import</span> tweepy</span><br><span class="line"></span><br><span class="line">BUCKET_NAME = os.environ[<span class="string">&#x27;BUCKET_NAME&#x27;</span>]</span><br><span class="line">KEY = <span class="string">&#x27;data.txt&#x27;</span></span><br><span class="line"></span><br><span class="line">s3 = boto3.resource(<span class="string">&#x27;s3&#x27;</span>)</span><br><span class="line">ssm = boto3.client(<span class="string">&#x27;ssm&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_parameter</span>(<span class="params">param_name</span>):</span><br><span class="line">    response = ssm.get_parameter(Name=param_name, WithDecryption=<span class="literal">True</span>)</span><br><span class="line">    credentials = response[<span class="string">&#x27;Parameter&#x27;</span>][<span class="string">&#x27;Value&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> credentials</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_tweet_text</span>():</span><br><span class="line">    filename = <span class="string">&#x27;/tmp/&#x27;</span> + KEY</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s3.Bucket(BUCKET_NAME).download_file(KEY, filename)</span><br><span class="line">    <span class="keyword">except</span> ClientError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">if</span> e.response[<span class="string">&#x27;Error&#x27;</span>][<span class="string">&#x27;Code&#x27;</span>] == <span class="string">&quot;404&quot;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;The object <span class="subst">&#123;KEY&#125;</span> does not exist in bucket <span class="subst">&#123;BUCKET_NAME&#125;</span>.&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename) <span class="keyword">as</span> f:</span><br><span class="line">        lines = f.readlines()</span><br><span class="line">        <span class="keyword">return</span> random.choice(lines)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Get SSM parameters</span></span><br><span class="line">    CONSUMER_KEY = get_parameter(<span class="string">&#x27;/TwitterBot/consumer_key&#x27;</span>)</span><br><span class="line">    CONSUMER_SECRET = get_parameter(<span class="string">&#x27;/TwitterBot/consumer_secret&#x27;</span>)</span><br><span class="line">    ACCESS_TOKEN = get_parameter(<span class="string">&#x27;/TwitterBot/access_token&#x27;</span>)</span><br><span class="line">    ACCESS_TOKEN_SECRET = get_parameter(<span class="string">&#x27;/TwitterBot/access_token_secret&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Authenticate Tweepy</span></span><br><span class="line">    auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)</span><br><span class="line">    auth.set_access_token(ACCESS_TOKEN, ACCESS_TOKEN_SECRET)</span><br><span class="line">    api = tweepy.API(auth)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Send tweet</span></span><br><span class="line">    tweet = get_tweet_text()</span><br><span class="line">    <span class="built_in">print</span>(tweet)</span><br><span class="line">    api.update_status(tweet)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>aws</tag>
      </tags>
  </entry>
  <entry>
    <title>CPP Note</title>
    <url>/2020/07/13/cpp-note/</url>
    <content><![CDATA[<h1 id="cmake"><a class="markdownIt-Anchor" href="#cmake"></a> Cmake</h1>
<p><a href="https://chenxiaowei.gitbook.io/cmake-cookbook/">Cmake Cookbook</a></p>
<h2 id="chapter-1-from-a-simple-executable-to-libraries"><a class="markdownIt-Anchor" href="#chapter-1-from-a-simple-executable-to-libraries"></a> Chapter 1: From a Simple Executable to Libraries</h2>
<h3 id="1-compiling-a-single-source-file-into-an-executable"><a class="markdownIt-Anchor" href="#1-compiling-a-single-source-file-into-an-executable"></a> 1. Compiling a single source file into an executable</h3>
<p>CmakeLists.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.5 FATAL_ERROR)</span><br><span class="line">project(recipe-01 LANGUAGES CXX) <span class="comment"># default language is c++</span></span><br><span class="line">add_executable(hello-world hello-world.cpp)</span><br></pre></td></tr></table></figure>
<p>Normal steps:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> -p build</span><br><span class="line">$ <span class="built_in">cd</span> build</span><br><span class="line">$ cmake .. <span class="comment"># ../CmakeLists.txt exsits</span></span><br><span class="line">$ cmake --build .bash</span><br></pre></td></tr></table></figure>
<p>Single command build:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cmake -H. -Bbuild</span><br></pre></td></tr></table></figure>
<p>Build outside:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> -p /tmp/someplace</span><br><span class="line">$ <span class="built_in">cd</span> /tmp/someplace</span><br><span class="line">$ cmake /path/to/source</span><br><span class="line">$ cmake --build .</span><br></pre></td></tr></table></figure>
<p>available targets:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cmake --build . -t <span class="built_in">help</span> <span class="comment"># --target</span></span><br><span class="line"></span><br><span class="line">The following are some of the valid targets <span class="keyword">for</span> this Makefile:</span><br><span class="line">... all (the default <span class="keyword">if</span> no target is provided)</span><br><span class="line">... clean</span><br><span class="line">... depend</span><br><span class="line">... edit_cache</span><br><span class="line">... rebuild_cache</span><br><span class="line">... hello-world</span><br><span class="line">... hello-world.o</span><br><span class="line">... hello-world.i</span><br><span class="line">... hello-world.s</span><br></pre></td></tr></table></figure>
<h3 id="2-switching-generators"><a class="markdownIt-Anchor" href="#2-switching-generators"></a> 2. Switching generators</h3>
<p>Choose Ninja:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> -p build</span><br><span class="line">$ <span class="built_in">cd</span> build</span><br><span class="line">$ cmake -G Ninja .. <span class="comment"># must install Ninja first</span></span><br><span class="line">$ cmake --build .</span><br></pre></td></tr></table></figure>
<p>Single command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake -H. -Bbuild -GNinja</span><br></pre></td></tr></table></figure>
<h3 id="3-building-and-linking-static-and-shared-libraries"><a class="markdownIt-Anchor" href="#3-building-and-linking-static-and-shared-libraries"></a> 3. Building and linking static and shared libraries</h3>
<p>CmakeLists.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.5 FATAL_ERROR)</span><br><span class="line"></span><br><span class="line">project(recipe-03 LANGUAGES CXX)</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate a library from sources</span></span><br><span class="line">add_library(message</span><br><span class="line">  STATIC</span><br><span class="line">    Message.hpp</span><br><span class="line">    Message.cpp</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">add_executable(hello-world hello-world.cpp)</span><br><span class="line"></span><br><span class="line">target_link_libraries(hello-world message)</span><br></pre></td></tr></table></figure>
<ul>
<li><code>add_library(message STATIC Message.hpp Message.cpp)</code>: add_library’s first param is target name, available for entire CMakeLists.txt to be refered. Actually name will be prefixed with lib and suffixed withbash proper extension by cmake, determined by (STATIC or SHARED) and OS</li>
<li><code>target_link_libraries(hello-world message)</code>: link library to executable and make sure hello-world depends correctly on library. Must after <code>add_library</code>.</li>
</ul>
<p>After build, we get <code>libmessage.a</code> together with executable <code>hello-world</code>.</p>
<p>second parameter of <code>add_library</code>:</p>
<ul>
<li>STATIC：用于创建静态库，即编译文件的打包存档，以便在链接其他目标时使用，例如：可执行文件。</li>
<li>SHARED：用于创建动态库，即可以动态链接，并在运行时加载的库。可以在 CMakeLists.txt 中使用<code>add_library(message SHAREDbash Message.hpp Message.cpp)</code>从静态库切换到动态共享对象(DSO)。</li>
<li>OBJECT：可将给定 add_library 的列表中的源码编译到目标文件，不将它们归档到静态库中，也不能将它们链接到共享对象中。如果需要一次性创建静态库和动态库，那么使用对象库尤其有用。我们将在本示例中演示。</li>
<li>MODULE：又为 DSO 组。与 SHARED 库不同，它们不链接到项目中的任何目标，不过可以进行动态加载。该参数可以用于构建运行时插件。</li>
</ul>
<p>other special type of library:</p>
<ul>
<li>IMPORTED：此类库目标表示位于项目外部的库。此类库的主要用途是，对现有依赖项进行构建。因此，IMPORTED 库将被视为不可变的。我们将在本书的其他章节演示使用 IMPORTED 库的示例。参见: <a href="https://cmake.org/cmake/help/latest/manual/cmakebuildsystem.7.html#imported-targets">https://cmake.org/cmake/help/latest/manual/cmakebuildsystem.7.html#imported-targets</a></li>
<li>INTERFACE：与 IMPORTED 库类似。不过，该类型库可变，没有位置信息。它主要用于项目之外的目标构建使用。我们将在本章第 5 节中演示 INTERFACE 库的示例。参见: <a href="https://cmake.org/cmake/help/latest/manual/cmake-buildsystem.7.html#interface-libraries">https://cmake.org/cmake/help/latest/manual/cmake-buildsystem.7.html#interface-libraries</a></li>
<li>ALIAS：顾名思义，这种库为项目中已存在的库目标定义别名。不过，不能为 IMPORTED 库选择别名。参见: <a href="https://cmake.org/cmake/help/latest/manual/cmake-buildsystem.7.html#alias-libraries">https://cmake.org/cmake/help/latest/manual/cmake-buildsystem.7.html#alias-libraries</a></li>
</ul>
<p>Make dynamic linking, optional to set name to <code>message-shared</code> and use set_target_properties so <code>#include &quot;message.h&quot;</code> is available in source code:</p>
<p>CmakeLists.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.5 FATAL_ERROR)</span><br><span class="line"></span><br><span class="line">project(recipe-03 LANGUAGES CXX)</span><br><span class="line"></span><br><span class="line">add_library(message-shared</span><br><span class="line">  SHARED</span><br><span class="line">    Message.hpp</span><br><span class="line">    Message.cpp</span><br><span class="line">  )</span><br><span class="line">set_target_properties(message-shared</span><br><span class="line">  PROPERTIES</span><br><span class="line">    OUTPUT_NAME <span class="string">&quot;message&quot;</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">add_executable(hello-world hello-world.cpp)</span><br><span class="line"></span><br><span class="line">target_link_libraries(hello-world message-shared)</span><br></pre></td></tr></table></figure>
<h3 id="4-controlling-compilation-with-conditionals"><a class="markdownIt-Anchor" href="#4-controlling-compilation-with-conditionals"></a> 4. Controlling compilation with conditionals</h3>
<p>CmakeLists.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set minimum cmake version</span></span><br><span class="line">cmake_minimum_required(VERSION 3.5 FATAL_ERROR)</span><br><span class="line"></span><br><span class="line"><span class="comment"># project name and language</span></span><br><span class="line">project(recipe-04 LANGUAGES CXX)</span><br><span class="line"></span><br><span class="line"><span class="comment"># introduce a toggle for using a library</span></span><br><span class="line"><span class="built_in">set</span>(USE_LIBRARY OFF)</span><br><span class="line"></span><br><span class="line">message(STATUS <span class="string">&quot;Compile sources into a library? <span class="variable">$&#123;USE_LIBRARY&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># BUILD_SHARED_LIBS is a global flag offered by CMake</span></span><br><span class="line"><span class="comment"># to toggle the behavior of add_library</span></span><br><span class="line"><span class="built_in">set</span>(BUILD_SHARED_LIBS OFF)</span><br><span class="line"></span><br><span class="line"><span class="comment"># list sources</span></span><br><span class="line">list(APPEND _sources Message.hpp Message.cpp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(USE_LIBRARY)</span><br><span class="line">  <span class="comment"># add_library will create a static library</span></span><br><span class="line">  <span class="comment"># since BUILD_SHARED_LIBS is OFF</span></span><br><span class="line">  add_library(message <span class="variable">$&#123;_sources&#125;</span>)</span><br><span class="line"></span><br><span class="line">  add_executable(hello-world hello-world.cpp)</span><br><span class="line"></span><br><span class="line">  target_link_libraries(hello-world message)</span><br><span class="line"><span class="keyword">else</span>()</span><br><span class="line">  add_executable(hello-world hello-world.cpp <span class="variable">$&#123;_sources&#125;</span>)</span><br><span class="line">endif()</span><br></pre></td></tr></table></figure>
<h3 id="5-presenting-options-to-the-user"><a class="markdownIt-Anchor" href="#5-presenting-options-to-the-user"></a> 5. Presenting options to the user</h3>
<p>CmakeLists.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set minimum cmake version</span></span><br><span class="line">cmake_minimum_required(VERSION 3.5 FATAL_ERROR)</span><br><span class="line"></span><br><span class="line"><span class="comment"># project name and language</span></span><br><span class="line">project(recipe-05 LANGUAGES CXX)</span><br><span class="line"></span><br><span class="line"><span class="comment"># expose options to the user</span></span><br><span class="line">option(USE_LIBRARY <span class="string">&quot;Compile sources into a library&quot;</span> OFF)</span><br><span class="line"></span><br><span class="line">message(STATUS <span class="string">&quot;Compile sources into a library? <span class="variable">$&#123;USE_LIBRARY&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">include(CMakeDependentOption)</span><br><span class="line"></span><br><span class="line"><span class="comment"># second option depends on the value of the first</span></span><br><span class="line">cmake_dependent_option(</span><br><span class="line">  MAKE_STATIC_LIBRARY <span class="string">&quot;Compile sources into a static library&quot;</span> OFF</span><br><span class="line">  <span class="string">&quot;USE_LIBRARY&quot;</span> ON</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="comment"># third option depends on the value of the first</span></span><br><span class="line">cmake_dependent_option(</span><br><span class="line">  MAKE_SHARED_LIBRARY <span class="string">&quot;Compile sources into a shared library&quot;</span> ON</span><br><span class="line">  <span class="string">&quot;USE_LIBRARY&quot;</span> ON</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)</span><br><span class="line"></span><br><span class="line"><span class="comment"># list sources</span></span><br><span class="line">list(APPEND _sources Message.hpp Message.cpp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(USE_LIBRARY)</span><br><span class="line">  message(STATUS <span class="string">&quot;Compile sources into a STATIC library? <span class="variable">$&#123;MAKE_STATIC_LIBRARY&#125;</span>&quot;</span>)</span><br><span class="line">  message(STATUS <span class="string">&quot;Compile sources into a SHARED library? <span class="variable">$&#123;MAKE_SHARED_LIBRARY&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(MAKE_SHARED_LIBRARY)</span><br><span class="line">    add_library(message SHARED <span class="variable">$&#123;_sources&#125;</span>)</span><br><span class="line"></span><br><span class="line">    add_executable(hello-world hello-world.cpp)</span><br><span class="line"></span><br><span class="line">    target_link_libraries(hello-world message)</span><br><span class="line">  endif()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span>(MAKE_STATIC_LIBRARY)</span><br><span class="line">    add_library(message STATIC <span class="variable">$&#123;_sources&#125;</span>)</span><br><span class="line"></span><br><span class="line">    add_executable(hello-world hello-world.cpp)</span><br><span class="line"></span><br><span class="line">    target_link_libraries(hello-world message)</span><br><span class="line">  endif()</span><br><span class="line"><span class="keyword">else</span>()</span><br><span class="line">  add_executable(hello-world hello-world.cpp <span class="variable">$&#123;_sources&#125;</span>)</span><br><span class="line">endif()</span><br></pre></td></tr></table></figure>
<p>to toggle options:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cmake -D USE_LIBRARY=OFF -D MAKE_SHARED_LIBRARY=ON ..</span><br></pre></td></tr></table></figure>
<h3 id="6-specifying-the-compiler"><a class="markdownIt-Anchor" href="#6-specifying-the-compiler"></a> 6. Specifying the compiler</h3>
<p>prefered:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cmake -D CMAKE_CXX_COMPILER=clang++ ..</span><br></pre></td></tr></table></figure>
<p>not prefered:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">env</span> CXX=clang++ cmake ..</span><br></pre></td></tr></table></figure>
<p>CMakeLists.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set minimum cmake version</span></span><br><span class="line">cmake_minimum_required(VERSION 3.5 FATAL_ERROR)</span><br><span class="line"></span><br><span class="line"><span class="comment"># project name and language</span></span><br><span class="line">project(recipe-06 LANGUAGES C CXX)</span><br><span class="line"></span><br><span class="line">message(STATUS <span class="string">&quot;Is the C++ compiler loaded? <span class="variable">$&#123;CMAKE_CXX_COMPILER_LOADED&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">if</span>(CMAKE_CXX_COMPILER_LOADED)</span><br><span class="line">  message(STATUS <span class="string">&quot;The C++ compiler ID is: <span class="variable">$&#123;CMAKE_CXX_COMPILER_ID&#125;</span>&quot;</span>)</span><br><span class="line">  message(STATUS <span class="string">&quot;Is the C++ from GNU? <span class="variable">$&#123;CMAKE_COMPILER_IS_GNUCXX&#125;</span>&quot;</span>)</span><br><span class="line">  message(STATUS <span class="string">&quot;The C++ compiler version is: <span class="variable">$&#123;CMAKE_CXX_COMPILER_VERSION&#125;</span>&quot;</span>)</span><br><span class="line">endif()</span><br><span class="line"></span><br><span class="line">message(STATUS <span class="string">&quot;Is the C compiler loaded? <span class="variable">$&#123;CMAKE_C_COMPILER_LOADED&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">if</span>(CMAKE_C_COMPILER_LOADED)</span><br><span class="line">  message(STATUS <span class="string">&quot;The C compiler ID is: <span class="variable">$&#123;CMAKE_C_COMPILER_ID&#125;</span>&quot;</span>)</span><br><span class="line">  message(STATUS <span class="string">&quot;Is the C from GNU? <span class="variable">$&#123;CMAKE_COMPILER_IS_GNUCC&#125;</span>&quot;</span>)</span><br><span class="line">  message(STATUS <span class="string">&quot;The C compiler version is: <span class="variable">$&#123;CMAKE_C_COMPILER_VERSION&#125;</span>&quot;</span>)</span><br><span class="line">endif()</span><br></pre></td></tr></table></figure>
<h3 id="7-switching-the-build-type"><a class="markdownIt-Anchor" href="#7-switching-the-build-type"></a> 7. Switching the build type</h3>
<ul>
<li>Debug：用于在没有优化的情况下，使用带有调试符号构建库或可执行文件。</li>
<li>Release：用于构建的优化的库或可执行文件，不包含调试符号。</li>
<li>RelWithDebInfo：用于构建较少的优化库或可执行文件，包含调试符号。</li>
<li>MinSizeRel：用于不增加目标代码大小的优化方式，来构建库或可执行文件。</li>
</ul>
<p>CMakeLists.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set minimum cmake version</span></span><br><span class="line">cmake_minimum_required(VERSION 3.5 FATAL_ERROR)</span><br><span class="line"></span><br><span class="line"><span class="comment"># project name and language</span></span><br><span class="line">project(recipe-07 LANGUAGES C CXX)</span><br><span class="line"></span><br><span class="line"><span class="comment"># we default to Release build type</span></span><br><span class="line"><span class="keyword">if</span>(NOT CMAKE_BUILD_TYPE)</span><br><span class="line">  <span class="built_in">set</span>(CMAKE_BUILD_TYPE Release CACHE STRING <span class="string">&quot;Build type&quot;</span> FORCE)</span><br><span class="line">endif()</span><br><span class="line"></span><br><span class="line">message(STATUS <span class="string">&quot;Build type: <span class="variable">$&#123;CMAKE_BUILD_TYPE&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">message(STATUS <span class="string">&quot;C flags, Debug configuration: <span class="variable">$&#123;CMAKE_C_FLAGS_DEBUG&#125;</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;C flags, Release configuration: <span class="variable">$&#123;CMAKE_C_FLAGS_RELEASE&#125;</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;C flags, Release configuration with Debug info: <span class="variable">$&#123;CMAKE_C_FLAGS_RELWITHDEBINFO&#125;</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;C flags, minimal Release configuration: <span class="variable">$&#123;CMAKE_C_FLAGS_MINSIZEREL&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">message(STATUS <span class="string">&quot;C++ flags, Debug configuration: <span class="variable">$&#123;CMAKE_CXX_FLAGS_DEBUG&#125;</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;C++ flags, Release configuration: <span class="variable">$&#123;CMAKE_CXX_FLAGS_RELEASE&#125;</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;C++ flags, Release configuration with Debug info: <span class="variable">$&#123;CMAKE_CXX_FLAGS_RELWITHDEBINFO&#125;</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;C++ flags, minimal Release configuration: <span class="variable">$&#123;CMAKE_CXX_FLAGS_MINSIZEREL&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>to switch build type:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ cmake -D CMAKE_BUILD_TYPE=Debug ..</span><br></pre></td></tr></table></figure>
<h3 id="8-controlling-compiler-flags"><a class="markdownIt-Anchor" href="#8-controlling-compiler-flags"></a> 8. Controlling compiler flags</h3>
<p>CMakeLists.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set minimum cmake version</span></span><br><span class="line">cmake_minimum_required(VERSION 3.5 FATAL_ERROR)</span><br><span class="line"></span><br><span class="line"><span class="comment"># project name and language</span></span><br><span class="line">project(recipe-08 LANGUAGES CXX)</span><br><span class="line"></span><br><span class="line">message(<span class="string">&quot;C++ compiler flags: <span class="variable">$&#123;CMAKE_CXX_FLAGS&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">list(APPEND flags <span class="string">&quot;-fPIC&quot;</span> <span class="string">&quot;-Wall&quot;</span>)</span><br><span class="line"><span class="keyword">if</span>(NOT WIN32)</span><br><span class="line">  list(APPEND flags <span class="string">&quot;-Wextra&quot;</span> <span class="string">&quot;-Wpedantic&quot;</span>)</span><br><span class="line">endif()</span><br><span class="line"></span><br><span class="line">add_library(geometry</span><br><span class="line">  STATIC</span><br><span class="line">    geometry_circle.cpp</span><br><span class="line">    geometry_circle.hpp</span><br><span class="line">    geometry_polygon.cpp</span><br><span class="line">    geometry_polygon.hpp</span><br><span class="line">    geometry_rhombus.cpp</span><br><span class="line">    geometry_rhombus.hpp</span><br><span class="line">    geometry_square.cpp</span><br><span class="line">    geometry_square.hpp</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">target_compile_options(geometry</span><br><span class="line">  PRIVATE</span><br><span class="line">    <span class="variable">$&#123;flags&#125;</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">add_executable(compute-areas compute-areas.cpp)</span><br><span class="line"></span><br><span class="line">target_compile_options(compute-areas</span><br><span class="line">  PRIVATE</span><br><span class="line">    <span class="string">&quot;-fPIC&quot;</span></span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">target_link_libraries(compute-areas geometry)</span><br></pre></td></tr></table></figure>
<h3 id="9-setting-the-standard-for-the-language"><a class="markdownIt-Anchor" href="#9-setting-the-standard-for-the-language"></a> 9. Setting the standard for the language</h3>
<p>CMakeLists.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set minimum cmake version</span></span><br><span class="line">cmake_minimum_required(VERSION 3.5 FATAL_ERROR)</span><br><span class="line"></span><br><span class="line"><span class="comment"># project name and language</span></span><br><span class="line">project(recipe-09 LANGUAGES CXX)</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)</span><br><span class="line"></span><br><span class="line">add_library(animals</span><br><span class="line">  SHARED</span><br><span class="line">    Animal.cpp</span><br><span class="line">    Animal.hpp</span><br><span class="line">    Cat.cpp</span><br><span class="line">    Cat.hpp</span><br><span class="line">    Dog.cpp</span><br><span class="line">    Dog.hpp</span><br><span class="line">    Factory.hpp</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">set_target_properties(animals</span><br><span class="line">  PROPERTIES</span><br><span class="line">    CXX_STANDARD 14</span><br><span class="line">    CXX_EXTENSIONS OFF</span><br><span class="line">    CXX_STANDARD_REQUIRED ON</span><br><span class="line">    POSITION_INDEPENDENT_CODE 1</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">add_executable(animal-farm animal-farm.cpp)</span><br><span class="line"></span><br><span class="line">set_target_properties(animal-farm</span><br><span class="line">  PROPERTIES</span><br><span class="line">    CXX_STANDARD 14</span><br><span class="line">    CXX_EXTENSIONS OFF</span><br><span class="line">    CXX_STANDARD_REQUIRED ON</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">target_link_libraries(animal-farm animals)</span><br></pre></td></tr></table></figure>
<h3 id="10-using-control-flow-constructs"><a class="markdownIt-Anchor" href="#10-using-control-flow-constructs"></a> 10. Using control flow constructs</h3>
<p>CMakeLists.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set minimum cmake version</span></span><br><span class="line">cmake_minimum_required(VERSION 3.5 FATAL_ERROR)</span><br><span class="line"></span><br><span class="line"><span class="comment"># project name and language</span></span><br><span class="line">project(recipe-10 LANGUAGES CXX)</span><br><span class="line"></span><br><span class="line">add_library(geometry</span><br><span class="line">  STATIC</span><br><span class="line">    geometry_circle.cpp</span><br><span class="line">    geometry_circle.hpp</span><br><span class="line">    geometry_polygon.cpp</span><br><span class="line">    geometry_polygon.hpp</span><br><span class="line">    geometry_rhombus.cpp</span><br><span class="line">    geometry_rhombus.hpp</span><br><span class="line">    geometry_square.cpp</span><br><span class="line">    geometry_square.hpp</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="comment"># we wish to compile the library with the optimization flag: -O3</span></span><br><span class="line">target_compile_options(geometry</span><br><span class="line">  PRIVATE</span><br><span class="line">    -O3</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">list(</span><br><span class="line">  APPEND sources_with_lower_optimization</span><br><span class="line">    geometry_circle.cpp</span><br><span class="line">    geometry_rhombus.cpp</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"><span class="comment"># we use the IN LISTS foreach syntax to set source properties</span></span><br><span class="line">message(STATUS <span class="string">&quot;Setting source properties using IN LISTS syntax:&quot;</span>)</span><br><span class="line">foreach(_source IN LISTS sources_with_lower_optimization)</span><br><span class="line">  set_source_files_properties(<span class="variable">$&#123;_source&#125;</span> PROPERTIES COMPILE_FLAGS -O2)</span><br><span class="line">  message(STATUS <span class="string">&quot;Appending -O2 flag for <span class="variable">$&#123;_source&#125;</span>&quot;</span>)</span><br><span class="line">endforeach()</span><br><span class="line"></span><br><span class="line"><span class="comment"># we demonstrate the plain foreach syntax to query source properties</span></span><br><span class="line"><span class="comment"># which requires to expand the contents of the variable</span></span><br><span class="line">message(STATUS <span class="string">&quot;Querying sources properties using plain syntax:&quot;</span>)</span><br><span class="line">foreach(_source <span class="variable">$&#123;sources_with_lower_optimization&#125;</span>)</span><br><span class="line">  get_source_file_property(_flags <span class="variable">$&#123;_source&#125;</span> COMPILE_FLAGS)</span><br><span class="line">  message(STATUS <span class="string">&quot;Source <span class="variable">$&#123;_source&#125;</span> has the following extra COMPILE_FLAGS: <span class="variable">$&#123;_flags&#125;</span>&quot;</span>)</span><br><span class="line">endforeach()</span><br><span class="line"></span><br><span class="line">add_executable(compute-areas compute-areas.cpp)</span><br><span class="line"></span><br><span class="line">target_link_libraries(compute-areas geometry)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>cpp</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker Note</title>
    <url>/2020/06/08/docker-note/</url>
    <content><![CDATA[<h1 id="install-docker"><a class="markdownIt-Anchor" href="#install-docker"></a> Install Docker</h1>
<h2 id="on-debian"><a class="markdownIt-Anchor" href="#on-debian"></a> On Debian</h2>
<p>uninstall old versions:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt-get update</span><br><span class="line">$ <span class="built_in">sudo</span> apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg-agent \</span><br><span class="line">    software-properties-common</span><br><span class="line">$ curl -fsSL https://download.docker.com/linux/debian/gpg | <span class="built_in">sudo</span> apt-key add -</span><br></pre></td></tr></table></figure>
<p>Verfiy key with the fingerprint:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-key fingerprint 0EBFCD88</span><br></pre></td></tr></table></figure>
<p>For x86_64 / amd64 architecture:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> add-apt-repository \</span><br><span class="line">   <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/debian \</span></span><br><span class="line"><span class="string">   <span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">   stable&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> apt-get update</span><br><span class="line">$ <span class="built_in">sudo</span> apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>
<p>Run hello world demo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> docker run hello-world</span><br></pre></td></tr></table></figure>
<p>Avoid <code>sudo</code> when running docker:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> nano /etc/group</span><br></pre></td></tr></table></figure>
<p>add username to <code>docker:x:999:&lt;username&gt;</code>, e.x. <code>docker:x:999:admin</code></p>
<p>Or:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> usermod -a -G docker &lt;username&gt;</span><br></pre></td></tr></table></figure>
<h2 id="on-ubuntu-by-shell-script"><a class="markdownIt-Anchor" href="#on-ubuntu-by-shell-script"></a> On Ubuntu by Shell Script</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget -qO- https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure>
<p>add user accout to local unix docker group, to avoid <code>sudo</code>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> usermod -aG docker &lt;username&gt; <span class="comment"># e.x. admin</span></span><br></pre></td></tr></table></figure>
<h2 id="launching-a-docker-container"><a class="markdownIt-Anchor" href="#launching-a-docker-container"></a> Launching a Docker container</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano Dockerfile</span><br></pre></td></tr></table></figure>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment">##############################</span></span><br><span class="line"><span class="comment"># Dockerfile to create Ubuntu webserver</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">18.04</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get update</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apt-get install -y apache2</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> <span class="built_in">echo</span> <span class="string">&quot;Welcome to my web site&quot;</span> &gt; /var/www/html/index.html</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"><span class="comment">##############################</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -t <span class="string">&quot;webserver&quot;</span> .</span><br><span class="line">docker images</span><br><span class="line">docker run -d -p 80:80 webserver /usr/sbin/apache2ctl -D FOREGROUND</span><br><span class="line">docker ps</span><br><span class="line">curl localhost</span><br></pre></td></tr></table></figure>
<hr />
<h1 id="docker-engine-architecture"><a class="markdownIt-Anchor" href="#docker-engine-architecture"></a> Docker Engine Architecture</h1>
<h2 id="big-picture"><a class="markdownIt-Anchor" href="#big-picture"></a> Big Picture</h2>
<p><img src="/photos/docker-note/docker_engine.png" alt="docker_engine" /></p>
<h2 id="example-of-creating-a-container"><a class="markdownIt-Anchor" href="#example-of-creating-a-container"></a> Example of creating a container</h2>
<p><img src="/photos/docker-note/create_container.png" alt="create_container" /></p>
<p>“Daemon” can restart without affecting on containers, which means upgrading doesn’t kill containers, same for “containerd”. Can restart them, leaving all containers running, when come back, they re-discover running containers and reconnect to the shim.</p>
<h2 id="docker-on-windows-native-and-hyper-v"><a class="markdownIt-Anchor" href="#docker-on-windows-native-and-hyper-v"></a> Docker on Windows: Native and Hyper-V</h2>
<p><img src="/photos/docker-note/windows_container.png" alt="windows_container" /></p>
<p>only low level difference, APIs for users are the same.<br />
The idea is by VM isolation of Hyper-V(lightweight VM) might be better or more secure than Namespaces. Also, can run different OS in VM.</p>
<hr />
<h1 id="docker-images"><a class="markdownIt-Anchor" href="#docker-images"></a> Docker Images</h1>
<p><img src="/photos/docker-note/docker_image.png" alt="docker_image" /></p>
<p>Image is <strong>read-only</strong> template for creating application containers. <strong>Independent</strong> layer loosely connected by a manifest file(config file).</p>
<p><img src="/photos/docker-note/docker_image_container.png" alt="docker_image_container" /></p>
<p>Every container can also write by copying read-only layer(files in it) to its writable layer, and do changes there.</p>
<h2 id="pull-a-docker-image"><a class="markdownIt-Anchor" href="#pull-a-docker-image"></a> Pull a docker image</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker image pull redis</span><br></pre></td></tr></table></figure>
<p>In fact, we are pulling layers:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/redis</span><br><span class="line">afb6ec6fdc1c: Pull complete <span class="comment"># layer</span></span><br><span class="line">608641ee4c3f: Pull complete</span><br><span class="line">668ab9e1f4bc: Pull complete</span><br><span class="line">78a12698914e: Pull complete</span><br><span class="line">d056855f4300: Pull complete</span><br><span class="line">618fdf7d0dec: Pull complete</span><br><span class="line">Digest: sha256:ec277acf143340fa338f0b1a9b2f23632335d2096940d8e754474e21476eae32</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> redis:latest</span><br><span class="line">docker.io/library/redis:latest</span><br></pre></td></tr></table></figure>
<p>Fat manifest is specified by OS architecture, to get image manifest:</p>
<p><img src="/photos/docker-note/image_manifest.png" alt="image_manifest" /></p>
<p>Referencing by hash to avoid mismatch between the image asking for and the image got.</p>
<p>Using overlay2 as storage driver, those layers are stored at <code>/var/lib/docker/overlay2</code>. To see layers, run:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> <span class="built_in">ls</span> -l /var/lib/docker/overlay2</span><br></pre></td></tr></table></figure>
<p>to get content of layer, run:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> <span class="built_in">ls</span> -l /var/lib/docker/overlay2/&lt;sha256&gt;</span><br></pre></td></tr></table></figure>
<p>Layer structure, e.x.:</p>
<ol>
<li>Base layer (OS files and objects)</li>
<li>App codes</li>
<li>Updates …</li>
</ol>
<p>-&gt; a single unified file system.</p>
<h2 id="check-images"><a class="markdownIt-Anchor" href="#check-images"></a> Check images</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span>  / $ docker images</span><br><span class="line">$ docker image <span class="built_in">ls</span> --digests <span class="comment"># get sha256</span></span><br><span class="line">$ docker image <span class="built_in">ls</span> --filter dangling=<span class="literal">true</span> <span class="comment"># get &lt;none&gt;:&lt;none&gt;</span></span><br><span class="line">$ docker image <span class="built_in">ls</span> --filter=reference=<span class="string">&quot;*:latest&quot;</span></span><br><span class="line">$ docker image <span class="built_in">ls</span> --format <span class="string">&quot;&#123;&#123;.Size&#125;&#125;&quot;</span></span><br><span class="line">$ docker image <span class="built_in">ls</span> --format <span class="string">&quot;&#123;&#123;.Repository&#125;&#125;: &#123;&#123;.Tag&#125;&#125;: &#123;&#123;.Size&#125;&#125;&quot;</span></span><br><span class="line">$ docker image <span class="built_in">ls</span> --format <span class="string">&quot;&#123;&#123;json .&#125;&#125;&quot;</span> <span class="comment"># print in json format</span></span><br></pre></td></tr></table></figure>
<p>to see operation history of one image, run:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker <span class="built_in">history</span> redis</span><br></pre></td></tr></table></figure>
<p>every non-zero size creates a new layer, the rests add something to image’s json config file.</p>
<p>to get configs and layers of one image, run:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker image inspect redis</span><br></pre></td></tr></table></figure>
<h2 id="delete-images"><a class="markdownIt-Anchor" href="#delete-images"></a> Delete images</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker image <span class="built_in">rm</span> redis</span><br><span class="line">$ docker rmi alpine</span><br><span class="line">$ docker image prune <span class="comment"># delete all dangle images</span></span><br><span class="line">$ docker image prune -a <span class="comment"># delete all unused images, not used by any container</span></span><br></pre></td></tr></table></figure>
<h2 id="registries"><a class="markdownIt-Anchor" href="#registries"></a> Registries</h2>
<p>Images live in registries. When <code>docker image pull &lt;some-image&gt;</code>, defaultly pulling from Docker Hub.</p>
<p>Official images live in the top level of Docker Hub namespaces, e.x. <a href="http://docker.io/redis">docker.io/redis</a>, <a href="http://docker.io/nginx">docker.io/nginx</a>. Can ignore registry name “<a href="http://docker.io/">docker.io/</a>” by default, then do repo name “redis”, then do tag name “latest”, which is an image actually. So the full version is `docker image pull <a href="http://docker.io/redis:4.0.1">docker.io/redis:4.0.1</a></p>
<p>Unofficial ones, e.x. nigelpoulton/tu-demo</p>
<p>To pull all tags of images from repo, run</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker image pull &lt;some-image&gt; -a</span><br></pre></td></tr></table></figure>
<p>Content hashes for host, compressed hashes(distribution hashes) for wire, to verify. UIDs used for storing layers are random.</p>
<p>run sha256 on content of layer -&gt; layer’s hash as ID;<br />
run sha256 on image config file -&gt; image’s hash as ID.</p>
<hr />
<h1 id="containerizing"><a class="markdownIt-Anchor" href="#containerizing"></a> Containerizing</h1>
<h2 id="dockerfile"><a class="markdownIt-Anchor" href="#dockerfile"></a> Dockerfile</h2>
<p>Dockerfile is list of instructions for building images with an app inside(document the app).</p>
<p>Good practice: put Dockerfile in root folder of app.</p>
<p>Good practice: <code>LABEL maintainer=&quot;xxx@gmail.com&quot;</code></p>
<p>notes:</p>
<ul>
<li>CAPITALIZE instructions</li>
<li><code>&lt;INSTRUCTION&gt; &lt;value&gt;</code>, e.x. <code>FROM alpine</code></li>
<li><code>FROM</code> always first instruction, as base image</li>
<li><code>RUN</code> execute command and create layer</li>
<li><code>COPY</code> copy code into image as new layer</li>
<li>instructions like <code>WORKDIR</code> are adding metadata instead of layers</li>
<li><code>ENTRYPOINT</code> default app for image/container, metadata</li>
<li><code>CMD</code> run-time arguments override CMD instructions, append to <code>ENTRYPOINT</code></li>
</ul>
<p>e.x.:</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine</span><br><span class="line"></span><br><span class="line"><span class="keyword">LABEL</span><span class="language-bash"> maintainer=<span class="string">&quot;xyshell@bu.edu&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk add --update nodejs nodejs-npm</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . /src</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /src</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm install</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;node&quot;</span>, <span class="string">&quot;./app.js&quot;</span>] <span class="comment"># relative to WORKDIR</span></span></span><br></pre></td></tr></table></figure>
<p>code: <a href="https://github.com/nigelpoulton/psweb">https://github.com/nigelpoulton/psweb</a></p>
<h2 id="build-image"><a class="markdownIt-Anchor" href="#build-image"></a> Build image</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker image build -t &lt;image-name&gt; . <span class="comment"># current folder</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker image build -t psweb https://github.com/nigelpoulton/psweb.git <span class="comment"># git repo</span></span><br></pre></td></tr></table></figure>
<p><code>docker image ls</code> to check it exists.</p>
<p>During each step, docker spins up temporary containers, once the following layer is built, the container is removed.</p>
<h2 id="run-container"><a class="markdownIt-Anchor" href="#run-container"></a> Run container</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container run -d --name &lt;app-name&gt; -p 8080:8080 &lt;image&gt; <span class="comment"># detach mode</span></span><br><span class="line">$ docker run -dit --name alpine1 alpine ash <span class="comment"># iterative and detach, can docker attach alpine1 later</span></span><br></pre></td></tr></table></figure>
<h2 id="multi-stage-builds"><a class="markdownIt-Anchor" href="#multi-stage-builds"></a> Multi-stage Builds</h2>
<p>use multiple FROM statements in Dockerfile.</p>
<p>Each FROM instruction can use a different base, and each of them begins a new stage of the build.</p>
<p>can selectively copy artifacts from one stage to another, leaving behind everything you don’t want in the final image.</p>
<ul>
<li><code>FROM ... AS ...</code></li>
<li><code>COPY --from==...</code></li>
</ul>
<p>example 1:</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:latest AS storefront</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /usr/src/atsea/app/react-app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> react-app .</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm install</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> npm run build</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> maven:latest AS appserver</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /usr/src/atsea</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> pom.xml .</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> mvn -B -f pom.xml -s /usr/share/maven/ref/settings-docker.xml dependency:resolve</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . .</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> mvn -B -s /usr/share/maven/ref/settings-docker.xml package -DskipTests</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> java:<span class="number">8</span>-jdk-alpine</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> adduser -Dh /home/gordon gordon</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /static</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=storefront /usr/src/atsea/app/react-app/build/ .</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=appserver /usr/src/atsea/target/AtSea-0.0.1-SNAPSHOT.jar .</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="language-bash"> [<span class="string">&quot;java&quot;</span>, <span class="string">&quot;-jar&quot;</span>, <span class="string">&quot;/app/AtSea-0.0.1-SNAPSHOT.jar&quot;</span>]</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;--spring.profiles.active=postgres&quot;</span>]</span></span><br></pre></td></tr></table></figure>
<p>source: <a href="https://github.com/dockersamples/atsea-sample-shop-app/blob/master/app/Dockerfile">https://github.com/dockersamples/atsea-sample-shop-app/blob/master/app/Dockerfile</a></p>
<p>example 2:</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> golang:<span class="number">1.7</span>.<span class="number">3</span> AS builder</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /go/src/github.com/alexellis/href-counter/</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> go get -d -v golang.org/x/net/html</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> app.go    .</span></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> alpine:latest</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> apk --no-cache add ca-certificates</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /root/</span></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=builder /go/src/github.com/alexellis/href-counter/app .</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;./app&quot;</span>]</span></span><br></pre></td></tr></table></figure>
<p>source: <a href="https://docs.docker.com/develop/develop-images/multistage-build/#name-your-build-stages">https://docs.docker.com/develop/develop-images/multistage-build/#name-your-build-stages</a></p>
<p>When building image, don’t have to build the entire Dockerfile including every stage. Can specify a target build stage, and stop at that stage.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker build --target builder -t alexellis2/href-counter:latest .</span><br></pre></td></tr></table></figure>
<hr />
<h1 id="docker-containers"><a class="markdownIt-Anchor" href="#docker-containers"></a> Docker containers</h1>
<p>Most atomic unit in docker is container.</p>
<p>microservices instead of monolith, glue by APIs. Containers should be as small and simple as possible. Single process per container.</p>
<p>modernize traditional apps:</p>
<p><img src="/photos/docker-note/modernize_traditional_apps.png" alt="modernize_traditional_apps" /></p>
<p>container should be ephemeral and immutable.</p>
<h2 id="check-status"><a class="markdownIt-Anchor" href="#check-status"></a> Check status</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker ps / $ docker container <span class="built_in">ls</span> <span class="comment"># running containers</span></span><br><span class="line">$ docker ps -a <span class="comment"># all containers</span></span><br><span class="line">$ docker port &lt;container&gt; <span class="comment"># Port mapping e.x. 80/tcp -&gt; 0.0.0.0:80</span></span><br></pre></td></tr></table></figure>
<h2 id="run-containers"><a class="markdownIt-Anchor" href="#run-containers"></a> Run containers</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container run ... / docker run ...</span><br><span class="line">$ docker container run -it alpine sh <span class="comment"># iterative terminal</span></span><br><span class="line">$ docker container run -d alpine <span class="built_in">sleep</span> 1d <span class="comment"># detached mode, command</span></span><br></pre></td></tr></table></figure>
<h2 id="stop-containers"><a class="markdownIt-Anchor" href="#stop-containers"></a> Stop containers</h2>
<p>Stopping a container sends signal to main process in the container (PID1), gives 10s before force stop.</p>
<p>Stopping and restarting a container doesn’t destory data.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container stop &lt;container&gt;</span><br></pre></td></tr></table></figure>
<h2 id="start-containers"><a class="markdownIt-Anchor" href="#start-containers"></a> Start containers</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container start &lt;container&gt;</span><br></pre></td></tr></table></figure>
<h2 id="enter-containers"><a class="markdownIt-Anchor" href="#enter-containers"></a> Enter containers</h2>
<p>execing into a container starts a new process</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container <span class="built_in">exec</span> -it &lt;container&gt; sh</span><br><span class="line">$ docker container <span class="built_in">exec</span> &lt;container&gt; <span class="built_in">ls</span> -l</span><br><span class="line">$ docker container <span class="built_in">exec</span> &lt;container&gt; <span class="built_in">cat</span> &lt;file-name&gt;</span><br></pre></td></tr></table></figure>
<p>exiting by <code>exit</code> kills the process, if it’s the only one, container exits. However, ctrl+P+Q gets out of container without terminating its main process (can <code>docker attach</code> to it).</p>
<h2 id="remove-containers"><a class="markdownIt-Anchor" href="#remove-containers"></a> Remove containers</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container <span class="built_in">rm</span> &lt;container&gt;</span><br><span class="line">$ docker container <span class="built_in">rm</span> $(docker container <span class="built_in">ls</span> -aq) -f <span class="comment"># remove all containers, force</span></span><br></pre></td></tr></table></figure>
<h2 id="log"><a class="markdownIt-Anchor" href="#log"></a> Log</h2>
<p>Engine/daemon logs and Container/App logs</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker logs &lt;container&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/photos/docker-note/logging.png" alt="logging" /></p>
<h1 id="swarm-and-services"><a class="markdownIt-Anchor" href="#swarm-and-services"></a> Swarm and Services</h1>
<h2 id="swarm"><a class="markdownIt-Anchor" href="#swarm"></a> Swarm</h2>
<p>swarm is a secure cluster of docker nodes, including “secure cluster” and “orchestrator”</p>
<p>can do native swarm work and kubernetes on swarm cluster</p>
<p>single-engine mode: install individual docker instances VS swarm mode: working on a cluster of docker instances.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker system info <span class="comment">#  Swarm: inactive/active</span></span><br></pre></td></tr></table></figure>
<h3 id="single-docker-node-to-swarm-mode"><a class="markdownIt-Anchor" href="#single-docker-node-to-swarm-mode"></a> Single docker node to swarm mode</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker swarm init</span><br><span class="line">$ docker swarm init --external-ca</span><br></pre></td></tr></table></figure>
<p>if it’s the first manager of swarm, it’s automatically elected as its leader(root CA).</p>
<ul>
<li>issue itself a client certificate.</li>
<li>Build a secure cluster store(ETD) and automatically distributed to every other manager in the swarm, encrypted.</li>
<li>default certificate rotation policy.</li>
<li>a set of cryptographic join tokens, one for joining new managers, another for joining new workers.</li>
</ul>
<p>on manager node, query cluster store to check all nodes:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker node <span class="built_in">ls</span> <span class="comment"># lists all nodes in the swarm</span></span><br><span class="line">$ docker node <span class="built_in">ls</span> --filter role=manager/worker</span><br></pre></td></tr></table></figure>
<h3 id="join-another-manager-and-workers"><a class="markdownIt-Anchor" href="#join-another-manager-and-workers"></a> Join another manager and workers</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker swarm <span class="built_in">join</span></span><br></pre></td></tr></table></figure>
<p><img src="/photos/docker-note/swarm.png" alt="swarm" /></p>
<p>Every swarm has a <strong>single leader manager</strong>, the rest are follower managers.</p>
<p>Commands could be issued to any manager, hitting a follower manager will proxy commands to the leader.</p>
<p>If the leader fails, another one gets selected as a new leader.</p>
<p>Best practice: ideal number of managers is 3, 5, 7. Make sure its odd number, to increase chance of achieving quorum.</p>
<p>Connect managers by fast and reliable network. e.x. in AWS, put in same region, could cross availability zones.</p>
<p>Workers doesn’t join cluster store, which is just for managers.</p>
<p>Workers have a full list of IPs for all managers. If one manager dies, workders talk to another.</p>
<p>get join token:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker swarm join-token manager</span><br><span class="line">SWMTKN-1-36xjjuzeryn11xc2xtrnjjxy288aef43o2r8o8grrpela5gsq4-2pvht1x50o3s8hm5rcur5cizo 192.168.0.31:2377</span><br><span class="line">$ docker swarm join-token worker</span><br><span class="line">SWMTKN-1-36xjjuzeryn11xc2xtrnjjxy288aef43o2r8o8grrpela5gsq4-5rzpk82wtde7durxwiu1mmh14 192.168.0.31:2377</span><br></pre></td></tr></table></figure>
<p>note:</p>
<ul>
<li>SWMTKN: identifier</li>
<li>36xjju: cluster identifier, hash of cluster certificate (same for same swarm cluster)</li>
<li>2pvht1 or 5rzpk8: determines worker or manager (could change by rotation)</li>
</ul>
<p>switch to another node:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker swarm <span class="built_in">join</span> --token ...</span><br></pre></td></tr></table></figure>
<p>to rotate token(change password):</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker swarm join-token --rotate worker</span><br><span class="line">$ docker swarm join-token --rotate manager</span><br></pre></td></tr></table></figure>
<p>The existing managers and workers stay unaffected.</p>
<p>to get client certificates:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> openssl x509 -<span class="keyword">in</span> /var/lib/docker/swarm/certificates/swarm-node.crt -text</span><br></pre></td></tr></table></figure>
<p>in Subject field:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Subject: O = pn6210vdux6ppj3uef0kqn8cv, OU = swarm-manager, CN = dkyneha22mdz384n3b3mdvjk7</span><br></pre></td></tr></table></figure>
<p>note:</p>
<ul>
<li>O: organization, swarm ID</li>
<li>OU: organizational unit, node’s role(swarm-manager/workder)</li>
<li>CN: canonical name, cryptographic node ID</li>
</ul>
<h3 id="remmove-swarm-node"><a class="markdownIt-Anchor" href="#remmove-swarm-node"></a> Remmove swarm node</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker node demote &lt;NODE&gt; <span class="comment"># To demote the node</span></span><br><span class="line">$ docker node <span class="built_in">rm</span> &lt;NODE&gt; <span class="comment"># To remove the node from the swarm</span></span><br><span class="line">$ docker swarm leave</span><br></pre></td></tr></table></figure>
<h3 id="autolock-swarm"><a class="markdownIt-Anchor" href="#autolock-swarm"></a> Autolock swarm</h3>
<ul>
<li>prevents restarted managers(not applied to workers) from automatically re-joining the swarm</li>
<li>pervents accidentally restoring old copies of the swarm</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker swarm init --autolock <span class="comment"># autolock new swarm</span></span><br><span class="line">$ docker swarm update --autolock=<span class="literal">true</span> <span class="comment"># autolock existing swarm</span></span><br><span class="line">SWMKEY-1-7e7w/gsGI2iGL9dqRtY/JqOOffnP5INPRw5uME2o+hM <span class="comment"># jot down unlock key</span></span><br></pre></td></tr></table></figure>
<p>Then if manager restarts by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> service docker restart</span><br></pre></td></tr></table></figure>
<p>Inspecting the cluster by <code>docker node ls</code> gives raft logs saying swarm is encrypted.</p>
<p>re-join the swarm by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker swarm unlock</span><br><span class="line">Please enter unlock key: SWMKEY-1-7e7w/gsGI2iGL9dqRtY/JqOOffnP5INPRw5uME2o+hM</span><br></pre></td></tr></table></figure>
<p>check again by <code>docker node ls</code> to confirm.</p>
<h3 id="update-certificate-expiry-time"><a class="markdownIt-Anchor" href="#update-certificate-expiry-time"></a> Update certificate expiry time</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker swarm update --cert-expiry 48h</span><br></pre></td></tr></table></figure>
<p>check by <code>docker system info</code>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CA Configuration:</span><br><span class="line">  Expiry Duration: 2 days</span><br></pre></td></tr></table></figure>
<h3 id="update-a-node"><a class="markdownIt-Anchor" href="#update-a-node"></a> Update a node</h3>
<p>Add label metadata to a node by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker node update --label-add foo worker1</span><br><span class="line">$ docker node update --label-add foo --label-add bar worker1</span><br></pre></td></tr></table></figure>
<p>then node labels used a placement constraint when creating service.</p>
<h3 id="orchestration-intro"><a class="markdownIt-Anchor" href="#orchestration-intro"></a> Orchestration intro</h3>
<p><img src="/photos/docker-note/orchestration_intro.png" alt="orchestration_intro" /></p>
<hr />
<h2 id="services"><a class="markdownIt-Anchor" href="#services"></a> Services</h2>
<p>There are two types of service deployments, replicated and global:</p>
<ul>
<li>For a replicated service, you specify the number of identical tasks you want to run. For example, you decide to deploy an HTTP service with three replicas, each serving the same content.</li>
<li>A global service is a service that runs one task on every node. There is no pre-specified number of tasks. Each time you add a node to the swarm, the orchestrator creates a task and the scheduler assigns the task to the new node. Good candidates for global services are monitoring agents, an anti-virus scanners or other types of containers that you want to run on every node in the swarm.</li>
</ul>
<h3 id="create-service"><a class="markdownIt-Anchor" href="#create-service"></a> Create service</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service create --replicas 5 &lt;service&gt; <span class="comment"># default replicated mode</span></span><br><span class="line">$ docker service create --mode global &lt;service&gt; <span class="comment"># global mode</span></span><br></pre></td></tr></table></figure>
<h3 id="check-status-2"><a class="markdownIt-Anchor" href="#check-status-2"></a> Check status</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service <span class="built_in">ls</span> <span class="comment"># list all services</span></span><br><span class="line">$ docker service ps &lt;service&gt; <span class="comment"># list all tasks</span></span><br><span class="line">$ docker service inspect &lt;service&gt; --pretty <span class="comment"># details</span></span><br><span class="line">$ docker service inspect &lt;service&gt; | jq -r <span class="string">&#x27;.[].CreatedAt&#x27;</span> </span><br><span class="line">$ docker service ps &lt;service&gt; --format <span class="string">&quot;&#123;&#123;json .&#125;&#125;&quot;</span> --filter <span class="string">&quot;desired-state=running&quot;</span> | jq -r .ID</span><br><span class="line">$ docker inspect &lt;task&gt; | jq -r <span class="string">&#x27;.[].Status.ContainerStatus.ContainerID&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="remove-services"><a class="markdownIt-Anchor" href="#remove-services"></a> Remove services</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service <span class="built_in">rm</span> $(docker service <span class="built_in">ls</span> -q) <span class="comment"># remove all services</span></span><br></pre></td></tr></table></figure>
<h3 id="update-services"><a class="markdownIt-Anchor" href="#update-services"></a> Update services</h3>
<p>rescale services by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service scale &lt;service&gt;=20</span><br></pre></td></tr></table></figure>
<p>update service’s image by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service update \</span><br><span class="line">  --image nigelpoulton/tu-demo:v2 \</span><br><span class="line">  --update-parallelism 2 \</span><br><span class="line">  --update-delay 20s &lt;service&gt;</span><br></pre></td></tr></table></figure>
<p>then update parallelism and update delay settings are now part of the service definition.</p>
<p>update service’s network by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service update \</span><br><span class="line">  --network-add &lt;new-network&gt; \</span><br><span class="line">  --network-rm &lt;old-network \</span><br><span class="line">  &lt;service&gt;</span><br></pre></td></tr></table></figure>
<h3 id="logs"><a class="markdownIt-Anchor" href="#logs"></a> Logs</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service logs &lt;service&gt;</span><br><span class="line">  --follow</span><br><span class="line">  --<span class="built_in">tail</span> 1000</span><br><span class="line">  --details</span><br></pre></td></tr></table></figure>
<h1 id="container-networking"><a class="markdownIt-Anchor" href="#container-networking"></a> Container Networking</h1>
<p>See the current network:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker network <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>
<p>Every container goes onto bridge (nat on Windows) network by default.</p>
<p><img src="/photos/docker-note/container_network.png" alt="container_network" /></p>
<h2 id="network-types"><a class="markdownIt-Anchor" href="#network-types"></a> Network types</h2>
<p>containers talk to each other, VMs, physicals and internet. Vice versa.</p>
<h3 id="bridge-networking"><a class="markdownIt-Anchor" href="#bridge-networking"></a> Bridge Networking</h3>
<p>a.k.a single-host networking, docker0.</p>
<p>can only connect containers on the same host. Isolated layer-two network, even on the same host. Get in/out traffic by mapping port to the host.</p>
<p><img src="/photos/docker-note/bridge_network.png" alt="bridge_network" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker network inspect bridge <span class="comment"># default bridge network</span></span><br></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bridge&quot;</span><span class="punctuation">,</span> <span class="comment">//</span></span><br><span class="line">  <span class="attr">&quot;Id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;f904473bbf1f625413c0cd2e1b7c0271253056709731cab4271ee95906ef270c&quot;</span><span class="punctuation">,</span> <span class="comment">//</span></span><br><span class="line">  <span class="attr">&quot;Created&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2020-06-09T21:03:39.158623688Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;local&quot;</span><span class="punctuation">,</span> <span class="comment">//</span></span><br><span class="line">  <span class="attr">&quot;Driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bridge&quot;</span><span class="punctuation">,</span> <span class="comment">//</span></span><br><span class="line">  <span class="attr">&quot;EnableIPv6&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;IPAM&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;default&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Options&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Config&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;Subnet&quot;</span><span class="punctuation">:</span> <span class="string">&quot;172.17.0.0/16&quot;</span> <span class="comment">// ip range</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Internal&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Attachable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Ingress&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ConfigFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ConfigOnly&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Containers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="comment">// currently no containers</span></span><br><span class="line">  <span class="attr">&quot;Options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;com.docker.network.bridge.default_bridge&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;com.docker.network.bridge.enable_icc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;com.docker.network.bridge.enable_ip_masquerade&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;com.docker.network.bridge.host_binding_ipv4&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;com.docker.network.bridge.name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;docker0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;com.docker.network.driver.mtu&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1500&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Labels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>create a container without specifying network by <code>$ docker container run --rm -d alpine sleep 1d</code>, then inspect again:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Containers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;4ea75ff740542150570357239d2f61f236f18d3840cffb3bdeae1df2745a9c2e&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cool_haibt&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;EndpointID&quot;</span><span class="punctuation">:</span> <span class="string">&quot;f0dc9a4302cd78d262a1ec562fae8ae635d2cebb2733c60cfa40d5eb00d04564&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;MacAddress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;02:42:ac:11:00:02&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;IPv4Address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;172.17.0.2/16&quot;</span><span class="punctuation">,</span> <span class="comment">//ip address</span></span><br><span class="line">      <span class="attr">&quot;IPv6Address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>to talk to outside, need port mapping:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container run --<span class="built_in">rm</span> -d --name web -p 8080:80 nginx <span class="comment"># host port 8080 to container port 80</span></span><br><span class="line"><span class="comment"># --rm: remove the container once it exits/stops</span></span><br></pre></td></tr></table></figure>
<p>show port mapping by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker port &lt;container&gt;</span><br><span class="line">80/tcp -&gt; 0.0.0.0:8080 <span class="comment"># container port -&gt; host port</span></span><br></pre></td></tr></table></figure>
<p>then can visit the web by <code>localhost:8080</code></p>
<p>create a bridge network:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker network create -d bridge &lt;network-name&gt;</span><br></pre></td></tr></table></figure>
<p>check by <code>docker network ls</code>. To run containers in it:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container run --<span class="built_in">rm</span> -d --network &lt;network-name&gt; alpine <span class="built_in">sleep</span> 1d</span><br></pre></td></tr></table></figure>
<p>to switch container between networks:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker network disconnect &lt;network1&gt; web <span class="comment"># even when container is running</span></span><br><span class="line">$ docker network connect &lt;network2&gt; web</span><br></pre></td></tr></table></figure>
<h3 id="overlay-networking"><a class="markdownIt-Anchor" href="#overlay-networking"></a> Overlay Networking</h3>
<p>a.k.a multi-host networking.</p>
<p>Single layer-two network spanning multiple hosts</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker network create</span><br><span class="line">$ docker network create -o encrypted <span class="comment"># encrypt data plane</span></span><br></pre></td></tr></table></figure>
<p>built-in overlay is container to container only (not applied to VM, physicals)</p>
<p><img src="/photos/docker-note/overlay_network.png" alt="overlay_network" /></p>
<p>To create a overlay network:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker network create -d overlay &lt;network-name&gt;</span><br></pre></td></tr></table></figure>
<p>check by <code>docker network ls</code>, note its scope is “swarm”, which means availabel on every node in the swarm.</p>
<p>create a service to use this overlay network:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service create -d --name &lt;service&gt; --replicas 2 --network overnet alpine <span class="built_in">sleep</span> 1d <span class="comment"># default replicated mode</span></span><br></pre></td></tr></table></figure>
<p>check by <code>docker service ls</code>, check which nodes are running the service by <code>docker service ps &lt;service&gt;</code>, more details run <code>docker service inspect &lt;service&gt;</code></p>
<p>switch to one node which runs this service and run <code>docker network inspect &lt;network-name&gt;</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Containers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;7df4738446ac44a577d026a11ad73401c6cbdaaafcddbe75028954e7191fe1a1&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pinger.1.neku7xixs6g8oe2r8otlnqnep&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;EndpointID&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9a2dbdda2c15b991eeba7c1ab6fabd93e42b5ed4495b2f47d038dc871143a409&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;MacAddress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;02:42:0a:00:01:04&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;IPv4Address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.0.1.4/24&quot;</span><span class="punctuation">,</span> <span class="comment">// jot down ip address</span></span><br><span class="line">      <span class="attr">&quot;IPv6Address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lb-overnet&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;overnet-endpoint&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;EndpointID&quot;</span><span class="punctuation">:</span> <span class="string">&quot;45c5d95a4d21eadcd2f99d0ff982ec4bc6d0c6a7f136136a93aeeb8c7d959898&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;MacAddress&quot;</span><span class="punctuation">:</span> <span class="string">&quot;02:42:0a:00:01:06&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;IPv4Address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;10.0.1.6/24&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;IPv6Address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>switch to the other node, exec into the container by <code>docker container exec -it &lt;container&gt; sh</code>, <code>ping 10.0.1.4</code>, check success.</p>
<h3 id="macvlan"><a class="markdownIt-Anchor" href="#macvlan"></a> MACVLAN</h3>
<p>Containers also need to talk to VMs or physicals on existing VLANs.</p>
<p>Gives every container its own IP address and MAC address on the existing network (directly on the wire, no bridges, no port mapping)</p>
<p>requires promiscuous mode on the host. (cloud providers generally don’t allow. look for IPVLAN instead, which doesn’t require promiscuous mode)</p>
<h2 id="network-services"><a class="markdownIt-Anchor" href="#network-services"></a> Network services</h2>
<ul>
<li>
<p>Service discovery: locate services in a swarm</p>
</li>
<li>
<p>Load Balancing: access a service from any node in swarm (even nodes not hosting the service)</p>
</li>
</ul>
<h3 id="service-discovery"><a class="markdownIt-Anchor" href="#service-discovery"></a> Service discovery</h3>
<p>Every service gets a name, registered with swarm DNS, uses swarm DNS</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service create -d --name ping --network &lt;overlay&gt; --replicas 3 alpine <span class="built_in">sleep</span> 1d</span><br><span class="line">$ docker service create -d --name pong --network &lt;overlay&gt; --replicas 3 alpine <span class="built_in">sleep</span> 1d</span><br></pre></td></tr></table></figure>
<p>check <code>docker service ls</code> to confirm (also check <code>docker container ls</code>), can locate other service in same overlay network by name, e.x.:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker container <span class="built_in">exec</span> -it &lt;container&gt; sh</span><br><span class="line">$ ping pong <span class="comment"># sucesss</span></span><br><span class="line">$ ping -c 2 pong <span class="comment"># -c 2: only two ping attempts.</span></span><br></pre></td></tr></table></figure>
<h3 id="load-balancing"><a class="markdownIt-Anchor" href="#load-balancing"></a> Load Balancing</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service create -d --name web --network overnet --replicas 1 -p 8080:80 nginx</span><br><span class="line">$ docker service inspect web --pretty</span><br><span class="line">Ports:</span><br><span class="line"> PublishedPort = 8080 <span class="comment">#</span></span><br><span class="line">  Protocol = tcp</span><br><span class="line">  TargetPort = 80 <span class="comment">#</span></span><br><span class="line">  PublishMode = ingress <span class="comment"># default mode</span></span><br></pre></td></tr></table></figure>
<p>ingress mode: publish a port on every node in the swarm — even nodes not running service replicas. then can access by any node in the network by port 8080.</p>
<p>The alternative mode is host mode which only publishes the service on swarm nodes running replicas. by adding mode=host to the --publish output, using --mode global instead of --replicas=5, since only one service task can bind a given port on a given node.</p>
<h1 id="volumes"><a class="markdownIt-Anchor" href="#volumes"></a> Volumes</h1>
<p>running a new container automatically gets its own non-persistent, ephemeral graph driver storage (copy-on-write union mount, /var/lib/docker). However, volume is to store persistent data, entirely decoupled from containers, seamlessly plugs into containers.</p>
<p>a directory on the docker(also remote hosts or cloud providers by volume drivers), mounted into container at a specific mount point.</p>
<p>can exist not only on local storage of docker host, but also on high-end external systems like SAN and NAS. Pluggable by docker store drive.</p>
<h2 id="create-volumes"><a class="markdownIt-Anchor" href="#create-volumes"></a> Create Volumes</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker volume create &lt;volume&gt;</span><br></pre></td></tr></table></figure>
<h2 id="check-status-3"><a class="markdownIt-Anchor" href="#check-status-3"></a> Check status</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker volume <span class="built_in">ls</span></span><br><span class="line">$ docker volume inspect &lt;volume&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;CreatedAt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2020-06-10T16:29:30Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;local&quot;</span><span class="punctuation">,</span> <span class="comment">// default</span></span><br><span class="line">    <span class="attr">&quot;Labels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Mountpoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/var/lib/docker/volumes/myvol/_data&quot;</span><span class="punctuation">,</span> <span class="comment">// inspect by ls -l /var/lib/docker/volumes/</span></span><br><span class="line">    <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;myvol&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;local&quot;</span> <span class="comment">//</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>
<h2 id="delete-volume"><a class="markdownIt-Anchor" href="#delete-volume"></a> Delete volume</h2>
<p>to delete a specific volume:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker volume <span class="built_in">rm</span> &lt;volume&gt;</span><br></pre></td></tr></table></figure>
<p>rm an in-use volume causes error message.</p>
<p>to delete all unused volumes:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker volume prune <span class="comment"># delete unused volume</span></span><br></pre></td></tr></table></figure>
<h2 id="attach-volume"><a class="markdownIt-Anchor" href="#attach-volume"></a> Attach volume</h2>
<p>to attach volume to a container, either by --mount or -v:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker run -d --name &lt;container&gt; --mount <span class="built_in">source</span>=&lt;volume&gt;,target=/vol &lt;image&gt;</span><br><span class="line">$ docker run -d --name &lt;container&gt; -v &lt;volume&gt;:/vol &lt;image&gt;</span><br></pre></td></tr></table></figure>
<p>note:</p>
<ul>
<li><code>source=&lt;volume&gt;</code>: if volume doesn’t exist for now, will be created.</li>
<li><code>target=/vol</code>: where in the container to mount it, check by exec into container and <code>ls -l /vol/</code></li>
<li>if the container has files or directories in the directory to be mounted, the directory’s contents are copied into the volume.</li>
</ul>
<p>check by <code>docker inspect &lt;container&gt;</code>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;Mounts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;volume&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;myvol&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/var/lib/docker/volumes/myvol/_data&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Destination&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/vol&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;local&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;RW&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Propagation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>
<p>Then, container can write data to <code>/vol</code> (e.x. <code>echo &quot;some data&quot; &gt; /vol/newfile</code>), accessible in <code>/var/lib/docker/volumes/</code> as well, even if the container is removed.</p>
<p>–mount works with service as well.</p>
<p>Also useful in Dockerfile’s volume instruction.</p>
<h2 id="volume-for-service"><a class="markdownIt-Anchor" href="#volume-for-service"></a> Volume for service</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service create -d \</span><br><span class="line">  --replicas=4 \</span><br><span class="line">  --name &lt;service&gt; \</span><br><span class="line">  --mount <span class="built_in">source</span>=myvol,target=/app \</span><br><span class="line">  &lt;image&gt;</span><br></pre></td></tr></table></figure>
<p>note:</p>
<ul>
<li>docker service create command does not support the -v or --volume</li>
</ul>
<h2 id="read-only-volume"><a class="markdownIt-Anchor" href="#read-only-volume"></a> Read only volume</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker run -d \</span><br><span class="line">  --name=nginxtest \</span><br><span class="line">  --mount <span class="built_in">source</span>=nginx-vol,destination=/usr/share/nginx/html,<span class="built_in">readonly</span> \</span><br><span class="line">  nginx:latest</span><br></pre></td></tr></table></figure>
<p>verfify by <code>docker inspect nginxtest</code>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;Mounts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;volume&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;nginx-vol&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Source&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/var/lib/docker/volumes/nginx-vol/_data&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Destination&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/share/nginx/html&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Driver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;local&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;RW&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span> <span class="comment">//</span></span><br><span class="line">    <span class="attr">&quot;Propagation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>
<h1 id="secrets"><a class="markdownIt-Anchor" href="#secrets"></a> Secrets</h1>
<p>string &lt;= 500k, swarm mode for services only(not containers)</p>
<p><img src="/photos/docker-note/secret.png" alt="secret" /></p>
<p>note:<br />
/run/secrets/: stay in memory</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker secret create &lt;secret&gt; &lt;file&gt;</span><br></pre></td></tr></table></figure>
<p>check by <code>docker secret ls</code>. inspect by <code>docker secret inspect &lt;secret&gt;</code></p>
<p>create a service, using secret:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker service create -d --name &lt;service&gt; --secret &lt;secret&gt; --replicas 2 ...</span><br></pre></td></tr></table></figure>
<p>inpect by <code>docker service inspect &lt;service&gt;</code> and look at secrets section. exec into containers by <code>docker container exec -it &lt;container&gt; sh</code>, find secret by <code>ls -l /run/secrets</code>, accessible</p>
<p>can’t delete an in-use secret by <code>docker secret rm &lt;secret&gt;</code>, need to delete service first.</p>
<h1 id="docker-compose-and-stack"><a class="markdownIt-Anchor" href="#docker-compose-and-stack"></a> Docker Compose and Stack</h1>
<h2 id="docker-compose"><a class="markdownIt-Anchor" href="#docker-compose"></a> Docker compose</h2>
<h3 id="install-on-linux"><a class="markdownIt-Anchor" href="#install-on-linux"></a> Install on linux</h3>
<ol>
<li>Download the current stable release of Docker Compose:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/1.26.0/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>Make it executable:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>
<h3 id="compose-files"><a class="markdownIt-Anchor" href="#compose-files"></a> Compose files</h3>
<p>Compose uses YAML files to define multi-service applications.</p>
<p>The default name for the Compose YAML file is docker-compose.yml</p>
<p>Flask app example:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3.5&quot;</span> <span class="comment"># mandatory</span></span><br><span class="line"><span class="attr">services:</span> <span class="comment"># application services</span></span><br><span class="line">  <span class="attr">web-fe:</span> <span class="comment"># create a web front-end container called web-fe</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span> <span class="comment"># build a new image by Dockerfile in &#x27;.&#x27; to create container for web-fe</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">python</span> <span class="string">app.py</span> <span class="comment"># Override CMD in Dockerfile, which has Python and app.py</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">target:</span> <span class="number">5000</span> <span class="comment"># container port</span></span><br><span class="line">        <span class="attr">published:</span> <span class="number">5000</span> <span class="comment"># host port</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">counter-net</span> <span class="comment"># already exist or to be defined</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">type:</span> <span class="string">volume</span></span><br><span class="line">      <span class="attr">source:</span> <span class="string">counter-vol</span> <span class="comment"># already exist or to be defined</span></span><br><span class="line">      <span class="attr">target:</span> <span class="string">/code</span> <span class="comment"># mount to container</span></span><br><span class="line">  <span class="attr">redis:</span> <span class="comment"># create an in-memory database container called redis</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&quot;redis:alpine&quot;</span> <span class="comment"># pulled from Docker Hub.</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">counter-net:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">networks:</span> <span class="comment"># create new networks, bridge by default</span></span><br><span class="line">    <span class="attr">counter-net:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">volumes:</span> <span class="comment"># create new volumes</span></span><br><span class="line">    <span class="attr">counter-vol:</span></span><br></pre></td></tr></table></figure>
<p>note:</p>
<ul>
<li>4 top-level keys: version, services, networks, volumes, (secrets, configs…)</li>
<li>use the driver property to specify different network types:</li>
</ul>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">over-net:</span></span><br><span class="line">  <span class="attr">driver:</span> <span class="string">overlay</span></span><br><span class="line">  <span class="attr">attachable:</span> <span class="literal">true</span> <span class="comment"># for standalone containers(instead of Docker Services)</span></span><br></pre></td></tr></table></figure>
<p>source: <a href="https://github.com/nigelpoulton/counter-app">https://github.com/nigelpoulton/counter-app</a></p>
<h3 id="run-compose-app"><a class="markdownIt-Anchor" href="#run-compose-app"></a> Run compose app</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker-compose up <span class="comment"># docker-compose.yml in current folder</span></span><br><span class="line">$ docker-compose up &amp; <span class="comment"># ctrl+c doesn&#x27;t kill container</span></span><br><span class="line">$ docker-compose up -d <span class="comment"># run in daemon</span></span><br><span class="line">$ docker-compose -f prod-equus-bass.yml up <span class="comment"># -f flag</span></span><br></pre></td></tr></table></figure>
<p>check the current state of the app by <code>docker-compose ps</code>.</p>
<p>list the processes running inside of each<br />
service (container) by <code>docker-compose top</code>.</p>
<h3 id="stop-restart-and-delete-app"><a class="markdownIt-Anchor" href="#stop-restart-and-delete-app"></a> Stop, Restart and Delete App</h3>
<p>stop without deleting:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker-compose stop</span><br></pre></td></tr></table></figure>
<p>could restart by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker-compose restart</span><br></pre></td></tr></table></figure>
<p>If changed app after stopping, these changes won’t apply in restarted app. Need to re-deploy.</p>
<p>delete a stopped Compose app and networks:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker-compose <span class="built_in">rm</span></span><br></pre></td></tr></table></figure>
<p>stop and delete containers and networks by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker-compose down</span><br></pre></td></tr></table></figure>
<h2 id="stack"><a class="markdownIt-Anchor" href="#stack"></a> Stack</h2>
<p>swarm only</p>
<p>stacks manage a bunch of services as a single app, highest layer of docker application hierarchy.</p>
<p><img src="/photos/docker-note/stack.png" alt="stack" /></p>
<p>can run on Docker CLI, Docker UCP, Docker Cloud.</p>
<p>docker-stack.yml: YAML config file including <strong>version</strong>, <strong>services</strong>, <strong>network</strong>, <strong>volumes</strong>, documenting the app. Can do version control.</p>
<p><img src="/photos/docker-note/stack_file.png" alt="stack_file" /></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span> <span class="comment"># &gt;=3</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">redis:</span> <span class="comment"># service 1st</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:alpine</span> <span class="comment">#</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">frontend</span></span><br><span class="line">    <span class="attr">deploy:</span> <span class="comment"># new in version 3</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">update_config:</span></span><br><span class="line">        <span class="attr">parallelism:</span> <span class="number">2</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">restart_policy:</span></span><br><span class="line">        <span class="attr">condition:</span> <span class="string">on-failure</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:9.4</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">POSTGRES_USER:</span> <span class="string">&quot;postgres&quot;</span></span><br><span class="line">      <span class="attr">POSTGRES_PASSWORD:</span> <span class="string">&quot;postgres&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db-data:/var/lib/postgresql/data</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">backend</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">placement:</span></span><br><span class="line">        <span class="attr">constraints:</span> [<span class="string">node.role</span> <span class="string">==</span> <span class="string">manager</span>] <span class="comment"># only run on manager nodes</span></span><br><span class="line">  <span class="attr">vote:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">dockersamples/examplevotingapp_vote:before</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5000</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">frontend</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">update_config:</span></span><br><span class="line">        <span class="attr">parallelism:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">restart_policy:</span></span><br><span class="line">        <span class="attr">condition:</span> <span class="string">on-failure</span></span><br><span class="line">  <span class="attr">result:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">dockersamples/examplevotingapp_result:before</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5001</span><span class="string">:80</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">backend</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">update_config:</span></span><br><span class="line">        <span class="attr">parallelism:</span> <span class="number">2</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">10s</span></span><br><span class="line">      <span class="attr">restart_policy:</span></span><br><span class="line">        <span class="attr">condition:</span> <span class="string">on-failure</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">worker:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">dockersamples/examplevotingapp_worker</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">frontend</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">backend</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">mode:</span> <span class="string">replicated</span></span><br><span class="line">      <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">      <span class="attr">labels:</span> [<span class="string">APP=VOTING</span>]</span><br><span class="line">      <span class="attr">restart_policy:</span></span><br><span class="line">        <span class="attr">condition:</span> <span class="string">on-failure</span></span><br><span class="line">        <span class="attr">delay:</span> <span class="string">10s</span></span><br><span class="line">        <span class="attr">max_attempts:</span> <span class="number">3</span></span><br><span class="line">        <span class="attr">window:</span> <span class="string">120s</span></span><br><span class="line">      <span class="attr">placement:</span></span><br><span class="line">        <span class="attr">constraints:</span> [<span class="string">node.role</span> <span class="string">==</span> <span class="string">manager</span>]</span><br><span class="line"></span><br><span class="line">  <span class="attr">visualizer:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">dockersamples/visualizer:stable</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">    <span class="attr">stop_grace_period:</span> <span class="string">1m30s</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/var/run/docker.sock:/var/run/docker.sock&quot;</span></span><br><span class="line">    <span class="attr">deploy:</span></span><br><span class="line">      <span class="attr">placement:</span></span><br><span class="line">        <span class="attr">constraints:</span> [<span class="string">node.role</span> <span class="string">==</span> <span class="string">manager</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">frontend:</span></span><br><span class="line">  <span class="attr">backend:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">db-data:</span></span><br></pre></td></tr></table></figure>
<p>source: <a href="https://github.com/dockersamples/example-voting-app/docker-stack.yml">https://github.com/dockersamples/example-voting-app/docker-stack.yml</a></p>
<p>Check <a href="https://docs.docker.com/compose/compose-file/">Compose file version 3 reference</a></p>
<p>Placement constraints:</p>
<ul>
<li>Node ID: <a href="http://node.id">node.id</a> == o2p4kw2uuw2a</li>
<li>Node name: node.hostname == wrk-12</li>
<li>Role: node.role != manager</li>
<li>Engine labels: engine.labels.operatingsystem==ubuntu 16.04</li>
<li>Custom node labels: node.labels.zone == prod1 <strong>zone: prod1</strong></li>
</ul>
<p><code>service.&lt;service&gt;.deploy.update_config</code>:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">update_config:</span></span><br><span class="line">  <span class="attr">parallelism:</span> <span class="number">2</span> <span class="comment"># update two replicas at-atime</span></span><br><span class="line">  <span class="attr">failure_action:</span> <span class="string">rollback</span> <span class="comment"># [pause, continue, rollback]</span></span><br></pre></td></tr></table></figure>
<p><code>services.&lt;service&gt;.deploy.restart-policy</code>:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">restart_policy:</span></span><br><span class="line">  <span class="attr">condition:</span> <span class="string">on-failure</span> <span class="comment"># non-zero exit code</span></span><br><span class="line">  <span class="attr">delay:</span> <span class="string">5s</span> <span class="comment"># between each of the restart attempts</span></span><br><span class="line">  <span class="attr">max_attempts:</span> <span class="number">3</span> </span><br><span class="line">  <span class="attr">window:</span> <span class="string">120s</span> <span class="comment"># wait up to 120 seconds to decide if the restart worked</span></span><br></pre></td></tr></table></figure>
<p><code>services.&lt;service&gt;.stop_grace_period</code>:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">stop_grace_period:</span> <span class="string">1m30s</span> <span class="comment"># for PID 1 to handle SIGTERM, default 10s, then SIGKILL.</span></span><br></pre></td></tr></table></figure>
<h3 id="deploy-the-stack"><a class="markdownIt-Anchor" href="#deploy-the-stack"></a> Deploy the stack</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker stack deploy -c &lt;stackfile&gt; &lt;stack&gt; <span class="comment"># -c: --compose-file</span></span><br></pre></td></tr></table></figure>
<h3 id="check-status-4"><a class="markdownIt-Anchor" href="#check-status-4"></a> Check status</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker stack <span class="built_in">ls</span></span><br><span class="line">$ docker stack ps &lt;stack&gt;</span><br><span class="line">$ docker stack services &lt;stack&gt;</span><br></pre></td></tr></table></figure>
<h3 id="update-stack"><a class="markdownIt-Anchor" href="#update-stack"></a> Update stack</h3>
<p>update config file, and re-deploy by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker stack deploy -c &lt;stackfile&gt; &lt;stack&gt;</span><br></pre></td></tr></table></figure>
<p>will update every service in the stack.</p>
<h1 id="enterprise-editionee"><a class="markdownIt-Anchor" href="#enterprise-editionee"></a> Enterprise Edition(EE)</h1>
<ul>
<li>a hardened Docker Engine</li>
<li>Ops UI</li>
<li>Secure on-premises registry</li>
</ul>
<p><img src="/photos/docker-note/EECE.png" alt="EECE" /></p>
<h2 id="universal-control-planeucp"><a class="markdownIt-Anchor" href="#universal-control-planeucp"></a> Universal Control Plane(UCP)</h2>
<p>based on EE, the operations GUI from Docker Inc, to manage swarm and k8s apps.</p>
<p><img src="/photos/docker-note/UCP.png" alt="UCP" /></p>
<h2 id="docker-trusted-registrydtr"><a class="markdownIt-Anchor" href="#docker-trusted-registrydtr"></a> Docker Trusted Registry(DTR)</h2>
<p>based on EE and UCP, a registry to store images, a containerized app.</p>
<p><img src="/photos/docker-note/DTR.png" alt="DTR" /></p>
<h2 id="role-based-access-controlrbac"><a class="markdownIt-Anchor" href="#role-based-access-controlrbac"></a> Role-based Access Control(RBAC)</h2>
<ul>
<li>subject: user, team</li>
<li>role: permissions</li>
<li>collection: resources(docker node)</li>
</ul>
<p><img src="/photos/docker-note/RBAC.png" alt="RBAC" /></p>
<h2 id="image-scanning"><a class="markdownIt-Anchor" href="#image-scanning"></a> Image scanning</h2>
<p>after update the image in local, need to push into registry.</p>
<p>Tag the updated image:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker image tag &lt;image&gt; &lt;dtr-dns&gt;/&lt;repo&gt;/&lt;image&gt;:latest</span><br></pre></td></tr></table></figure>
<p>check by <code>docker image ls</code> to see a new tagged image.</p>
<p>login:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$  docker login &lt;dtr-dns&gt; <span class="comment"># username, passwork, user needs permission to write in the repo</span></span><br></pre></td></tr></table></figure>
<p>ensure image scanning sets to “scan on push” in UCP’s DTR’s repo setting. Then push:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ docker image push &lt;tagged-image&gt;</span><br></pre></td></tr></table></figure>
<p>Check in DTR’s repo’s images’ vulnerabilities field.</p>
<h2 id="http-routing-meshhrm"><a class="markdownIt-Anchor" href="#http-routing-meshhrm"></a> HTTP Routing Mesh(HRM)</h2>
<p>For Docker CE’s Routing Mesh(Swarm-mode Routing Mesh), Transport layer(L4).</p>
<p><img src="/photos/docker-note/routing_mesh.png" alt="routing_mesh" /></p>
<p>For Docker EE’s HRM, Application layer(L7). Route based on host header.</p>
<p><img src="/photos/docker-note/HRM.png" alt="HRM" /></p>
]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Note</title>
    <url>/2023/09/27/hexo-note/</url>
    <content><![CDATA[<p><a href="https://hexo.io/">Hexo</a>, <a href="https://hexo.io/docs/">documentation</a>, <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a>, <a href="https://github.com/hexojs/hexo/issues">GitHub Issues</a>.</p>
<h1 id="hexo"><a class="markdownIt-Anchor" href="#hexo"></a> Hexo</h1>
<h2 id="install-setup"><a class="markdownIt-Anchor" href="#install-setup"></a> Install &amp; Setup</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<h2 id="initialize"><a class="markdownIt-Anchor" href="#initialize"></a> Initialize</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>File Structure:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">|-- _config.yml # configuration file for hexo</span><br><span class="line">|-- source</span><br><span class="line">    |-- _posts</span><br><span class="line">        |-- one_blog.md # blog file</span><br><span class="line">    |-- _drafts</span><br><span class="line">        |-- one_draft.md # draft file</span><br><span class="line">|-- themes</span><br><span class="line">    |-- landscape # default theme</span><br><span class="line">    |-- ocean </span><br><span class="line">        |-- _config.yml # configuration file for ocean</span><br></pre></td></tr></table></figure>
<h2 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span> / $ hexo n <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h2 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server / $ hexo s</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h2 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate / $ hexo g</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h2 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy / $ hexo d</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>
<h2 id="deploy-to-github"><a class="markdownIt-Anchor" href="#deploy-to-github"></a> Deploy to github</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yarn add hexo-deployer-git</span><br></pre></td></tr></table></figure>
<p>Then, go to hexo’s _config.yml, add this to deploy session:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/xyshell/xyshell.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>
<h1 id="theme"><a class="markdownIt-Anchor" href="#theme"></a> Theme</h1>
<h2 id="install-setup-update"><a class="markdownIt-Anchor" href="#install-setup-update"></a> Install &amp; Setup &amp; Update</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/zhwangart/hexo-theme-ocean.git themes/ocean</span><br></pre></td></tr></table></figure>
<p>Modify theme setting in hexo’s _config.yml to ocean:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">ocean</span></span><br></pre></td></tr></table></figure>
<p>Further update:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/ocean</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>
<h1 id="theme-reference"><a class="markdownIt-Anchor" href="#theme-reference"></a> Theme Reference</h1>
<h2 id="ocean"><a class="markdownIt-Anchor" href="#ocean"></a> Ocean</h2>
<p><a href="https://github.com/zhwangart/hexo-theme-ocean">https://github.com/zhwangart/hexo-theme-ocean</a></p>
<h2 id="minos"><a class="markdownIt-Anchor" href="#minos"></a> Minos</h2>
<p><a href="https://github.com/ppoffice/hexo-theme-minos">https://github.com/ppoffice/hexo-theme-minos</a></p>
<h2 id="next"><a class="markdownIt-Anchor" href="#next"></a> Next</h2>
<p><a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a></p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS Note</title>
    <url>/2021/10/25/css-note/</url>
    <content><![CDATA[<h1 id="css-selectors"><a class="markdownIt-Anchor" href="#css-selectors"></a> CSS selectors</h1>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-tag">h2</span> &#123;</span><br><span class="line">  ...;</span><br><span class="line">&#125; <span class="comment">/* html tag selector, h1-h6 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#id</span> &#123;</span><br><span class="line">  ...;</span><br><span class="line">&#125; <span class="comment">/* id selector */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class</span> &#123;</span><br><span class="line">  ...;</span><br><span class="line">&#125; <span class="comment">/* class selector */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  ...;</span><br><span class="line">&#125; <span class="comment">/* descendant combinator */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  ...;</span><br><span class="line">&#125; <span class="comment">/* user action pseudo class */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.class</span><span class="selector-pseudo">:nth-of-type</span>(odd) &#123;</span><br><span class="line">  ...;</span><br><span class="line">&#125; <span class="comment">/* location pseudo class</span></span><br><span class="line"><span class="comment">nth-of-type: number or odd/even</span></span><br><span class="line"><span class="comment">first-of-type/last-of-type</span></span><br><span class="line"><span class="comment">nth-child</span></span><br><span class="line"><span class="comment">first-child/last-child</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#leftmenu</span> &gt; <span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span> &gt; <span class="selector-tag">a</span> &#123;</span><br><span class="line">  ...;</span><br><span class="line">&#125; <span class="comment">/* child combinator */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> + <span class="selector-tag">h2</span> &#123;</span><br><span class="line">  ...;</span><br><span class="line">&#125; <span class="comment">/* adjacent sibling combinator */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.sidebar</span> ~ <span class="selector-tag">h2</span> &#123;</span><br><span class="line">  ...;</span><br><span class="line">&#125; <span class="comment">/* general sibling combinator */</span></span><br></pre></td></tr></table></figure>
<h1 id="css-property-reference"><a class="markdownIt-Anchor" href="#css-property-reference"></a> CSS property reference</h1>
<h2 id="text-style"><a class="markdownIt-Anchor" href="#text-style"></a> text style</h2>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span>: white; <span class="comment">/* default black */</span></span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">18px</span>; <span class="comment">/* default 16px */</span></span><br><span class="line"><span class="attribute">font-weight</span>: bold; <span class="comment">/* default normal */</span></span><br><span class="line"><span class="attribute">font-style</span>: italic; <span class="comment">/* default normal */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* whitespace between lines of test */</span></span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1.5</span>; <span class="comment">/* default 1, relative to font-size */</span></span><br><span class="line"><span class="comment">/* space between characters */</span></span><br><span class="line"><span class="attribute">letter-spacing</span>: <span class="number">2px</span>; <span class="comment">/* default 0 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* visit cssfontstack.com to find more web-safe fonts. */</span></span><br><span class="line"><span class="attribute">font-family</span>: Verdana, Arial, sans-serif, cursive, fantasy; <span class="comment">/* web-safe fonts, default Arial */</span></span><br><span class="line"><span class="comment">/* serif: Georgia, Times New Roman</span></span><br><span class="line"><span class="comment">sans-serif: Arial, Verdana, Comic Sans, Trebuchet</span></span><br><span class="line"><span class="comment">monospace: Courier New */</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">text-align</span>: center; <span class="comment">/* justify, default left */</span></span><br><span class="line"><span class="attribute">text-transform</span>: capitalize; <span class="comment">/* uppercase, default none */</span></span><br></pre></td></tr></table></figure>
<h2 id="container-style"><a class="markdownIt-Anchor" href="#container-style"></a> container style</h2>
<p>The Box Model: element &lt; padding &lt; border &lt; margin</p>
<p>Use chrome dev tools to inspect the box model.</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="comment">/* relative to parent width, default auto</span></span><br><span class="line"><span class="comment">width: 1em; relative to parent font-size</span></span><br><span class="line"><span class="comment">width: 1rem; relative to html font-size */</span></span><br><span class="line">backgroud-<span class="selector-tag">image</span>: <span class="built_in">url</span>(<span class="string">../images/image.png</span>);</span><br><span class="line"><span class="attribute">background-repeat</span>: repeat; <span class="comment">/* repeat, repeat-x, repeat-y, no-repeat */</span></span><br><span class="line"><span class="attribute">background-color</span>: <span class="number">#23cea6</span>; <span class="comment">/* RGB, default transparent */</span></span><br><span class="line"><span class="attribute">border</span>: <span class="number">10px</span> solid <span class="number">#a693c2</span>;</span><br><span class="line"><span class="attribute">border-color</span>: <span class="number">#a693c2</span>;</span><br><span class="line"><span class="comment">/* border inside, width, style, color(default text color)</span></span><br><span class="line"><span class="comment">style: solid, dashed, dotted, ridge, double, groove, inset, outset</span></span><br><span class="line"><span class="comment">border-left: xxx; left only */</span></span><br><span class="line"><span class="attribute">outline</span>: <span class="number">10px</span> solid red; <span class="comment">/* border outside */</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">40px</span>;</span><br><span class="line"><span class="comment">/* space between container and content</span></span><br><span class="line"><span class="comment">top right bottom left</span></span><br><span class="line"><span class="comment">top/bottom left/right</span></span><br><span class="line"><span class="comment">top/right/bottom/left */</span></span><br><span class="line"><span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">40px</span>;</span><br><span class="line"><span class="comment">/* space between container and next element</span></span><br><span class="line"><span class="comment">margin collapse, max(margin-bottom, margin-top) applied */</span></span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br></pre></td></tr></table></figure>
<h1 id="css-templates"><a class="markdownIt-Anchor" href="#css-templates"></a> CSS templates</h1>
<h2 id="normalizecss"><a class="markdownIt-Anchor" href="#normalizecss"></a> normalize.css</h2>
<p><a href="github.com/necolas/normalize.css">normalize.css v8.0.1</a> is a collection of CSS resets and normalizations.</p>
<h2 id="mobile-first-design"><a class="markdownIt-Anchor" href="#mobile-first-design"></a> Mobile first design</h2>
<p>small.css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  -webkit-<span class="selector-tag">text</span>-size-adjust: <span class="number">100%</span>;</span><br><span class="line">  -ms-<span class="selector-tag">text</span>-size-adjust: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">  -moz-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  -webkit-<span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;Lato&quot;</span>, sans-serif;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>medium.css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">768px</span>) &#123;</span><br><span class="line">  ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>large.css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">min-width</span>: <span class="number">1024px</span>) &#123;</span><br><span class="line">  ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>IDE Note</title>
    <url>/2021/07/30/ide-note/</url>
    <content><![CDATA[<h1 id="ide-features"><a class="markdownIt-Anchor" href="#ide-features"></a> IDE features</h1>
<h2 id="multi-cursor-editing"><a class="markdownIt-Anchor" href="#multi-cursor-editing"></a> Multi-cursor editing</h2>
<p>Using multiple cursors allows you to edit multiple parts of the document at once, greatly improving your productivity.</p>
<h3 id="vscode"><a class="markdownIt-Anchor" href="#vscode"></a> Vscode</h3>
<ul>
<li>Box Selection - ⇧↓, ⇧→, ⇧↑, ⇧← to select a block of text. ⇧⌥ while selecting text with the mouse or drag-select using the middle mouse button.</li>
<li>Add a cursor - ⌥⌘↑ to add a new cursor above, or ⌥⌘↓ to add a new cursor below. You can also use your mouse with ⌥+Click to add a cursor anywhere.</li>
<li>Create cursors on all occurrences of a string - select one instance of a string e.g. background-color and press ⇧⌘L. Now you can replace all instances by simply typing.</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#p1</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#ff0000</span>;</span><br><span class="line">&#125; <span class="comment">/* red in HEX format */</span></span><br><span class="line"><span class="selector-id">#p2</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">hsl</span>(<span class="number">120</span>, <span class="number">100%</span>, <span class="number">50%</span>);</span><br><span class="line">&#125; <span class="comment">/* green in HSL format */</span></span><br><span class="line"><span class="selector-id">#p3</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">4</span>, <span class="number">255</span>, <span class="number">0.733</span>);</span><br><span class="line">&#125; <span class="comment">/* blue with alpha channel in RGBA format */</span></span><br></pre></td></tr></table></figure>
<h2 id="intellisense"><a class="markdownIt-Anchor" href="#intellisense"></a> IntelliSense</h2>
<h3 id="vscode-2"><a class="markdownIt-Anchor" href="#vscode-2"></a> Vscode</h3>
<ul>
<li>invoke IntelliSense: ⌃Space or ⌥Esc</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> canvas = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;canvas&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> context = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span><br><span class="line"></span><br><span class="line">context.<span class="property">strokeStyle</span> = <span class="string">&#x27;blue&#x27;</span>;</span><br><span class="line">context.</span><br></pre></td></tr></table></figure>
<h2 id="line-actions"><a class="markdownIt-Anchor" href="#line-actions"></a> Line Actions</h2>
<h3 id="vscode-3"><a class="markdownIt-Anchor" href="#vscode-3"></a> Vscode</h3>
<ul>
<li>Copy a line and insert it above or below: ⇧⌥↓ or ⇧⌥↑</li>
<li>Move an entire line or selection of lines up or down: ⌥↑ and ⌥↓</li>
<li>Delete the entire line: ⇧⌘K.</li>
<li>Comment out a line: ⌘/</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;John&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">31</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;city&quot;</span><span class="punctuation">:</span> <span class="string">&quot;New York&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="refactoring"><a class="markdownIt-Anchor" href="#refactoring"></a> Refactoring</h2>
<h3 id="vscode-4"><a class="markdownIt-Anchor" href="#vscode-4"></a> Vscode</h3>
<ul>
<li>Rename a function/variable: F2 or right-click on the function/variable name.</li>
</ul>
<h2 id="formatting"><a class="markdownIt-Anchor" href="#formatting"></a> Formatting</h2>
<h3 id="vscode-5"><a class="markdownIt-Anchor" href="#vscode-5"></a> Vscode</h3>
<ul>
<li>Format a document: ⇧⌘F</li>
<li>Format a selection: ⌘K ⌘F</li>
</ul>
<p>ps: enable editor.formatOnSave</p>
<h2 id="code-folding"><a class="markdownIt-Anchor" href="#code-folding"></a> Code Folding</h2>
<h3 id="vscode-6"><a class="markdownIt-Anchor" href="#vscode-6"></a> Vscode</h3>
<ul>
<li>fold and unfold a block of code: ⌥⌘[ and ⌥⌘]</li>
<li>fold and unfold all blocks: ⌘K ⌘0 and ⌘K ⌘J</li>
<li>fold and unfold a number of levels: ⌘K ⌘1 to ⌘K ⌘5</li>
</ul>
<h2 id="errors-and-warnings"><a class="markdownIt-Anchor" href="#errors-and-warnings"></a> Errors and Warnings</h2>
<h3 id="vscode-7"><a class="markdownIt-Anchor" href="#vscode-7"></a> Vscode</h3>
<ul>
<li>navigate to the next error: F8</li>
</ul>
<h2 id="code-snipets"><a class="markdownIt-Anchor" href="#code-snipets"></a> Code Snipets</h2>
<h3 id="vscode-8"><a class="markdownIt-Anchor" href="#vscode-8"></a> Vscode</h3>
<ul>
<li>create a code snippet: Code &gt; Preferences &gt; User Snippets</li>
</ul>
]]></content>
      <tags>
        <tag>ide, vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Note</title>
    <url>/2020/06/08/git-note/</url>
    <content><![CDATA[<h1 id="git-object-model"><a class="markdownIt-Anchor" href="#git-object-model"></a> Git Object Model</h1>
<p><img src="/photos/git-note/git-obj-mdl.png" alt="git-obj-mdl" /></p>
<h1 id="git-submodule"><a class="markdownIt-Anchor" href="#git-submodule"></a> Git Submodule</h1>
<h2 id="add-submodule"><a class="markdownIt-Anchor" href="#add-submodule"></a> Add Submodule</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git submodule add &lt;url&gt; &lt;path-to-submodule&gt;</span><br></pre></td></tr></table></figure>
<p>Confirm submodule is added by <code>cat .gitmodules</code>.</p>
<p>Set git config to show submodule summary when running <code>git status</code>:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global status.submoduleSummary <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global diff.submodule <span class="built_in">log</span></span><br></pre></td></tr></table></figure>
<h2 id="add-commit"><a class="markdownIt-Anchor" href="#add-commit"></a> Add &amp; Commit</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">&quot;add submodule&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="clone-a-repo-containing-submodules"><a class="markdownIt-Anchor" href="#clone-a-repo-containing-submodules"></a> Clone a repo containing submodules</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> &lt;url&gt; &lt;path&gt;</span><br></pre></td></tr></table></figure>
<p>If <code>cd submodules/</code>, nothing exists, need to do:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git submodule init</span><br><span class="line">$ git submodule update</span><br></pre></td></tr></table></figure>
<p>Then <code>cd submodules/</code>, everything is okay.</p>
<h2 id="switch-submodules-version"><a class="markdownIt-Anchor" href="#switch-submodules-version"></a> Switch submodule’s version</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> submodules/</span><br><span class="line">$ git fetch</span><br><span class="line">$ git checkout beta</span><br><span class="line">$ <span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure>
<p>Run <code>git status</code> to see new commit in submodule.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">&quot;change submodule to beta version&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="remove-submodule"><a class="markdownIt-Anchor" href="#remove-submodule"></a> Remove submodule</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git submodule deinit &lt;path-to-submodule&gt;</span><br></pre></td></tr></table></figure>
<p>At this point, we can reinit this submodule.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">rm</span> &lt;path-to-submodule&gt;</span><br></pre></td></tr></table></figure>
<p>Run <code>git status</code> to confirm.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m <span class="string">&quot;remove submodule&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="multiple-nested-submodules"><a class="markdownIt-Anchor" href="#multiple-nested-submodules"></a> Multiple Nested Submodules</h2>
<p>Clone a repo containing multiple nested submodules:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> --recursive &lt;url&gt; &lt;path&gt;</span><br></pre></td></tr></table></figure>
<p>Run <code>cat .gitmodules</code> to confirm first layer of submodules.</p>
<p>To look into submodules’ <code>cat .gitmodules</code>, run:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git submodule foreach <span class="string">&#x27;cat .gitmodules&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="update-from-submodules"><a class="markdownIt-Anchor" href="#update-from-submodules"></a> Update from submodules</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git pull</span><br></pre></td></tr></table></figure>
<p>Teammates may add/delete/change/redirect a submodule. Run:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git submodule <span class="built_in">sync</span> --recursive</span><br></pre></td></tr></table></figure>
<p>Then bring change for each submodule by:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git submodule update --init --recursive</span><br></pre></td></tr></table></figure>
<h2 id="edit-submodules"><a class="markdownIt-Anchor" href="#edit-submodules"></a> Edit submodules</h2>
<p><code>cd submodule/</code>, <code>git pull --rebase</code>, make some changes, <code>git commit -am &quot;edit something</code>, <strong>Not to push now</strong>.</p>
<p><code>cd ..</code>, run <code>git status</code> to see new commits in submodule, then commit in <strong>parent</strong> repository by <code>git commit -am &quot;edit submodule</code></p>
<p>If <code>git push</code> right now, would push a commit not yet pushed in submodule. Could check each indidual submodule carefully before push in parent repo, but might miss.</p>
<p>In git version &gt; 2.7, can do:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global push.recurseSubmodules on-demand</span><br></pre></td></tr></table></figure>
<p>Then <code>git push</code>.</p>
]]></content>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Julia Note</title>
    <url>/2020/07/09/julia-note/</url>
    <content><![CDATA[<h1 id="variable"><a class="markdownIt-Anchor" href="#variable"></a> Variable</h1>
<h2 id="stylistic-conventions"><a class="markdownIt-Anchor" href="#stylistic-conventions"></a> Stylistic Conventions</h2>
<ul>
<li>
<p>Names of variables are in lower case.</p>
</li>
<li>
<p>Word separation can be indicated by underscores (‘_’), but use of underscores is discouraged unless the name would be hard to read otherwise.</p>
</li>
<li>
<p>Names of Types and Modules begin with a capital letter and word separation is shown with upper camel case instead of underscores.</p>
</li>
<li>
<p>Names of functions and macros are in lower case, without underscores.</p>
</li>
<li>
<p>Functions that write to their arguments have names that end in !. These are sometimes called “mutating” or “in-place” functions because they are intended to produce changes in their arguments after the function is called, not just return a value.</p>
</li>
</ul>
<h1 id="package"><a class="markdownIt-Anchor" href="#package"></a> Package</h1>
<h2 id="add-package"><a class="markdownIt-Anchor" href="#add-package"></a> Add package</h2>
<figure class="highlight julia"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Pkg; Pkg.add(<span class="string">&quot;Date&quot;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="use-package"><a class="markdownIt-Anchor" href="#use-package"></a> Use package</h2>
<figure class="highlight julia"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Dates</span><br><span class="line">isleapyear(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Dates</span><br><span class="line">Dates.isleapyear(<span class="number">4</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>julia</tag>
      </tags>
  </entry>
  <entry>
    <title>JS Note</title>
    <url>/2020/07/02/js-note/</url>
    <content><![CDATA[<h1 id="template-literals-string-literals"><a class="markdownIt-Anchor" href="#template-literals-string-literals"></a> Template literals (String literals)</h1>
<p>add variables at runtime</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> msg = <span class="string">`some <span class="subst">$&#123;variable1&#125;</span>, </span></span><br><span class="line"><span class="string">    <span class="subst">$&#123;<span class="string">&quot;$&quot;</span> + variable2&#125;</span>`</span>;</span><br></pre></td></tr></table></figure>
<p>use tag function to add bold style to variables in template literals</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">highlighText</span>(<span class="params">strings, ...values</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; strings.<span class="property">raw</span>.<span class="property">lengths</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      str += <span class="string">`&lt;b&gt;<span class="subst">$&#123;values[i - <span class="number">1</span>]&#125;</span>&lt;/b&gt;`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    str += strings.<span class="property">raw</span>[i];</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> msg = highlighText<span class="string">`some <span class="subst">$&#123;variable1&#125;</span>, <span class="subst">$&#123;<span class="string">&quot;$&quot;</span> + variable2&#125;</span>`</span>;</span><br></pre></td></tr></table></figure>
<h1 id="var-let-and-const"><a class="markdownIt-Anchor" href="#var-let-and-const"></a> var, let and const</h1>
<p>var:</p>
<ul>
<li>no block scope</li>
<li>can be redeclared anywhere</li>
<li>can be used and reassigned anywhere</li>
</ul>
<p>let:</p>
<ul>
<li>block scope</li>
<li>can’t be redeclared within scope</li>
<li>can be reassigned within scope</li>
</ul>
<p>const:</p>
<ul>
<li>block scope</li>
<li>can’t be reassigned or redeclared</li>
<li>the value <strong>can</strong> be changed</li>
</ul>
<p>const is more used as readability purpose</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">arr = <span class="number">3</span>; <span class="comment">// error</span></span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">22</span>; <span class="comment">// okay!</span></span><br><span class="line"><span class="keyword">var</span> arr = <span class="title class_">Object</span>.<span class="title function_">freeze</span>([<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]); <span class="comment">// instead</span></span><br></pre></td></tr></table></figure>
<h1 id="destructing-an-array-or-object"><a class="markdownIt-Anchor" href="#destructing-an-array-or-object"></a> Destructing an array or object</h1>
<p>array:</p>
<ul>
<li>don’t have to catch all values in the array</li>
<li>variable is undefined if arr is not enough to unpack</li>
<li>can set default value</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> [a, b = <span class="literal">true</span>, c, ...moreArgs] = arr;</span><br></pre></td></tr></table></figure>
<p>object:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> &#123; <span class="title class_">Id</span>, <span class="title class_">ApplicantName</span> = <span class="string">&quot;Barry&quot;</span> &#125; = obj;</span><br></pre></td></tr></table></figure>
<h1 id="string"><a class="markdownIt-Anchor" href="#string"></a> String</h1>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">str.<span class="title function_">trim</span>(); <span class="comment">// trim white space</span></span><br><span class="line">str.<span class="title function_">toLowerCase</span>();</span><br><span class="line">str.<span class="title function_">startWith</span>(<span class="string">&quot;dr&quot;</span>);</span><br><span class="line">str.<span class="title function_">endWith</span>(<span class="string">&quot;md&quot;</span>, <span class="number">4</span>);</span><br><span class="line">str.<span class="title function_">search</span>(<span class="string">&quot;house&quot;</span>);</span><br><span class="line">str.<span class="title function_">includes</span>(<span class="string">&quot;house&quot;</span>);</span><br></pre></td></tr></table></figure>
<h1 id="number"><a class="markdownIt-Anchor" href="#number"></a> Number</h1>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Number</span>.<span class="title function_">isInteger</span>(num); <span class="comment">// 25.0 is integer</span></span><br><span class="line"><span class="title class_">Number</span>.<span class="property">MAX_SAFE_INTEGER</span>; <span class="comment">// Number.MIN_SAFE_INTEGER</span></span><br><span class="line"><span class="title class_">Number</span>.<span class="title function_">isSafeInteger</span>(num);</span><br></pre></td></tr></table></figure>
<h1 id="symbol"><a class="markdownIt-Anchor" href="#symbol"></a> Symbol</h1>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> id = <span class="title class_">Symbol</span>(<span class="string">&quot;My Id&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> id2 = <span class="title class_">Symbol</span>(<span class="string">&quot;My Id&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(id === id2); <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> id = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&quot;My Id&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> id2 = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&quot;My Id&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(id === id2); <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// create secret property</span></span><br><span class="line"><span class="keyword">var</span> loan = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Barry&quot;</span>,</span><br><span class="line">    [<span class="title class_">Symbol</span>(<span class="string">&quot;income&quot;</span>)]: <span class="number">15000</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(load[<span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&quot;income&quot;</span>)]); <span class="comment">// 15000</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyNames</span>(loan)); <span class="comment">// [&quot;name&quot;]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">getOwnPropertySymbol</span>(loan)); <span class="comment">// [Symbol(income)]</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s Note</title>
    <url>/2020/06/17/k8s-note/</url>
    <content><![CDATA[<h1 id="kubernetes-architecture"><a class="markdownIt-Anchor" href="#kubernetes-architecture"></a> Kubernetes Architecture</h1>
<p><img src="/photos/k8s-note/k8s_architecture.png" alt="k8s_architecture" /></p>
<h2 id="master-node"><a class="markdownIt-Anchor" href="#master-node"></a> Master Node</h2>
<p><img src="/photos/k8s-note/master_node.png" alt="master_node" /></p>
<p>control plane responsible for managing the state of a Kubernetes cluster(brain)</p>
<p>users send requests to the master node via a Command Line Interface (CLI) tool, a Web User-Interface (Web UI) Dashboard, or Application Programming Interface (API)</p>
<p>master node replicas are added to the cluster, configured in High-Availability (HA) mode to ensure the control plane’s fault tolerance. While only one of the master node replicas actively manages the cluster, the control plane components stay in sync across the master node replicas</p>
<p>4 components:</p>
<ol>
<li>API server</li>
<li>Scheduler</li>
<li>Controller managers</li>
<li>etcd</li>
</ol>
<h3 id="api-server"><a class="markdownIt-Anchor" href="#api-server"></a> API Server</h3>
<p>a central control plane component, coordinating all the administrative tasks</p>
<p>reads the Kubernetes cluster’s current state from the etcd, and after a call’s execution, saves the resulting state of the Kubernetes cluster in etcd(only master plane component talks to etcd)</p>
<p>designed to scale horizontally: it scales by deploying more instances to balance traffic between those instances</p>
<p>highly configurable and customizable, supports the addition of custom API servers</p>
<h3 id="scheduler"><a class="markdownIt-Anchor" href="#scheduler"></a> Scheduler</h3>
<p>assign new objects, such as pods, to nodes, based on current Kubernetes cluster state and new object’s requirements</p>
<p>takes into account: individual and collective resource requirements, hardware/software/policy constraints, affinity and anti-affinity specifications, data locality, inter-workload interference, and deadlines.</p>
<p>highly configurable and customizable, supports additional custom schedulers (specify the name of the custom scheduler in object 's configuration data)</p>
<h3 id="controller-managers"><a class="markdownIt-Anchor" href="#controller-managers"></a> Controller Managers</h3>
<p>run controllers to regulate the state of the Kubernetes cluster</p>
<p>controllers are watch-loops continuously running and comparing the cluster’s desired state (provided by objects’ configuration data) with its current state (obtained from etcd data store via the API server), includes:</p>
<ul>
<li>Node controller: Responsible for noticing and responding when nodes go down.</li>
<li>Replication controller: Responsible for maintaining the correct number of pods for every replication controller object in the system.</li>
<li>Endpoints controller: Populates the Endpoints object (that is, joins Services &amp; Pods).</li>
<li>Service Account &amp; Token controllers: Create default accounts and API access tokens for new namespaces.</li>
</ul>
<p>corrective action is taken in the cluster until its current state matches the desired state.</p>
<ul>
<li>
<p>kube-controller-manager: runs controllers responsible to act when nodes become unavailable, to ensure pod counts are as expected, to create endpoints, service accounts, and API access tokens.</p>
</li>
<li>
<p>cloud-controller-manager: runs controllers responsible to interact with the underlying infrastructure of a cloud provider when nodes become unavailable, to manage storage volumes when provided by a cloud service, and to manage load balancing and routing.</p>
<ul>
<li>Node controller: For checking the cloud provider to determine if a node has been deleted in the cloud after it stops responding</li>
<li>Route controller: For setting up routes in the underlying cloud infrastructure</li>
<li>Service controller: For creating, updating and deleting cloud provider load balancers</li>
</ul>
</li>
</ul>
<h3 id="etcd"><a class="markdownIt-Anchor" href="#etcd"></a> <a href="https://etcd.io/docs/">etcd</a></h3>
<p>a distributed key-value store which holds cluster state related data, to persist the Kubernetes cluster’s state</p>
<p>either configured on the master node (stacked) or on its dedicated host (external)</p>
<ul>
<li>when stacked: HA master node replicas ensure etcd resiliency.</li>
<li>when external: etcd hosts have to be separately replicated for HA mode configuration.</li>
</ul>
<p>based on <a href="https://web.stanford.edu/~ouster/cgi-bin/papers/raft-atc14">Raft Consensus Algorithm</a>, written in Golang, besides storing the cluster state, also used to store configuration details such as subnets, ConfigMaps, Secrets, etc.</p>
<h2 id="worker-node"><a class="markdownIt-Anchor" href="#worker-node"></a> Worker Node</h2>
<p><img src="/photos/k8s-note/worker_node.png" alt="worker_node" /></p>
<p>provides a running environment for client applications, which are encapsulated in Pods, controlled by the cluster control plane agents running on the master node</p>
<p>Pods are scheduled on worker nodes, where they find required compute, memory and storage resources to run, and networking to talk to each other and the outside world.</p>
<p>A Pod is the smallest scheduling unit in Kubernetes, a logical collection of one or more containers scheduled together.</p>
<p>to access the applications from the external world, we connect to worker nodes and not to the master node.</p>
<p>4 parts:</p>
<ol>
<li>Container runtime</li>
<li>kubelet</li>
<li>kube-proxy</li>
<li>Addons for DNS, Dashboard, cluster-level monitoring and logging.</li>
</ol>
<h3 id="container-runtime"><a class="markdownIt-Anchor" href="#container-runtime"></a> Container Runtime</h3>
<p>responsible for running containers, e.x. Docker, containerd, CRI-O</p>
<h3 id="kubelet"><a class="markdownIt-Anchor" href="#kubelet"></a> Kubelet</h3>
<p>an agent running on each node, communicates with the control plane components from the master node, makes sure containers are running in a Pod.</p>
<p>receives Pod definitions, primarily from the API server, and interacts with the container runtime on the node to run containers associated with the Pod.</p>
<p>monitors the health of the Pod’s running container</p>
<p>connects to the container runtime using Container Runtime Interface (CRI). which consists of protocol buffers, gRPC API, and libraries.</p>
<p><img src="/photos/k8s-note/CRI.png" alt="CRI" /></p>
<p>CRI implements two services:</p>
<ul>
<li>ImageService: responsible for all the image-related operations</li>
<li>RuntimeService: responsible for all the Pod and container-related operations.</li>
</ul>
<p>some examples of CRI shims:</p>
<ul>
<li>dockershim: with dockershim, containers are created using Docker installed on the worker nodes. Internally, Docker uses containerd to create and manage containers.</li>
</ul>
<p><img src="/photos/k8s-note/dockershim.png" alt="dockershim" /></p>
<ul>
<li>cri-containerd: with cri-containerd, we can directly use Docker’s smaller offspring containerd to create and manage containers.</li>
</ul>
<p><img src="/photos/k8s-note/cri-containerd.png" alt="cri-containerd" /></p>
<ul>
<li>cri-o: cri-o enables using any Open Container Initiative (OCI) compatible runtimes with Kubernetes. At the time this course was created, CRI-O supported runC and Clear Containers as container runtimes. However, in principle, any OCI-compliant runtime can be plugged-in.</li>
</ul>
<p><img src="/photos/k8s-note/cri-o.png" alt="cri-o" /></p>
<h3 id="kube-proxy"><a class="markdownIt-Anchor" href="#kube-proxy"></a> Kube-proxy</h3>
<p>network agent which runs on each node, responsible for dynamic updates and maintenance of all networking rules on the node, abstracts the details of Pods networking and forwards connection requests to Pods.</p>
<p>implements part of the Kubernetes Service concept.</p>
<p>maintains network rules on nodes. These network rules allow network communication to your Pods from network sessions inside or outside of your cluster.</p>
<p>uses the operating system packet filtering layer if there is one and it’s available. Otherwise, forwards the traffic itself.</p>
<h3 id="addons"><a class="markdownIt-Anchor" href="#addons"></a> Addons</h3>
<p>use Kubernetes resources (DaemonSet, Deployment, etc) to implement cluster features and functionality not yet available in Kubernetes, therefore implemented through 3rd-party pods and services.</p>
<ul>
<li>DNS: cluster DNS is a DNS server for Kubernetes services, required to assign DNS records to Kubernetes objects and resources</li>
<li>Web UI(Dashboard): a general purposed web-based user interface for cluster management</li>
<li>Container Resource Monitoring: records generic time-series metrics about containers in a central database, and provides a UI for browsing that data.</li>
<li>Cluster-level Logging: responsible for saving container logs to a central log store with search/browsing interface.</li>
</ul>
<h2 id="networking-challenges"><a class="markdownIt-Anchor" href="#networking-challenges"></a> Networking Challenges</h2>
<h3 id="container-to-container-communication-inside-pods"><a class="markdownIt-Anchor" href="#container-to-container-communication-inside-pods"></a> Container-to-Container Communication Inside Pods</h3>
<p>When a Pod is started, a network namespace is created inside the Pod, and all containers running inside the Pod will share that network namespace so that they can talk to each other via localhost.</p>
<h3 id="pod-to-pod-communication-across-nodes"><a class="markdownIt-Anchor" href="#pod-to-pod-communication-across-nodes"></a> Pod-to-Pod Communication Across Nodes</h3>
<p>Kubernetes network model “IP-per-Pod”</p>
<p>containers are integrated with the overall Kubernetes networking model through the use of the <a href="https://github.com/containernetworking/cni">Container Network Interface</a> (CNI) supported by <a href="https://github.com/containernetworking/cni#3rd-party-plugins">CNI plugins</a>.</p>
<h3 id="pod-to-external-world-communication"><a class="markdownIt-Anchor" href="#pod-to-external-world-communication"></a> Pod-to-External World Communication</h3>
<p>by services, complex constructs which encapsulate networking rules definitions on cluster nodes. By exposing services to the external world with kube-proxy, applications become accessible from outside the cluster over a virtual IP.</p>
<h1 id="installing-kubernetes"><a class="markdownIt-Anchor" href="#installing-kubernetes"></a> Installing Kubernetes</h1>
<h2 id="kubernetes-configuration"><a class="markdownIt-Anchor" href="#kubernetes-configuration"></a> Kubernetes Configuration</h2>
<p>four major installation types:</p>
<ul>
<li>All-in-One Single-Node Installation:</li>
</ul>
<p>In this setup, all the master and worker components are installed and running on a single-node. While it is useful for learning, development, and testing, it should not be used in production. Minikube is one such example, and we are going to explore it in future chapters.</p>
<ul>
<li>Single-Node etcd, Single-Master and Multi-Worker Installation:</li>
</ul>
<p>In this setup, we have a single-master node, which also runs a single-node etcd instance. Multiple worker nodes are connected to the master node.</p>
<ul>
<li>Single-Node etcd, Multi-Master and Multi-Worker Installation:</li>
</ul>
<p>In this setup, we have multiple-master nodes configured in HA mode, but we have a single-node etcd instance. Multiple worker nodes are connected to the master nodes.</p>
<ul>
<li>Multi-Node etcd, Multi-Master and Multi-Worker Installation:</li>
</ul>
<p>In this mode, etcd is configured in clustered HA mode, the master nodes are all configured in HA mode, connecting to multiple worker nodes. This is the most advanced and recommended production setup.</p>
<h2 id="localhost-installation"><a class="markdownIt-Anchor" href="#localhost-installation"></a> Localhost Installation</h2>
<p>localhost installation options available to deploy single- or multi-node Kubernetes clusters on our workstation/laptop:</p>
<ul>
<li>Minikube: single-node local Kubernetes cluster</li>
<li>Docker Desktop: single-node local Kubernetes cluster for Windows and Mac</li>
<li>CDK on LXD: multi-node local cluster with LXD containers.</li>
</ul>
<h2 id="on-premise-installation"><a class="markdownIt-Anchor" href="#on-premise-installation"></a> On-Premise Installation</h2>
<p>Kubernetes can be installed on-premise on VMs and bare metal.</p>
<ul>
<li>On-Premise VMs:</li>
</ul>
<p>Kubernetes can be installed on VMs created via Vagrant, VMware vSphere, KVM, or another Configuration Management (CM) tool in conjunction with a hypervisor software. There are different tools available to automate the installation, such as Ansible or kubeadm.</p>
<ul>
<li>On-Premise Bare Metal:</li>
</ul>
<p>Kubernetes can be installed on on-premise bare metal, on top of different operating systems, like RHEL, CoreOS, CentOS, Fedora, Ubuntu, etc. Most of the tools used to install Kubernetes on VMs can be used with bare metal installations as well.</p>
<h2 id="cloud-installation"><a class="markdownIt-Anchor" href="#cloud-installation"></a> Cloud Installation</h2>
<p>Kubernetes can be installed and managed on almost any cloud environment:</p>
<ul>
<li>Hosted Solutions:</li>
</ul>
<p>With Hosted Solutions, any given software is completely managed by the provider. The user pays hosting and management charges. Some of the vendors providing hosted solutions for Kubernetes are:</p>
<blockquote>
<p>Google Kubernetes Engine (GKE)<br />
Azure Kubernetes Service (AKS)<br />
Amazon Elastic Container Service for Kubernetes (EKS)<br />
DigitalOcean Kubernetes<br />
OpenShift Dedicated<br />
Platform9<br />
IBM Cloud Kubernetes Service.</p>
</blockquote>
<ul>
<li>Turnkey Cloud Solutions:</li>
</ul>
<p>Below are only a few of the Turnkey Cloud Solutions, to install Kubernetes with just a few commands on an underlying IaaS platform, such as:</p>
<blockquote>
<p>Google Compute Engine (GCE)<br />
Amazon AWS (AWS EC2)<br />
Microsoft Azure (AKS).</p>
</blockquote>
<ul>
<li>Turnkey On-Premise Solutions:</li>
</ul>
<p>The On-Premise Solutions install Kubernetes on secure internal private clouds with just a few commands:</p>
<blockquote>
<p>GKE On-Prem by Google Cloud<br />
IBM Cloud Private<br />
OpenShift Container Platform by Red Hat.</p>
</blockquote>
<h2 id="kubernetes-installation-toolsresources"><a class="markdownIt-Anchor" href="#kubernetes-installation-toolsresources"></a> Kubernetes Installation Tools/Resources</h2>
<p>It is worth checking out the <a href="https://github.com/kelseyhightower/kubernetes-the-hard-way">Kubernetes The Hard Way</a> GitHub project</p>
<p>some useful tools/resources available:</p>
<ul>
<li>kubeadm:</li>
</ul>
<p>kubeadm is a first-class citizen on the Kubernetes ecosystem. It is a secure and recommended way to bootstrap a single- or multi-node Kubernetes cluster. It has a set of building blocks to setup the cluster, but it is easily extendable to add more features. Please note that kubeadm does not support the provisioning of hosts.</p>
<ul>
<li>kubespray</li>
</ul>
<p>With kubespray (formerly known as kargo), we can install Highly Available Kubernetes clusters on AWS, GCE, Azure, OpenStack, or bare metal. Kubespray is based on Ansible, and is available on most Linux distributions. It is a Kubernetes Incubator project.</p>
<ul>
<li>kops</li>
</ul>
<p>With kops, we can create, destroy, upgrade, and maintain production-grade, highly-available Kubernetes clusters from the command line. It can provision the machines as well. Currently, AWS is officially supported. Support for GCE is in beta, and VMware vSphere in alpha stage, and other platforms are planned for the future. Explore the kops project for more details.</p>
<ul>
<li>kube-aws</li>
</ul>
<p>With kube-aws we can create, upgrade and destroy Kubernetes clusters on AWS from the command line. Kube-aws is also a Kubernetes Incubator project.</p>
<h2 id="minikube"><a class="markdownIt-Anchor" href="#minikube"></a> Minikube</h2>
<p>A Local Single-Node Kubernetes Cluster</p>
]]></content>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Note</title>
    <url>/2020/06/08/linux-note/</url>
    <content><![CDATA[<h1 id="ssh"><a class="markdownIt-Anchor" href="#ssh"></a> SSH</h1>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -i &lt;path-to-pem&gt; admin@&lt;ip/dns&gt;</span><br></pre></td></tr></table></figure>
<p>Local Port Forwarding:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -i &lt;path-to-pem&gt; -l admin &lt;ip/dns&gt; -L 9999:localhost:9999</span><br></pre></td></tr></table></figure>
<h1 id="scp"><a class="markdownIt-Anchor" href="#scp"></a> SCP</h1>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -i &lt;path-to-pem&gt; &lt;path-to-source-file&gt; admin@&lt;ip/dns&gt;:/home/admin/&lt;path-to-target-file&gt;</span><br></pre></td></tr></table></figure>
<h1 id="auto-start-after-reboot"><a class="markdownIt-Anchor" href="#auto-start-after-reboot"></a> Auto-start after reboot</h1>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ systemctl <span class="built_in">enable</span> docker</span><br><span class="line">Synchronizing state of docker.service...</span><br><span class="line">Executing /lib/systemd/systemd-sysv-install <span class="built_in">enable</span> docker</span><br><span class="line">$ systemctl is-enabled docker</span><br><span class="line">enabled</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Network Note</title>
    <url>/2020/06/20/network-note/</url>
    <content><![CDATA[<h1 id="osi-model"><a class="markdownIt-Anchor" href="#osi-model"></a> OSI Model</h1>
<p><img src="/photos/intro-network-note/OSI_model.png" alt="OSI_model" /></p>
<h1 id="protocols"><a class="markdownIt-Anchor" href="#protocols"></a> Protocols</h1>
<h2 id="data-transfer"><a class="markdownIt-Anchor" href="#data-transfer"></a> Data Transfer</h2>
<p><img src="/photos/intro-network-note/http.png" alt="http" /></p>
<h2 id="file-transfer"><a class="markdownIt-Anchor" href="#file-transfer"></a> File Transfer</h2>
<p><img src="/photos/intro-network-note/ftp.png" alt="ftp" /></p>
<h2 id="email"><a class="markdownIt-Anchor" href="#email"></a> Email</h2>
<p><img src="/photos/intro-network-note/email.png" alt="email" /></p>
<h2 id="authentication"><a class="markdownIt-Anchor" href="#authentication"></a> Authentication</h2>
<p><img src="/photos/intro-network-note/auth.png" alt="auth" /></p>
<h2 id="network-service"><a class="markdownIt-Anchor" href="#network-service"></a> Network Service</h2>
<p><img src="/photos/intro-network-note/dhcp.png" alt="dhcp" /></p>
<h2 id="domain-name-systemdns"><a class="markdownIt-Anchor" href="#domain-name-systemdns"></a> Domain Name System(DNS)</h2>
<p><img src="/photos/intro-network-note/dns.png" alt="dns" /></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nslookup google.com <span class="comment"># check google&#x27;s ip</span></span><br><span class="line">$ nslookup </span><br><span class="line">&gt; facebook.com</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nslookup</span><br><span class="line">&gt; server 8.8.8.8 <span class="comment"># config dns server</span></span><br></pre></td></tr></table></figure>
<h2 id="network-time-protocolntp"><a class="markdownIt-Anchor" href="#network-time-protocolntp"></a> Network Time Protocol(NTP)</h2>
<p><img src="/photos/intro-network-note/ntp.png" alt="ntp" /></p>
<h2 id="network-management"><a class="markdownIt-Anchor" href="#network-management"></a> Network Management</h2>
<p><img src="/photos/intro-network-note/ssh_telnet.png" alt="ssh_telnet" /></p>
<p>ssh: encryted; telnet: clear text</p>
<p>ssh used encrypt ftp</p>
<p><img src="/photos/intro-network-note/snmp.png" alt="snmp" /></p>
<p>Walk the tree: server collect information(statistics, log) from client</p>
<p>Trap: client send SNMP trap to server</p>
<h2 id="remote-desktop-protocolrdp"><a class="markdownIt-Anchor" href="#remote-desktop-protocolrdp"></a> Remote Desktop Protocol(RDP)</h2>
<p><img src="/photos/intro-network-note/rdp.png" alt="rdp" /></p>
<h2 id="audiovisual-protocol"><a class="markdownIt-Anchor" href="#audiovisual-protocol"></a> Audio/Visual Protocol</h2>
<p><img src="/photos/intro-network-note/h323.png" alt="h323" /></p>
<p><img src="/photos/intro-network-note/sip.png" alt="sip" /></p>
<p>session initiation protocol: voice over ip communication</p>
<h1 id="tcp-and-udp"><a class="markdownIt-Anchor" href="#tcp-and-udp"></a> TCP and UDP</h1>
<p>TCP: transmission control protocol</p>
<p>UDP: user datagram protocol</p>
<h2 id="tcp"><a class="markdownIt-Anchor" href="#tcp"></a> TCP</h2>
<p>reliable, verifiable(sequence numbers / acknowledge numbers), notion of session</p>
<h3 id="the-3-way-handshake"><a class="markdownIt-Anchor" href="#the-3-way-handshake"></a> The 3-way handshake</h3>
<p><img src="/photos/intro-network-note/3way.png" alt="3way" /></p>
<ol>
<li>SYN: send syn msg, wait for reply from server(change state to SYN-RECEIVED)</li>
<li>SYN-ACK: send msg to client</li>
<li>ACK: client respond to server</li>
</ol>
<p>then session establish between client and server by layer 4 protocol</p>
<p>client or server can ask for missing / additional information from each other</p>
<p>then use layer 7 protocol</p>
<h3 id="the-4-way-disconnect"><a class="markdownIt-Anchor" href="#the-4-way-disconnect"></a> The 4-way Disconnect</h3>
<p><img src="/photos/intro-network-note/4way.png" alt="4way" /></p>
<ol>
<li>FIN: server to client</li>
<li>FIN-ACK: client to server</li>
<li>FIN: client to server</li>
<li>FIN-ACK</li>
</ol>
<p>shutdown the session</p>
<p>RST: tcp reset, server to client, to shutdown quickly</p>
<h2 id="udp"><a class="markdownIt-Anchor" href="#udp"></a> UDP</h2>
<p>no 3-way handshake, no reliable communication, no sequence numbers / acknowledge numbers</p>
<p>very efficient for small data transfer (e.x. DNS)</p>
<p><img src="/photos/intro-network-note/udp.png" alt="udp" /></p>
<h2 id="port-numberstransport-layer-addressing"><a class="markdownIt-Anchor" href="#port-numberstransport-layer-addressing"></a> Port numbers(Transport layer addressing)</h2>
<p><img src="/photos/intro-network-note/port.png" alt="port" /></p>
<h3 id="source-port-and-destination-port"><a class="markdownIt-Anchor" href="#source-port-and-destination-port"></a> Source port and Destination port</h3>
<p><img src="/photos/intro-network-note/src_dstnt.png" alt="src_dstnt" /></p>
<h2 id="application-layer-portocol-dependency"><a class="markdownIt-Anchor" href="#application-layer-portocol-dependency"></a> Application layer portocol dependency</h2>
<p><img src="/photos/intro-network-note/protocol_dependency_1.png" alt="protocol_dependency_1" /></p>
<p><img src="/photos/intro-network-note/protocol_dependency_2.png" alt="protocol_dependency_2" /></p>
<h1 id="ip-addressing"><a class="markdownIt-Anchor" href="#ip-addressing"></a> IP Addressing</h1>
<ul>
<li>
<p>unicast: class A, B, C(public internet), one device to one device</p>
</li>
<li>
<p>multicast: class D(enterprise org’s live video streamming), one device to many devices</p>
</li>
<li>
<p>experimental: class E</p>
</li>
</ul>
<h2 id="class-a"><a class="markdownIt-Anchor" href="#class-a"></a> class A</h2>
<p><img src="/photos/intro-network-note/class_a.png" alt="class_a" /></p>
<h2 id="class-b"><a class="markdownIt-Anchor" href="#class-b"></a> class B</h2>
<p><img src="/photos/intro-network-note/class_b.png" alt="class_b" /></p>
<h2 id="class-c"><a class="markdownIt-Anchor" href="#class-c"></a> class C</h2>
<p><img src="/photos/intro-network-note/class_c.png" alt="class_c" /></p>
<h2 id="class-d"><a class="markdownIt-Anchor" href="#class-d"></a> class D</h2>
<p><img src="/photos/intro-network-note/class_d.png" alt="class_d" /></p>
<h2 id="address-types"><a class="markdownIt-Anchor" href="#address-types"></a> Address types</h2>
<p><img src="/photos/intro-network-note/address_types.png" alt="address_types" /></p>
<h2 id="private-ip-address"><a class="markdownIt-Anchor" href="#private-ip-address"></a> Private ip address</h2>
<p>127.0.0.1: loopback address, localhost</p>
<p><img src="/photos/intro-network-note/private_ip.png" alt="private_ip" /></p>
]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>Regex Note</title>
    <url>/2020/09/05/regex-note/</url>
    <content><![CDATA[<p><img src="/photos/regex-note/reference.png" alt="reference" /></p>
<h1 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h1>
<ul>
<li>email address: <code>[A-Za-z0-9\._+]+@[A-Za-z]+\.(com|org|edu|net)</code></li>
</ul>
]]></content>
      <tags>
        <tag>regex</tag>
      </tags>
  </entry>
  <entry>
    <title>Spark Note</title>
    <url>/2020/07/26/spark-note/</url>
    <content><![CDATA[<h1 id="data-processing"><a class="markdownIt-Anchor" href="#data-processing"></a> Data Processing</h1>
<h2 id="creating-a-sparksession-object"><a class="markdownIt-Anchor" href="#creating-a-sparksession-object"></a> Creating a SparkSession Object</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> SparkSession</span><br><span class="line">spark=SparkSession.builder.appName(<span class="string">&#x27;data_processing&#x27;</span>).getOrCreate()</span><br><span class="line"><span class="keyword">import</span> pyspark.sql.functions <span class="keyword">as</span> F</span><br><span class="line"><span class="keyword">from</span> pyspark.sql.types <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure>
<h2 id="creating-dataframes"><a class="markdownIt-Anchor" href="#creating-dataframes"></a> Creating Dataframes</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">schema=StructType() \</span><br><span class="line">    .add(<span class="string">&quot;user_id&quot;</span>,<span class="string">&quot;string&quot;</span>) \</span><br><span class="line">    .add(<span class="string">&quot;country&quot;</span>,<span class="string">&quot;string&quot;</span>) \</span><br><span class="line">    .add(<span class="string">&quot;browser&quot;</span>, <span class="string">&quot;string&quot;</span>) \</span><br><span class="line">    .add(<span class="string">&quot;OS&quot;</span>,<span class="string">&#x27;string&#x27;</span>) \</span><br><span class="line">    .add(<span class="string">&quot;age&quot;</span>, <span class="string">&quot;integer&quot;</span>)</span><br><span class="line">df=spark.createDataFrame([</span><br><span class="line">    (<span class="string">&quot;A203&quot;</span>,<span class="string">&#x27;India&#x27;</span>,<span class="string">&quot;Chrome&quot;</span>,<span class="string">&quot;WIN&quot;</span>,<span class="number">33</span>),</span><br><span class="line">    (<span class="string">&quot;A201&quot;</span>,<span class="string">&#x27;China&#x27;</span>,<span class="string">&quot;Safari&quot;</span>,<span class="string">&quot;MacOS&quot;</span>,<span class="number">35</span>),</span><br><span class="line">    (<span class="string">&quot;A205&quot;</span>,<span class="string">&#x27;UK&#x27;</span>,<span class="string">&quot;Mozilla&quot;</span>,<span class="string">&quot;Linux&quot;</span>,<span class="number">25</span>)</span><br><span class="line">],schema=schema)</span><br><span class="line">df.printSchema()</span><br><span class="line">df.show()</span><br></pre></td></tr></table></figure>
<h2 id="null-values"><a class="markdownIt-Anchor" href="#null-values"></a> Null Values</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df_na=spark.createDataFrame([</span><br><span class="line">    (<span class="string">&quot;A203&quot;</span>,<span class="literal">None</span>,<span class="string">&quot;Chrome&quot;</span>,<span class="string">&quot;WIN&quot;</span>,<span class="number">33</span>),</span><br><span class="line">    (<span class="string">&quot;A201&quot;</span>,<span class="string">&#x27;China&#x27;</span>,<span class="literal">None</span>,<span class="string">&quot;MacOS&quot;</span>,<span class="number">35</span>),</span><br><span class="line">    (<span class="string">&quot;A205&quot;</span>,<span class="string">&#x27;UK&#x27;</span>,<span class="string">&quot;Mozilla&quot;</span>,<span class="string">&quot;Linux&quot;</span>,<span class="number">25</span>)</span><br><span class="line">],schema=schema)</span><br><span class="line">df_na.show()</span><br><span class="line">df_na.fillna(<span class="string">&#x27;0&#x27;</span>).show()</span><br><span class="line">df_na.fillna( &#123; <span class="string">&#x27;country&#x27;</span>:<span class="string">&#x27;USA&#x27;</span>, <span class="string">&#x27;browser&#x27;</span>:<span class="string">&#x27;Safari&#x27;</span> &#125; ).show()</span><br><span class="line">df_na.na.drop().show() <span class="comment"># dropna row</span></span><br><span class="line">df_na.na.drop(subset=<span class="string">&#x27;country&#x27;</span>).show() <span class="comment"># dropna row for column</span></span><br><span class="line">df_na.replace(<span class="string">&quot;Chrome&quot;</span>,<span class="string">&quot;Google Chrome&quot;</span>).show()</span><br><span class="line">df_na.drop(<span class="string">&#x27;user_id&#x27;</span>).show() <span class="comment"># drop column</span></span><br><span class="line"></span><br><span class="line">df=spark.read.csv(<span class="string">&quot;customer_data.csv&quot;</span>,header=<span class="literal">True</span>,inferSchema=<span class="literal">True</span>)</span><br><span class="line">df.count()</span><br><span class="line"><span class="built_in">len</span>(df.columns)</span><br><span class="line">df.show(<span class="number">3</span>)</span><br><span class="line">df.summary().show() <span class="comment"># describe</span></span><br></pre></td></tr></table></figure>
<h2 id="subset-of-a-dataframe"><a class="markdownIt-Anchor" href="#subset-of-a-dataframe"></a> Subset of a Dataframe</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.select([<span class="string">&#x27;Customer_subtype&#x27;</span>,<span class="string">&#x27;Avg_Salary&#x27;</span>]).show()</span><br><span class="line"></span><br><span class="line">df.<span class="built_in">filter</span>(df[<span class="string">&#x27;Avg_Salary&#x27;</span>] &gt; <span class="number">1000000</span>).count()</span><br><span class="line">df.<span class="built_in">filter</span>(df[<span class="string">&#x27;Avg_Salary&#x27;</span>] &gt; <span class="number">1000000</span>).show()</span><br><span class="line">df.<span class="built_in">filter</span>(df[<span class="string">&#x27;Avg_Salary&#x27;</span>] &gt; <span class="number">500000</span>).<span class="built_in">filter</span>(df[<span class="string">&#x27;Number_of_houses&#x27;</span>] &gt; <span class="number">2</span>).show()</span><br><span class="line"></span><br><span class="line">df.where((df[<span class="string">&#x27;Avg_Salary&#x27;</span>] &gt; <span class="number">500000</span>) &amp; (df[<span class="string">&#x27;Number_of_houses&#x27;</span>] &gt; <span class="number">2</span>)).show()</span><br></pre></td></tr></table></figure>
<h2 id="aggregations"><a class="markdownIt-Anchor" href="#aggregations"></a> Aggregations</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.groupBy(<span class="string">&#x27;Customer_subtype&#x27;</span>).count().show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> col <span class="keyword">in</span> df.columns:</span><br><span class="line">    <span class="keyword">if</span> col !=<span class="string">&#x27;Avg_Salary&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot; Aggregation for <span class="subst">&#123;col&#125;</span>&quot;</span>)</span><br><span class="line">        df.groupBy(col).count().orderBy(<span class="string">&#x27;count&#x27;</span>,ascending=<span class="literal">False</span>).show(truncate=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">df.groupBy(<span class="string">&#x27;Customer_main_type&#x27;</span>).agg(F.mean(<span class="string">&#x27;Avg_Salary&#x27;</span>)).show()</span><br><span class="line">df.groupBy(<span class="string">&#x27;Customer_main_type&#x27;</span>).agg(F.<span class="built_in">max</span>(<span class="string">&#x27;Avg_Salary&#x27;</span>)).show()</span><br><span class="line">df.groupBy(<span class="string">&#x27;Customer_main_type&#x27;</span>).agg(F.<span class="built_in">min</span>(<span class="string">&#x27;Avg_Salary&#x27;</span>)).show()</span><br><span class="line">df.groupBy(<span class="string">&#x27;Customer_main_type&#x27;</span>).agg(F.<span class="built_in">sum</span>(<span class="string">&#x27;Avg_Salary&#x27;</span>)).show()</span><br><span class="line"></span><br><span class="line">df.sort(<span class="string">&quot;Avg_Salary&quot;</span>, ascending=<span class="literal">False</span>).show()</span><br><span class="line"></span><br><span class="line">df.groupBy(<span class="string">&#x27;Customer_subtype&#x27;</span>) \</span><br><span class="line">    .agg(F.avg(<span class="string">&#x27;Avg_Salary&#x27;</span>) \</span><br><span class="line">    .alias(<span class="string">&#x27;mean_salary&#x27;</span>)) \</span><br><span class="line">    .orderBy(<span class="string">&#x27;mean_salary&#x27;</span>,ascending=<span class="literal">False</span>) \</span><br><span class="line">    .show(<span class="number">50</span>,<span class="literal">False</span>)</span><br><span class="line">df.groupBy(<span class="string">&#x27;Customer_subtype&#x27;</span>) \</span><br><span class="line">    .agg(F.<span class="built_in">max</span>(<span class="string">&#x27;Avg_Salary&#x27;</span>) \</span><br><span class="line">    .alias(<span class="string">&#x27;max_salary&#x27;</span>)) \</span><br><span class="line">    .orderBy(<span class="string">&#x27;max_salary&#x27;</span>,ascending=<span class="literal">False</span>) \</span><br><span class="line">    .show()</span><br></pre></td></tr></table></figure>
<h2 id="collect"><a class="markdownIt-Anchor" href="#collect"></a> Collect</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.groupby(<span class="string">&quot;Customer_subtype&quot;</span>) \</span><br><span class="line">    .agg(F.collect_set(<span class="string">&quot;Number_of_houses&quot;</span>)) \</span><br><span class="line">    .show()</span><br><span class="line">df.groupby(<span class="string">&quot;Customer_subtype&quot;</span>) \</span><br><span class="line">    .agg(F.collect_list(<span class="string">&quot;Number_of_houses&quot;</span>)) \</span><br><span class="line">    .show()</span><br><span class="line"></span><br><span class="line">df=df.withColumn(<span class="string">&#x27;constant&#x27;</span>,F.lit(<span class="string">&#x27;finance&#x27;</span>))</span><br><span class="line">df.select(<span class="string">&#x27;Customer_subtype&#x27;</span>,<span class="string">&#x27;constant&#x27;</span>).show()</span><br></pre></td></tr></table></figure>
<h2 id="user-defined-functions-udfs"><a class="markdownIt-Anchor" href="#user-defined-functions-udfs"></a> User-Defined Functions (UDFs)</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql.functions <span class="keyword">import</span> udf</span><br><span class="line">df.groupby(<span class="string">&quot;Avg_age&quot;</span>).count().show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">age_category</span>(<span class="params">age</span>):</span><br><span class="line">    <span class="keyword">if</span> age == <span class="string">&quot;20-30 years&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Young&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> age== <span class="string">&quot;30-40 years&quot;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Mid Aged&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> ((age== <span class="string">&quot;40-50 years&quot;</span>) <span class="keyword">or</span> (age== <span class="string">&quot;50-60 years&quot;</span>)) :</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Old&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Very Old&quot;</span></span><br><span class="line">age_udf=udf(age_category,StringType())</span><br><span class="line">df=df.withColumn(<span class="string">&#x27;age_category&#x27;</span>,age_udf(df[<span class="string">&#x27;Avg_age&#x27;</span>]))</span><br><span class="line">df.select(<span class="string">&#x27;Avg_age&#x27;</span>,<span class="string">&#x27;age_category&#x27;</span>).show()</span><br><span class="line">df.groupby(<span class="string">&quot;age_category&quot;</span>).count().show()</span><br><span class="line"></span><br><span class="line">df.select(<span class="string">&#x27;Avg_Salary&#x27;</span>).summary().show()</span><br><span class="line">min_sal=<span class="number">1361</span></span><br><span class="line">max_sal=<span class="number">48919896</span></span><br><span class="line"><span class="keyword">from</span> pyspark.sql.functions <span class="keyword">import</span> pandas_udf, PandasUDFType</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scaled_salary</span>(<span class="params">salary</span>):</span><br><span class="line">    scaled_sal=(salary-min_sal)/(max_sal-min_sal)</span><br><span class="line">    <span class="keyword">return</span> scaled_sal</span><br><span class="line">scaling_udf = pandas_udf(scaled_salary, DoubleType())</span><br><span class="line">df.withColumn(<span class="string">&quot;scaled_salary&quot;</span>,scaling_udf(df[<span class="string">&#x27;Avg_Salary&#x27;</span>])) \</span><br><span class="line">    .show(<span class="number">10</span>,<span class="literal">False</span>)</span><br></pre></td></tr></table></figure>
<h2 id="joins"><a class="markdownIt-Anchor" href="#joins"></a> Joins</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">region_data = spark.createDataFrame([</span><br><span class="line">    (<span class="string">&#x27;Family with grown ups&#x27;</span>,<span class="string">&#x27;PN&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Driven Growers&#x27;</span>,<span class="string">&#x27;GJ&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Conservative families&#x27;</span>,<span class="string">&#x27;DD&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Cruising Seniors&#x27;</span>,<span class="string">&#x27;DL&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Average Family &#x27;</span>,<span class="string">&#x27;MN&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Living well&#x27;</span>,<span class="string">&#x27;KA&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Successful hedonists&#x27;</span>,<span class="string">&#x27;JH&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Retired and Religious&#x27;</span>,<span class="string">&#x27;AX&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Career Loners&#x27;</span>,<span class="string">&#x27;HY&#x27;</span>),(<span class="string">&#x27;Farmers&#x27;</span>,<span class="string">&#x27;JH&#x27;</span>)</span><br><span class="line">], schema=StructType() \</span><br><span class="line">    .add(<span class="string">&quot;Customer_main_type&quot;</span>,<span class="string">&quot;string&quot;</span>) \</span><br><span class="line">    .add(<span class="string">&quot;Region Code&quot;</span>,<span class="string">&quot;string&quot;</span>))</span><br><span class="line">new_df=df.join(region_data,on=<span class="string">&#x27;Customer_main_type&#x27;</span>)</span><br><span class="line">new_df.groupby(<span class="string">&quot;Region Code&quot;</span>).count().show()</span><br></pre></td></tr></table></figure>
<h2 id="pivoting"><a class="markdownIt-Anchor" href="#pivoting"></a> Pivoting</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df.groupBy(<span class="string">&#x27;Customer_main_type&#x27;</span>) \</span><br><span class="line">    .pivot(<span class="string">&#x27;Avg_age&#x27;</span>) \ </span><br><span class="line">    .<span class="built_in">sum</span>(<span class="string">&#x27;Avg_Salary&#x27;</span>) \</span><br><span class="line">    .fillna(<span class="number">0</span>) \ </span><br><span class="line">    .show()</span><br><span class="line">df.groupBy(<span class="string">&#x27;Customer_main_type&#x27;</span>) \</span><br><span class="line">    .pivot(<span class="string">&#x27;label&#x27;</span>) \</span><br><span class="line">    .<span class="built_in">sum</span>(<span class="string">&#x27;Avg_Salary&#x27;</span>) \</span><br><span class="line">    .fillna(<span class="number">0</span>) \</span><br><span class="line">    .show()</span><br></pre></td></tr></table></figure>
<h2 id="window-functions-or-windowed-aggregates"><a class="markdownIt-Anchor" href="#window-functions-or-windowed-aggregates"></a> Window Functions or Windowed Aggregates</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql.window <span class="keyword">import</span> Window</span><br><span class="line"><span class="keyword">from</span> pyspark.sql.functions <span class="keyword">import</span> col,row_number</span><br><span class="line">win = Window.orderBy(df[<span class="string">&#x27;Avg_Salary&#x27;</span>].desc())</span><br><span class="line">df=df.withColumn(<span class="string">&#x27;rank&#x27;</span>, row_number().over(win).alias(<span class="string">&#x27;rank&#x27;</span>)).show()</span><br><span class="line"></span><br><span class="line">win_1=Window.partitionBy(<span class="string">&quot;Customer_subtype&quot;</span>).orderBy(df[<span class="string">&#x27;Avg_Salary&#x27;</span>].desc())</span><br><span class="line">df=df.withColumn(<span class="string">&#x27;rank&#x27;</span>, row_number().over(win_1).alias(<span class="string">&#x27;rank&#x27;</span>))</span><br><span class="line">df.groupBy(<span class="string">&#x27;rank&#x27;</span>).count().orderBy(<span class="string">&#x27;rank&#x27;</span>).show()</span><br><span class="line">df.<span class="built_in">filter</span>(col(<span class="string">&#x27;rank&#x27;</span>) &lt; <span class="number">4</span>).show()</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>spark</tag>
      </tags>
  </entry>
  <entry>
    <title>Trick Note</title>
    <url>/2020/10/07/trick-note/</url>
    <content><![CDATA[<p>References of some interesting tricks.</p>
<h2 id="show-password-in-web"><a class="markdownIt-Anchor" href="#show-password-in-web"></a> Show password in web</h2>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;input[type=password]&quot;</span>).<span class="property">value</span>;</span><br></pre></td></tr></table></figure>
<h2 id="show-ip-address"><a class="markdownIt-Anchor" href="#show-ip-address"></a> Show IP address</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl ifconfig.me</span><br></pre></td></tr></table></figure>
<h2 id="download-file-and-unzip"><a class="markdownIt-Anchor" href="#download-file-and-unzip"></a> Download file and unzip</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://training.linuxfoundation.org/cm/LFS258/LFS258V2021-09-20SOLUTIONS.tar.xz --user=xxx --password=xxx</span><br><span class="line">tar -xvf LFS258V2021-09-20SOLUTIONS.tar.xz</span><br></pre></td></tr></table></figure>
<h2 id="send-email-from-gmail"><a class="markdownIt-Anchor" href="#send-email-from-gmail"></a> Send email from gmail</h2>
<p>Reference:</p>
<ul>
<li><a href="https://julien.danjou.info/sending-emails-in-python-tutorial-code-examples/">Send email in Python</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/24180606">简单三步，用 Python 发邮件</a></li>
</ul>
<p>Note:</p>
<ul>
<li>Turn on <a href="https://myaccount.google.com/lesssecureapps">Less secure app access</a></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">import</span> ssl</span><br><span class="line"></span><br><span class="line">port = <span class="number">465</span></span><br><span class="line">password = <span class="built_in">input</span>(<span class="string">&quot;your password&quot;</span>)</span><br><span class="line">context = ssl.create_default_context()</span><br><span class="line"></span><br><span class="line">msg = MIMEText(<span class="string">&quot;The body of the email is here&quot;</span>)</span><br><span class="line">msg[<span class="string">&#x27;Subject&#x27;</span>] = <span class="string">&quot;An Email Alert&quot;</span></span><br><span class="line">msg[<span class="string">&#x27;From&#x27;</span>] = <span class="string">&quot;my@gmail.com&quot;</span></span><br><span class="line">msg[<span class="string">&#x27;To&#x27;</span>] = <span class="string">&quot;other@xxx.xxx&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> smtplib.SMTP_SSL(<span class="string">&quot;smtp.gmail.com&quot;</span>, port, context=context) <span class="keyword">as</span> server:</span><br><span class="line">    server.login(<span class="string">&quot;my@gmail.com&quot;</span>, password)</span><br><span class="line">    server.send_message(msg)</span><br></pre></td></tr></table></figure>
<h2 id="check-the-quality-of-a-website"><a class="markdownIt-Anchor" href="#check-the-quality-of-a-website"></a> Check the quality of a website</h2>
<ul>
<li><a href="https://validator.w3.org/">html validator</a></li>
<li><a href="https://jigsaw.w3.org/css-validator/">css validator</a></li>
<li><a href="https://search.google.com/test/mobile-friendly">google’s mobile-friendly test</a></li>
<li><a href="https://tools.pingdom.com/">website speed test</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Sql Note</title>
    <url>/2020/10/12/sql-note/</url>
    <content><![CDATA[<p>This note follows Essential SQLAlchemy 2nd Edition</p>
<p>Github repo: <a href="https://github.com/oreillymedia/essential-sqlalchemy-2e/">https://github.com/oreillymedia/essential-sqlalchemy-2e/</a></p>
<h1 id="sqlalchemy-core"><a class="markdownIt-Anchor" href="#sqlalchemy-core"></a> SQLAlchemy Core</h1>
<h2 id="create-schema"><a class="markdownIt-Anchor" href="#create-schema"></a> Create Schema</h2>
<p><img src="/photos/sql-note/Relationship-visualization.png" alt="Relationship-visualization" /></p>
<p>Full in-memory SQLite code sample</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> (MetaData, Table, Column, Integer, Numeric, String, DateTime, ForeignKey, create_engine)</span><br><span class="line"></span><br><span class="line">metadata = MetaData()</span><br><span class="line">cookies = Table(<span class="string">&#x27;cookies&#x27;</span>, metadata,</span><br><span class="line">    Column(<span class="string">&#x27;cookie_id&#x27;</span>, Integer(), primary_key=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;cookie_name&#x27;</span>, String(<span class="number">50</span>), index=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;cookie_recipe_url&#x27;</span>, String(<span class="number">255</span>)),</span><br><span class="line">    Column(<span class="string">&#x27;cookie_sku&#x27;</span>, String(<span class="number">55</span>)),</span><br><span class="line">    Column(<span class="string">&#x27;quantity&#x27;</span>, Integer()),</span><br><span class="line">    Column(<span class="string">&#x27;unit_cost&#x27;</span>, Numeric(<span class="number">12</span>, <span class="number">2</span>))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">users = Table(<span class="string">&#x27;users&#x27;</span>, metadata,</span><br><span class="line">    Column(<span class="string">&#x27;user_id&#x27;</span>, Integer(), primary_key=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;customer_number&#x27;</span>, Integer(), autoincrement=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;username&#x27;</span>, String(<span class="number">15</span>), nullable=<span class="literal">False</span>, unique=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;email_address&#x27;</span>, String(<span class="number">255</span>), nullable=<span class="literal">False</span>),</span><br><span class="line">    Column(<span class="string">&#x27;phone&#x27;</span>, String(<span class="number">20</span>), nullable=<span class="literal">False</span>),</span><br><span class="line">    Column(<span class="string">&#x27;password&#x27;</span>, String(<span class="number">25</span>), nullable=<span class="literal">False</span>),</span><br><span class="line">    Column(<span class="string">&#x27;created_on&#x27;</span>, DateTime(), default=datetime.now),</span><br><span class="line">    Column(<span class="string">&#x27;updated_on&#x27;</span>, DateTime(), default=datetime.now, onupdate=datetime.now)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">orders = Table(<span class="string">&#x27;orders&#x27;</span>, metadata,</span><br><span class="line">    Column(<span class="string">&#x27;order_id&#x27;</span>, Integer(), primary_key=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;user_id&#x27;</span>, ForeignKey(<span class="string">&#x27;users.user_id&#x27;</span>))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">line_items = Table(<span class="string">&#x27;line_items&#x27;</span>, metadata,</span><br><span class="line">    Column(<span class="string">&#x27;line_items_id&#x27;</span>, Integer(), primary_key=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;order_id&#x27;</span>, ForeignKey(<span class="string">&#x27;orders.order_id&#x27;</span>)),</span><br><span class="line">    Column(<span class="string">&#x27;cookie_id&#x27;</span>, ForeignKey(<span class="string">&#x27;cookies.cookie_id&#x27;</span>)),</span><br><span class="line">    Column(<span class="string">&#x27;quantity&#x27;</span>, Integer()),</span><br><span class="line">    Column(<span class="string">&#x27;extended_cost&#x27;</span>, Numeric(<span class="number">12</span>, <span class="number">2</span>))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">engine = create_engine(<span class="string">&#x27;sqlite:///:memory:&#x27;</span>)</span><br><span class="line">metadata.create_all(engine)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> (MetaData, Table, Column, Integer, Numeric, String, DateTime, ForeignKey, Boolean, create_engine, CheckConstraint)</span><br><span class="line">metadata = MetaData()</span><br><span class="line"></span><br><span class="line">cookies = Table(<span class="string">&#x27;cookies&#x27;</span>, metadata,</span><br><span class="line">    Column(<span class="string">&#x27;cookie_id&#x27;</span>, Integer(), primary_key=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;cookie_name&#x27;</span>, String(<span class="number">50</span>), index=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;cookie_recipe_url&#x27;</span>, String(<span class="number">255</span>)),</span><br><span class="line">    Column(<span class="string">&#x27;cookie_sku&#x27;</span>, String(<span class="number">55</span>)),</span><br><span class="line">    Column(<span class="string">&#x27;quantity&#x27;</span>, Integer()),</span><br><span class="line">    Column(<span class="string">&#x27;unit_cost&#x27;</span>, Numeric(<span class="number">12</span>, <span class="number">2</span>)),</span><br><span class="line">    CheckConstraint(<span class="string">&#x27;quantity &gt;= 0&#x27;</span>, name=<span class="string">&#x27;quantity_positive&#x27;</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">users = Table(<span class="string">&#x27;users&#x27;</span>, metadata,</span><br><span class="line">    Column(<span class="string">&#x27;user_id&#x27;</span>, Integer(), primary_key=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;username&#x27;</span>, String(<span class="number">15</span>), nullable=<span class="literal">False</span>, unique=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;email_address&#x27;</span>, String(<span class="number">255</span>), nullable=<span class="literal">False</span>),</span><br><span class="line">    Column(<span class="string">&#x27;phone&#x27;</span>, String(<span class="number">20</span>), nullable=<span class="literal">False</span>),</span><br><span class="line">    Column(<span class="string">&#x27;password&#x27;</span>, String(<span class="number">25</span>), nullable=<span class="literal">False</span>),</span><br><span class="line">    Column(<span class="string">&#x27;created_on&#x27;</span>, DateTime(), default=datetime.now),</span><br><span class="line">    Column(<span class="string">&#x27;updated_on&#x27;</span>, DateTime(), default=datetime.now, onupdate=datetime.now)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">orders = Table(<span class="string">&#x27;orders&#x27;</span>, metadata,</span><br><span class="line">    Column(<span class="string">&#x27;order_id&#x27;</span>, Integer()),</span><br><span class="line">    Column(<span class="string">&#x27;user_id&#x27;</span>, ForeignKey(<span class="string">&#x27;users.user_id&#x27;</span>)),</span><br><span class="line">    Column(<span class="string">&#x27;shipped&#x27;</span>, Boolean(), default=<span class="literal">False</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">line_items = Table(<span class="string">&#x27;line_items&#x27;</span>, metadata,</span><br><span class="line">    Column(<span class="string">&#x27;line_items_id&#x27;</span>, Integer(), primary_key=<span class="literal">True</span>),</span><br><span class="line">    Column(<span class="string">&#x27;order_id&#x27;</span>, ForeignKey(<span class="string">&#x27;orders.order_id&#x27;</span>)),</span><br><span class="line">    Column(<span class="string">&#x27;cookie_id&#x27;</span>, ForeignKey(<span class="string">&#x27;cookies.cookie_id&#x27;</span>)),</span><br><span class="line">    Column(<span class="string">&#x27;quantity&#x27;</span>, Integer()),</span><br><span class="line">    Column(<span class="string">&#x27;extended_cost&#x27;</span>, Numeric(<span class="number">12</span>, <span class="number">2</span>))</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">engine = create_engine(<span class="string">&#x27;sqlite:///:memory:&#x27;</span>)</span><br><span class="line">metadata.create_all(engine)</span><br><span class="line">connection = engine.connect()</span><br></pre></td></tr></table></figure>
<h2 id="data-operation"><a class="markdownIt-Anchor" href="#data-operation"></a> Data Operation</h2>
<h3 id="insert"><a class="markdownIt-Anchor" href="#insert"></a> Insert</h3>
<p>Way1:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ins = cookies.insert().values(</span><br><span class="line">    cookie_name=<span class="string">&quot;chocolate chip&quot;</span>,</span><br><span class="line">    cookie_recipe_url=<span class="string">&quot;http://some.aweso.me/cookie/recipe.html&quot;</span>,</span><br><span class="line">    cookie_sku=<span class="string">&quot;CC01&quot;</span>,</span><br><span class="line">    quantity=<span class="string">&quot;12&quot;</span>,</span><br><span class="line">    unit_cost=<span class="string">&quot;0.50&quot;</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># str(ins)</span></span><br><span class="line">result = connection.execute(ins)</span><br><span class="line"><span class="comment"># result.inserted_primary_key</span></span><br></pre></td></tr></table></figure>
<p>Way2:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> insert</span><br><span class="line">ins = insert(cookies).values(</span><br><span class="line">    cookie_name=<span class="string">&quot;chocolate chip&quot;</span>,</span><br><span class="line">    cookie_recipe_url=<span class="string">&quot;http://some.aweso.me/cookie/recipe.html&quot;</span>,</span><br><span class="line">    cookie_sku=<span class="string">&quot;CC01&quot;</span>,</span><br><span class="line">    quantity=<span class="string">&quot;12&quot;</span>,</span><br><span class="line">    unit_cost=<span class="string">&quot;0.50&quot;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>Way3:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ins = cookies.insert()</span><br><span class="line">result = connection.execute(</span><br><span class="line">    ins,</span><br><span class="line">    cookie_name=<span class="string">&#x27;dark chocolate chip&#x27;</span>,</span><br><span class="line">    cookie_recipe_url=<span class="string">&#x27;http://some.aweso.me/cookie/recipe_dark.html&#x27;</span>,</span><br><span class="line">    cookie_sku=<span class="string">&#x27;CC02&#x27;</span>,</span><br><span class="line">    quantity=<span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    unit_cost=<span class="string">&#x27;0.75&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>Multiple:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">inventory_list = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;cookie_name&#x27;</span>: <span class="string">&#x27;peanut butter&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie_recipe_url&#x27;</span>: <span class="string">&#x27;http://some.aweso.me/cookie/peanut.html&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie_sku&#x27;</span>: <span class="string">&#x27;PB01&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;quantity&#x27;</span>: <span class="string">&#x27;24&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;unit_cost&#x27;</span>: <span class="string">&#x27;0.25&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;cookie_name&#x27;</span>: <span class="string">&#x27;oatmeal raisin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie_recipe_url&#x27;</span>: <span class="string">&#x27;http://some.okay.me/cookie/raisin.html&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie_sku&#x27;</span>: <span class="string">&#x27;EWW01&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;quantity&#x27;</span>: <span class="string">&#x27;100&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;unit_cost&#x27;</span>: <span class="string">&#x27;1.00&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">result = connection.execute(ins, inventory_list)</span><br></pre></td></tr></table></figure>
<h3 id="select"><a class="markdownIt-Anchor" href="#select"></a> Select</h3>
<p>Way1:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy.sql <span class="keyword">import</span> select</span><br><span class="line">s = select([cookies])</span><br><span class="line"><span class="comment"># str(s)</span></span><br><span class="line">rp = connection.execute(s)</span><br><span class="line">results = rp.fetchall()</span><br></pre></td></tr></table></figure>
<p>Way2:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = cookies.select()</span><br><span class="line">rp = connection.execute(s)</span><br><span class="line"><span class="keyword">for</span> record <span class="keyword">in</span> rp:</span><br><span class="line">    <span class="built_in">print</span>(record.cookie_name)</span><br></pre></td></tr></table></figure>
<p>Sepcify columns, order by, limit, cast:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> cast</span><br><span class="line"></span><br><span class="line">s = select([cookies.c.cookie_name, cookies.c.quantity, <span class="string">&#x27;SKU-&#x27;</span> + cookies.c.cookie_sku,</span><br><span class="line">cast((cookies.c.quantity * cookies.c.unit_cost), Numeric(<span class="number">12</span>,<span class="number">2</span>)).label(<span class="string">&#x27;inv_cost&#x27;</span>)]])</span><br><span class="line">s = s.order_by(desc(cookies.c.quantity), cookies.c.cookie_name)</span><br><span class="line">s = s.limit(<span class="number">2</span>) <span class="comment"># Also by, s = cookies.select(limit=1)</span></span><br><span class="line">rp = connection.execute(s)</span><br><span class="line"><span class="comment"># rp.keys()</span></span><br><span class="line"><span class="keyword">for</span> cookie <span class="keyword">in</span> rp:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; - &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(cookie.quantity, cookie.cookie_name))</span><br></pre></td></tr></table></figure>
<p>Aggregate:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy.sql <span class="keyword">import</span> func</span><br><span class="line"></span><br><span class="line">s = select([func.count(cookies.c.cookie_name).label(<span class="string">&#x27;inventory_count&#x27;</span>)])</span><br><span class="line">rp = connection.execute(s)</span><br><span class="line">record = rp.first()</span><br><span class="line"><span class="comment"># record.keys()</span></span><br><span class="line"><span class="comment"># record.inventory_count</span></span><br></pre></td></tr></table></figure>
<p>Filter(Where):</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = select([cookies]).where(cookies.c.cookie_name == <span class="string">&#x27;chocolate chip&#x27;</span>)</span><br><span class="line">rp = connection.execute(s)</span><br><span class="line">record = rp.first()</span><br><span class="line"><span class="comment"># record.items()</span></span><br><span class="line"></span><br><span class="line">s = select([cookies]).where(cookies.c.cookie_name.like(<span class="string">&#x27;%chocolate%&#x27;</span>)).where(cookies.c.quantity == <span class="number">12</span>)</span><br><span class="line"><span class="comment"># str(s)</span></span><br><span class="line">rp = connection.execute(s)</span><br><span class="line"><span class="keyword">for</span> record <span class="keyword">in</span> rp.fetchall():</span><br><span class="line">    <span class="built_in">print</span>(record.cookie_name)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> and_, or_, not_</span><br><span class="line">s = select([cookies]).where(or_(</span><br><span class="line">    cookies.c.quantity.between(<span class="number">10</span>, <span class="number">50</span>),</span><br><span class="line">    cookies.c.cookie_name.contains(<span class="string">&#x27;chip&#x27;</span>)</span><br><span class="line">))</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> connection.execute(s):</span><br><span class="line">    <span class="built_in">print</span>(row.cookie_name)</span><br></pre></td></tr></table></figure>
<h3 id="update"><a class="markdownIt-Anchor" href="#update"></a> Update</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> update</span><br><span class="line">u = update(cookies).where(cookies.c.cookie_name == <span class="string">&quot;chocolate chip&quot;</span>)</span><br><span class="line">u = u.values(quantity=(cookies.c.quantity + <span class="number">120</span>))</span><br><span class="line">result = connection.execute(u)</span><br><span class="line"><span class="built_in">print</span>(result.rowcount)</span><br></pre></td></tr></table></figure>
<h3 id="delete"><a class="markdownIt-Anchor" href="#delete"></a> Delete</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> delete</span><br><span class="line">u = delete(cookies).where(cookies.c.cookie_name == <span class="string">&quot;dark chocolate chip&quot;</span>)</span><br><span class="line">result = connection.execute(u)</span><br><span class="line"><span class="built_in">print</span>(result.rowcount)</span><br></pre></td></tr></table></figure>
<h3 id="join"><a class="markdownIt-Anchor" href="#join"></a> Join</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">columns = [orders.c.order_id, users.c.username, users.c.phone, cookies.c.cookie_name, line_items.c.quantity, line_items.c.extended_cost]</span><br><span class="line">cookiemon_orders = select(columns)</span><br><span class="line">cookiemon_orders = cookiemon_orders.select_from(users.join(orders).join(line_items).join(cookies)).where(users.c.username == <span class="string">&#x27;cookiemon&#x27;</span>)</span><br><span class="line">result = connection.execute(cookiemon_orders).fetchall()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> result:</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br></pre></td></tr></table></figure>
<p>outerjoin:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">columns = [users.c.username, orders.c.order_id]</span><br><span class="line">all_orders = select(columns)</span><br><span class="line">all_orders = all_orders.select_from(users.outerjoin(orders))</span><br><span class="line">result = connection.execute(all_orders).fetchall()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> result:</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br></pre></td></tr></table></figure>
<h3 id="alias"><a class="markdownIt-Anchor" href="#alias"></a> Alias</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">manager = employee_table.alias()</span><br><span class="line">stmt = select([employee_table.c.name], and_(employee_table.c.manager_id==manager.c.<span class="built_in">id</span>, manager.c.name==<span class="string">&#x27;Fred&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(stmt)</span><br></pre></td></tr></table></figure>
<h3 id="groupby"><a class="markdownIt-Anchor" href="#groupby"></a> Groupby</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">columns = [users.c.username, func.count(orders.c.order_id)]</span><br><span class="line">all_orders = select(columns)</span><br><span class="line">all_orders = all_orders.select_from(users.outerjoin(orders)).group_by(users.c.username)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(all_orders))</span><br><span class="line">result = connection.execute(all_orders).fetchall()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> result:</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br></pre></td></tr></table></figure>
<h3 id="raw-queries"><a class="markdownIt-Anchor" href="#raw-queries"></a> Raw Queries</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">result = connection.execute(<span class="string">&quot;select * from orders&quot;</span>).fetchall()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> text</span><br><span class="line">stmt = select([users]).where(text(<span class="string">&#x27;username=&quot;cookiemon&quot;&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(connection.execute(stmt).fetchall())</span><br></pre></td></tr></table></figure>
<h2 id="exception-and-transaction"><a class="markdownIt-Anchor" href="#exception-and-transaction"></a> Exception and Transaction</h2>
<p>Transaction Example:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use second schema</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select, insert, update</span><br><span class="line">ins = insert(users).values(</span><br><span class="line">    username=<span class="string">&quot;cookiemon&quot;</span>,</span><br><span class="line">    email_address=<span class="string">&quot;mon@cookie.com&quot;</span>,</span><br><span class="line">    phone=<span class="string">&quot;111-111-1111&quot;</span>,</span><br><span class="line">    password=<span class="string">&quot;password&quot;</span></span><br><span class="line">)</span><br><span class="line">result = connection.execute(ins)</span><br><span class="line"></span><br><span class="line">ins = cookies.insert()</span><br><span class="line">inventory_list = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;cookie_name&#x27;</span>: <span class="string">&#x27;chocolate chip&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie_recipe_url&#x27;</span>: <span class="string">&#x27;http://some.aweso.me/cookie/recipe.html&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie_sku&#x27;</span>: <span class="string">&#x27;CC01&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;quantity&#x27;</span>: <span class="string">&#x27;12&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;unit_cost&#x27;</span>: <span class="string">&#x27;0.50&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;cookie_name&#x27;</span>: <span class="string">&#x27;dark chocolate chip&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie_recipe_url&#x27;</span>: <span class="string">&#x27;http://some.aweso.me/cookie/recipe_dark.html&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cookie_sku&#x27;</span>: <span class="string">&#x27;CC02&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;quantity&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;unit_cost&#x27;</span>: <span class="string">&#x27;0.75&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">result = connection.execute(ins, inventory_list)</span><br><span class="line"></span><br><span class="line">ins = insert(orders).values(user_id=<span class="number">1</span>, order_id=<span class="number">1</span>)</span><br><span class="line">result = connection.execute(ins)</span><br><span class="line">ins = insert(line_items)</span><br><span class="line">order_items = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;order_id&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;cookie_id&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;quantity&#x27;</span>: <span class="number">9</span>,</span><br><span class="line">        <span class="string">&#x27;extended_cost&#x27;</span>: <span class="number">4.50</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">result = connection.execute(ins, order_items)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ins = insert(orders).values(user_id=<span class="number">1</span>, order_id=<span class="number">2</span>)</span><br><span class="line">result = connection.execute(ins)</span><br><span class="line">ins = insert(line_items)</span><br><span class="line">order_items = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;order_id&#x27;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">&#x27;cookie_id&#x27;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">&#x27;quantity&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;extended_cost&#x27;</span>: <span class="number">1.50</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&#x27;order_id&#x27;</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">&#x27;cookie_id&#x27;</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;quantity&#x27;</span>: <span class="number">4</span>,</span><br><span class="line">        <span class="string">&#x27;extended_cost&#x27;</span>: <span class="number">4.50</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line">result = connection.execute(ins, order_items)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ship_it</span>(<span class="params">order_id</span>):</span><br><span class="line"></span><br><span class="line">    s = select([line_items.c.cookie_id, line_items.c.quantity])</span><br><span class="line">    s = s.where(line_items.c.order_id == order_id)</span><br><span class="line">    cookies_to_ship = connection.execute(s)</span><br><span class="line">    <span class="keyword">for</span> cookie <span class="keyword">in</span> cookies_to_ship:</span><br><span class="line">        u = update(cookies).where(cookies.c.cookie_id == cookie.cookie_id)</span><br><span class="line">        u = u.values(quantity = cookies.c.quantity - cookie.quantity)</span><br><span class="line">        result = connection.execute(u)</span><br><span class="line">    u = update(orders).where(orders.c.order_id == order_id)</span><br><span class="line">    u = u.values(shipped=<span class="literal">True</span>)</span><br><span class="line">    result = connection.execute(u)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Shipped order ID: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(order_id))</span><br><span class="line"></span><br><span class="line">ship_it(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">s = select([cookies.c.cookie_name, cookies.c.quantity])</span><br><span class="line">connection.execute(s).fetchall()</span><br><span class="line"></span><br><span class="line">ship_it(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">u = update(cookies).where(cookies.c.cookie_name == <span class="string">&quot;dark chocolate chip&quot;</span>)</span><br><span class="line">u = u.values(quantity = <span class="number">1</span>)</span><br><span class="line">result = connection.execute(u)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.exc <span class="keyword">import</span> IntegrityError</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ship_it</span>(<span class="params">order_id</span>):</span><br><span class="line">    s = select([line_items.c.cookie_id, line_items.c.quantity])</span><br><span class="line">    s = s.where(line_items.c.order_id == order_id)</span><br><span class="line">    transaction = connection.begin()</span><br><span class="line">    cookies_to_ship = connection.execute(s).fetchall()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">for</span> cookie <span class="keyword">in</span> cookies_to_ship:</span><br><span class="line">            u = update(cookies).where(cookies.c.cookie_id == cookie.cookie_id)</span><br><span class="line">            u = u.values(quantity = cookies.c.quantity-cookie.quantity)</span><br><span class="line">            result = connection.execute(u)</span><br><span class="line">        u = update(orders).where(orders.c.order_id == order_id)</span><br><span class="line">        u = u.values(shipped=<span class="literal">True</span>)</span><br><span class="line">        result = connection.execute(u)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Shipped order ID: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(order_id))</span><br><span class="line">        transaction.commit()</span><br><span class="line">    <span class="keyword">except</span> IntegrityError <span class="keyword">as</span> error:</span><br><span class="line">        transaction.rollback()</span><br><span class="line">        <span class="built_in">print</span>(error)</span><br><span class="line">ship_it(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">s = select([cookies.c.cookie_name, cookies.c.quantity])</span><br><span class="line">connection.execute(s).fetchall()</span><br></pre></td></tr></table></figure>
<h2 id="reflection"><a class="markdownIt-Anchor" href="#reflection"></a> Reflection</h2>
<h3 id="reflecting-individual-tables"><a class="markdownIt-Anchor" href="#reflecting-individual-tables"></a> Reflecting Individual Tables</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> MetaData, Table, create_engine</span><br><span class="line">metadata = MetaData()</span><br><span class="line">engine = create_engine(<span class="string">&#x27;sqlite:///Chinook_Sqlite.sqlite&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">artist = Table(<span class="string">&#x27;artist&#x27;</span>, metadata, autoload=<span class="literal">True</span>, autoload_with=engine)</span><br><span class="line">album = Table(<span class="string">&#x27;album&#x27;</span>, metadata, autoload=<span class="literal">True</span>, autoload_with=engine)</span><br><span class="line"></span><br><span class="line">artist.columns.keys()</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line">s = select([artist]).limit(<span class="number">10</span>)</span><br><span class="line">engine.execute(s).fetchall()</span><br><span class="line"></span><br><span class="line">album.foreign_keys</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> ForeignKeyConstraint</span><br><span class="line">album.append_constraint(</span><br><span class="line">    ForeignKeyConstraint([<span class="string">&#x27;ArtistId&#x27;</span>], [<span class="string">&#x27;artist.ArtistId&#x27;</span>])</span><br><span class="line">)</span><br><span class="line">metadata.tables[<span class="string">&#x27;album&#x27;</span>]</span><br><span class="line"><span class="built_in">str</span>(artist.join(album))</span><br></pre></td></tr></table></figure>
<h3 id="reflecting-a-whole-database"><a class="markdownIt-Anchor" href="#reflecting-a-whole-database"></a> Reflecting a Whole Database</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">metadata.reflect(bind=engine)</span><br><span class="line"></span><br><span class="line">metadata.tables.keys()</span><br><span class="line"></span><br><span class="line">playlist = metadata.tables[<span class="string">&#x27;Playlist&#x27;</span>]</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> select</span><br><span class="line">s = select([playlist]).limit(<span class="number">10</span>)</span><br><span class="line">engine.execute(s).fetchall()</span><br></pre></td></tr></table></figure>
<h1 id="sqlalchemy-orm"><a class="markdownIt-Anchor" href="#sqlalchemy-orm"></a> SQLAlchemy ORM</h1>
<h2 id="defining-tables-via-orm-classes"><a class="markdownIt-Anchor" href="#defining-tables-via-orm-classes"></a> Defining Tables via ORM Classes</h2>
<h3 id="sql_orm_setup"><a class="markdownIt-Anchor" href="#sql_orm_setup"></a> sql_orm_setup</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.ext.declarative <span class="keyword">import</span> declarative_base</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Table, Column, Integer, Numeric, String, Boolean, DateTime, ForeignKey</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> relationship, backref</span><br><span class="line"></span><br><span class="line">Base = declarative_base()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cookie</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;cookies&#x27;</span></span><br><span class="line"></span><br><span class="line">    cookie_id = Column(Integer(), primary_key=<span class="literal">True</span>, )</span><br><span class="line">    cookie_name = Column(String(<span class="number">50</span>), index=<span class="literal">True</span>)</span><br><span class="line">    cookie_recipe_url = Column(String(<span class="number">255</span>))</span><br><span class="line">    cookie_sku = Column(String(<span class="number">55</span>))</span><br><span class="line">    quantity = Column(Integer())</span><br><span class="line">    unit_cost = Column(Numeric(<span class="number">12</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Cookie(cookie_name=&#x27;&#123;self.cookie_name&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;cookie_recipe_url=&#x27;&#123;self.cookie_recipe_url&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;cookie_sku=&#x27;&#123;self.cookie_sku&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;quantity=&#123;self.quantity&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;unit_cost=&#123;self.unit_cost&#125;)&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;users&#x27;</span></span><br><span class="line"></span><br><span class="line">    user_id = Column(Integer(), primary_key=<span class="literal">True</span>)</span><br><span class="line">    username = Column(String(<span class="number">15</span>), nullable=<span class="literal">False</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    email_address = Column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    phone = Column(String(<span class="number">20</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password = Column(String(<span class="number">25</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    created_on = Column(DateTime(), default=datetime.now)</span><br><span class="line">    updated_on = Column(DateTime(), default=datetime.now,</span><br><span class="line">                        onupdate=datetime.now)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User(username=&#x27;&#123;self.username&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;email_address=&#x27;&#123;self.email_address&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;phone=&#x27;&#123;self.phone&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;password=&#x27;&#123;self.password&#125;&#x27;)&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Order</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;orders&#x27;</span></span><br><span class="line">    order_id = Column(Integer(), primary_key=<span class="literal">True</span>)</span><br><span class="line">    user_id = Column(Integer(), ForeignKey(<span class="string">&#x27;users.user_id&#x27;</span>))</span><br><span class="line">    shipped = Column(Boolean(), default=<span class="literal">False</span>)</span><br><span class="line">    user = relationship(<span class="string">&quot;User&quot;</span>, backref=backref(</span><br><span class="line">        <span class="string">&#x27;orders&#x27;</span>, order_by=order_id))  <span class="comment"># one-to-many relationship</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Order(user_id=&#123;self.user_id&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;shipped=&#123;self.shipped&#125;)&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LineItem</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;line_items&#x27;</span></span><br><span class="line">    line_items_id = Column(Integer(), primary_key=<span class="literal">True</span>)</span><br><span class="line">    order_id = Column(Integer(), ForeignKey(<span class="string">&#x27;orders.order_id&#x27;</span>))</span><br><span class="line">    cookie_id = Column(Integer(), ForeignKey(<span class="string">&#x27;cookies.cookie_id&#x27;</span>))</span><br><span class="line">    quantity = Column(Integer())</span><br><span class="line">    extended_cost = Column(Numeric(<span class="number">12</span>, <span class="number">2</span>))</span><br><span class="line">    order = relationship(<span class="string">&quot;Order&quot;</span>, backref=backref(</span><br><span class="line">        <span class="string">&#x27;line_items&#x27;</span>, order_by=line_items_id))</span><br><span class="line">    cookie = relationship(<span class="string">&quot;Cookie&quot;</span>, uselist=<span class="literal">False</span>)  <span class="comment"># one-to-one relationship</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;LineItems(order_id=&#123;self.order_id&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;cookie_id=&#123;self.cookie_id&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;quantity=&#123;self.quantity&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;extended_cost=&#123;self.extended_cost&#125;)&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                <span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">engine = create_engine(<span class="string">&#x27;sqlite:///sql_orm_setup.sqlite&#x27;</span>, echo=<span class="literal">True</span>)</span><br><span class="line">Base.metadata.create_all(engine)</span><br></pre></td></tr></table></figure>
<h3 id="sql_orm_setup_cons"><a class="markdownIt-Anchor" href="#sql_orm_setup_cons"></a> sql_orm_setup_cons</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> relationship, backref</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.ext.declarative <span class="keyword">import</span> declarative_base</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> Table, Column, Integer, Numeric, String, DateTime, ForeignKey, Boolean, CheckConstraint</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker</span><br><span class="line"></span><br><span class="line">dbname = os.path.basename(__file__).replace(<span class="string">&#x27;.py&#x27;</span>, <span class="string">&#x27;.sqlite&#x27;</span>)</span><br><span class="line">engine = create_engine(<span class="string">&#x27;sqlite:///&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(dbname), echo=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">Session = sessionmaker(bind=engine)</span><br><span class="line"></span><br><span class="line">session = Session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Base = declarative_base()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cookie</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;cookies&#x27;</span></span><br><span class="line">    __table_args__ = (CheckConstraint(</span><br><span class="line">        <span class="string">&#x27;quantity &gt;= 0&#x27;</span>, name=<span class="string">&#x27;quantity_positive&#x27;</span>),)</span><br><span class="line"></span><br><span class="line">    cookie_id = Column(Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    cookie_name = Column(String(<span class="number">50</span>), index=<span class="literal">True</span>)</span><br><span class="line">    cookie_recipe_url = Column(String(<span class="number">255</span>))</span><br><span class="line">    cookie_sku = Column(String(<span class="number">55</span>))</span><br><span class="line">    quantity = Column(Integer())</span><br><span class="line">    unit_cost = Column(Numeric(<span class="number">12</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, recipe_url=<span class="literal">None</span>, sku=<span class="literal">None</span>, quantity=<span class="number">0</span>, unit_cost=<span class="number">0.00</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.cookie_name = name</span><br><span class="line">        <span class="variable language_">self</span>.cookie_recipe_url = recipe_url</span><br><span class="line">        <span class="variable language_">self</span>.cookie_sku = sku</span><br><span class="line">        <span class="variable language_">self</span>.quantity = quantity</span><br><span class="line">        <span class="variable language_">self</span>.unit_cost = unit_cost</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Cookie(cookie_name=&#x27;&#123;self.cookie_name&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;cookie_recipe_url=&#x27;&#123;self.cookie_recipe_url&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;cookie_sku=&#x27;&#123;self.cookie_sku&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;quantity=&#123;self.quantity&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;unit_cost=&#123;self.unit_cost&#125;)&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;users&#x27;</span></span><br><span class="line"></span><br><span class="line">    user_id = Column(Integer(), primary_key=<span class="literal">True</span>)</span><br><span class="line">    username = Column(String(<span class="number">15</span>), nullable=<span class="literal">False</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    email_address = Column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    phone = Column(String(<span class="number">20</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password = Column(String(<span class="number">25</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    created_on = Column(DateTime(), default=datetime.now)</span><br><span class="line">    updated_on = Column(DateTime(), default=datetime.now,</span><br><span class="line">                        onupdate=datetime.now)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, username, email_address, phone, password</span>):</span><br><span class="line">        <span class="variable language_">self</span>.username = username</span><br><span class="line">        <span class="variable language_">self</span>.email_address = email_address</span><br><span class="line">        <span class="variable language_">self</span>.phone = phone</span><br><span class="line">        <span class="variable language_">self</span>.password = password</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User(username=&#x27;&#123;self.username&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;email_address=&#x27;&#123;self.email_address&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;phone=&#x27;&#123;self.phone&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;password=&#x27;&#123;self.password&#125;&#x27;)&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Order</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;orders&#x27;</span></span><br><span class="line">    order_id = Column(Integer(), primary_key=<span class="literal">True</span>)</span><br><span class="line">    user_id = Column(Integer(), ForeignKey(<span class="string">&#x27;users.user_id&#x27;</span>))</span><br><span class="line">    shipped = Column(Boolean(), default=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    user = relationship(<span class="string">&quot;User&quot;</span>, backref=backref(<span class="string">&#x27;orders&#x27;</span>, order_by=order_id))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Order(user_id=&#123;self.user_id&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;shipped=&#123;self.shipped&#125;)&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LineItem</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;line_items&#x27;</span></span><br><span class="line">    line_item_id = Column(Integer(), primary_key=<span class="literal">True</span>)</span><br><span class="line">    order_id = Column(Integer(), ForeignKey(<span class="string">&#x27;orders.order_id&#x27;</span>))</span><br><span class="line">    cookie_id = Column(Integer(), ForeignKey(<span class="string">&#x27;cookies.cookie_id&#x27;</span>))</span><br><span class="line">    quantity = Column(Integer())</span><br><span class="line">    extended_cost = Column(Numeric(<span class="number">12</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    order = relationship(<span class="string">&quot;Order&quot;</span>, backref=backref(</span><br><span class="line">        <span class="string">&#x27;line_items&#x27;</span>, order_by=line_item_id))</span><br><span class="line">    cookie = relationship(<span class="string">&quot;Cookie&quot;</span>, uselist=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;LineItems(order_id=&#123;self.order_id&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;cookie_id=&#123;self.cookie_id&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;quantity=&#123;self.quantity&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;extended_cost=&#123;self.extended_cost&#125;)&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                <span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Base.metadata.create_all(engine)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cookiemon = User(<span class="string">&#x27;cookiemon&#x27;</span>, <span class="string">&#x27;mon@cookie.com&#x27;</span>, <span class="string">&#x27;111-111-1111&#x27;</span>, <span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">cc = Cookie(<span class="string">&#x27;chocolate chip&#x27;</span>, <span class="string">&#x27;http://some.aweso.me/cookie/recipe.html&#x27;</span>, <span class="string">&#x27;CC01&#x27;</span>, <span class="number">12</span>, <span class="number">0.50</span>)</span><br><span class="line">dcc = Cookie(<span class="string">&#x27;dark chocolate chip&#x27;</span>,</span><br><span class="line">             <span class="string">&#x27;http://some.aweso.me/cookie/recipe_dark.html&#x27;</span>,</span><br><span class="line">             <span class="string">&#x27;CC02&#x27;</span>,</span><br><span class="line">             <span class="number">1</span>,</span><br><span class="line">             <span class="number">0.75</span>)</span><br><span class="line">session.add(cookiemon)</span><br><span class="line">session.add(cc)</span><br><span class="line">session.add(dcc)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">o1 = Order()</span><br><span class="line">o1.user = cookiemon</span><br><span class="line">session.add(o1)</span><br><span class="line"></span><br><span class="line">line1 = LineItem(order=o1, cookie=cc, quantity=<span class="number">9</span>, extended_cost=<span class="number">4.50</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">session.add(line1)</span><br><span class="line">session.commit()</span><br><span class="line">o2 = Order()</span><br><span class="line">o2.user = cookiemon</span><br><span class="line">session.add(o2)</span><br><span class="line"></span><br><span class="line">line1 = LineItem(order=o2, cookie=cc, quantity=<span class="number">2</span>, extended_cost=<span class="number">1.50</span>)</span><br><span class="line">line2 = LineItem(order=o2, cookie=dcc, quantity=<span class="number">9</span>, extended_cost=<span class="number">6.75</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">session.add(line1)</span><br><span class="line">session.add(line2)</span><br><span class="line">session.commit()</span><br></pre></td></tr></table></figure>
<h3 id="sql_orm_setup_test"><a class="markdownIt-Anchor" href="#sql_orm_setup_test"></a> sql_orm_setup_test</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> (Column, Integer, Numeric, String, DateTime, ForeignKey,</span><br><span class="line">                        Boolean, create_engine)</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.ext.declarative <span class="keyword">import</span> declarative_base</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> relationship, backref, sessionmaker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">conn_string = os.path.basename(__file__).replace(<span class="string">&#x27;.py&#x27;</span>, <span class="string">&#x27;.sqlite&#x27;</span>)</span><br><span class="line">Base = declarative_base()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cookie</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;cookies&#x27;</span></span><br><span class="line"></span><br><span class="line">    cookie_id = Column(Integer, primary_key=<span class="literal">True</span>)</span><br><span class="line">    cookie_name = Column(String(<span class="number">50</span>), index=<span class="literal">True</span>)</span><br><span class="line">    cookie_recipe_url = Column(String(<span class="number">255</span>))</span><br><span class="line">    cookie_sku = Column(String(<span class="number">55</span>))</span><br><span class="line">    quantity = Column(Integer())</span><br><span class="line">    unit_cost = Column(Numeric(<span class="number">12</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Cookie(cookie_name=&#x27;&#123;self.cookie_name&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;cookie_recipe_url=&#x27;&#123;self.cookie_recipe_url&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;cookie_sku=&#x27;&#123;self.cookie_sku&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;quantity=&#123;self.quantity&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;unit_cost=&#123;self.unit_cost&#125;)&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">User</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;users&#x27;</span></span><br><span class="line"></span><br><span class="line">    user_id = Column(Integer(), primary_key=<span class="literal">True</span>)</span><br><span class="line">    username = Column(String(<span class="number">15</span>), nullable=<span class="literal">False</span>, unique=<span class="literal">True</span>)</span><br><span class="line">    email_address = Column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    phone = Column(String(<span class="number">20</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    password = Column(String(<span class="number">25</span>), nullable=<span class="literal">False</span>)</span><br><span class="line">    created_on = Column(DateTime(), default=datetime.now)</span><br><span class="line">    updated_on = Column(DateTime(), default=datetime.now, onupdate=datetime.now)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User(username=&#x27;&#123;self.username&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;email_address=&#x27;&#123;self.email_address&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;phone=&#x27;&#123;self.phone&#125;&#x27;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;password=&#x27;&#123;self.password&#125;&#x27;)&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Order</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;orders&#x27;</span></span><br><span class="line">    order_id = Column(Integer(), primary_key=<span class="literal">True</span>)</span><br><span class="line">    user_id = Column(Integer(), ForeignKey(<span class="string">&#x27;users.user_id&#x27;</span>))</span><br><span class="line">    shipped = Column(Boolean(), default=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    user = relationship(<span class="string">&quot;User&quot;</span>, backref=backref(<span class="string">&#x27;orders&#x27;</span>, order_by=order_id))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Order(user_id=&#123;self.user_id&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;shipped=&#123;self.shipped&#125;)&quot;</span>.<span class="built_in">format</span>(<span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LineItem</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;line_items&#x27;</span></span><br><span class="line">    line_item_id = Column(Integer(), primary_key=<span class="literal">True</span>)</span><br><span class="line">    order_id = Column(Integer(), ForeignKey(<span class="string">&#x27;orders.order_id&#x27;</span>))</span><br><span class="line">    cookie_id = Column(Integer(), ForeignKey(<span class="string">&#x27;cookies.cookie_id&#x27;</span>))</span><br><span class="line">    quantity = Column(Integer())</span><br><span class="line">    extended_cost = Column(Numeric(<span class="number">12</span>, <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    order = relationship(<span class="string">&quot;Order&quot;</span>, backref=backref(<span class="string">&#x27;line_items&#x27;</span>,</span><br><span class="line">                                                  order_by=line_item_id))</span><br><span class="line">    cookie = relationship(<span class="string">&quot;Cookie&quot;</span>, uselist=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__repr__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;LineItems(order_id=&#123;self.order_id&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;cookie_id=&#123;self.cookie_id&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;quantity=&#123;self.quantity&#125;, &quot;</span> \</span><br><span class="line">            <span class="string">&quot;extended_cost=&#123;self.extended_cost&#125;)&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                <span class="variable language_">self</span>=<span class="variable language_">self</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DataAccessLayer</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.engine = <span class="literal">None</span></span><br><span class="line">        <span class="variable language_">self</span>.session = <span class="literal">None</span></span><br><span class="line">        <span class="variable language_">self</span>.conn_string = conn_string</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">connect</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.engine = create_engine(<span class="variable language_">self</span>.conn_string)</span><br><span class="line">        Base.metadata.create_all(<span class="variable language_">self</span>.engine)</span><br><span class="line">        <span class="variable language_">self</span>.Session = sessionmaker(bind=<span class="variable language_">self</span>.engine)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dal = DataAccessLayer()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">prep_db</span>(<span class="params">session</span>):</span><br><span class="line">    c1 = Cookie(cookie_name=<span class="string">&#x27;dark chocolate chip&#x27;</span>,</span><br><span class="line">                cookie_recipe_url=<span class="string">&#x27;http://some.aweso.me/cookie/dark_cc.html&#x27;</span>,</span><br><span class="line">                cookie_sku=<span class="string">&#x27;CC02&#x27;</span>,</span><br><span class="line">                quantity=<span class="number">1</span>,</span><br><span class="line">                unit_cost=<span class="number">0.75</span>)</span><br><span class="line">    c2 = Cookie(cookie_name=<span class="string">&#x27;peanut butter&#x27;</span>,</span><br><span class="line">                cookie_recipe_url=<span class="string">&#x27;http://some.aweso.me/cookie/peanut.html&#x27;</span>,</span><br><span class="line">                cookie_sku=<span class="string">&#x27;PB01&#x27;</span>,</span><br><span class="line">                quantity=<span class="number">24</span>,</span><br><span class="line">                unit_cost=<span class="number">0.25</span>)</span><br><span class="line">    c3 = Cookie(cookie_name=<span class="string">&#x27;oatmeal raisin&#x27;</span>,</span><br><span class="line">                cookie_recipe_url=<span class="string">&#x27;http://some.okay.me/cookie/raisin.html&#x27;</span>,</span><br><span class="line">                cookie_sku=<span class="string">&#x27;EWW01&#x27;</span>,</span><br><span class="line">                quantity=<span class="number">100</span>,</span><br><span class="line">                unit_cost=<span class="number">1.00</span>)</span><br><span class="line">    session.bulk_save_objects([c1, c2, c3])</span><br><span class="line">    session.commit()</span><br><span class="line"></span><br><span class="line">    cookiemon = User(username=<span class="string">&#x27;cookiemon&#x27;</span>,</span><br><span class="line">                     email_address=<span class="string">&#x27;mon@cookie.com&#x27;</span>,</span><br><span class="line">                     phone=<span class="string">&#x27;111-111-1111&#x27;</span>,</span><br><span class="line">                     password=<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">    cakeeater = User(username=<span class="string">&#x27;cakeeater&#x27;</span>,</span><br><span class="line">                     email_address=<span class="string">&#x27;cakeeater@cake.com&#x27;</span>,</span><br><span class="line">                     phone=<span class="string">&#x27;222-222-2222&#x27;</span>,</span><br><span class="line">                     password=<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">    pieperson = User(username=<span class="string">&#x27;pieperson&#x27;</span>,</span><br><span class="line">                     email_address=<span class="string">&#x27;person@pie.com&#x27;</span>,</span><br><span class="line">                     phone=<span class="string">&#x27;333-333-3333&#x27;</span>,</span><br><span class="line">                     password=<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">    session.add(cookiemon)</span><br><span class="line">    session.add(cakeeater)</span><br><span class="line">    session.add(pieperson)</span><br><span class="line">    session.commit()</span><br><span class="line"></span><br><span class="line">    o1 = Order()</span><br><span class="line">    o1.user = cookiemon</span><br><span class="line">    session.add(o1)</span><br><span class="line"></span><br><span class="line">    line1 = LineItem(cookie=c1, quantity=<span class="number">2</span>, extended_cost=<span class="number">1.00</span>)</span><br><span class="line"></span><br><span class="line">    line2 = LineItem(cookie=c3, quantity=<span class="number">12</span>, extended_cost=<span class="number">3.00</span>)</span><br><span class="line"></span><br><span class="line">    o1.line_items.append(line1)</span><br><span class="line">    o1.line_items.append(line2)</span><br><span class="line">    session.commit()</span><br><span class="line"></span><br><span class="line">    o2 = Order()</span><br><span class="line">    o2.user = cakeeater</span><br><span class="line"></span><br><span class="line">    line1 = LineItem(cookie=c1, quantity=<span class="number">24</span>, extended_cost=<span class="number">12.00</span>)</span><br><span class="line">    line2 = LineItem(cookie=c3, quantity=<span class="number">6</span>, extended_cost=<span class="number">6.00</span>)</span><br><span class="line"></span><br><span class="line">    o2.line_items.append(line1)</span><br><span class="line">    o2.line_items.append(line2)</span><br><span class="line"></span><br><span class="line">    session.add(o2)</span><br><span class="line">    session.commit()</span><br></pre></td></tr></table></figure>
<h2 id="data-operation-2"><a class="markdownIt-Anchor" href="#data-operation-2"></a> Data Operation</h2>
<h3 id="session"><a class="markdownIt-Anchor" href="#session"></a> Session</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> sessionmaker</span><br><span class="line"></span><br><span class="line">Session = sessionmaker(bind=engine)</span><br><span class="line"></span><br><span class="line">session = Session()</span><br></pre></td></tr></table></figure>
<h3 id="insert-2"><a class="markdownIt-Anchor" href="#insert-2"></a> Insert</h3>
<p>Inserting a single object:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cc_cookie = Cookie(cookie_name=<span class="string">&#x27;chocolate chip&#x27;</span>,</span><br><span class="line">                   cookie_recipe_url=<span class="string">&#x27;http://some.aweso.me/cookie/recipe.html&#x27;</span>,</span><br><span class="line">                   cookie_sku=<span class="string">&#x27;CC01&#x27;</span>,</span><br><span class="line">                   quantity=<span class="number">12</span>,</span><br><span class="line">                   unit_cost=<span class="number">0.50</span>)</span><br><span class="line">session.add(cc_cookie)</span><br><span class="line">session.commit()</span><br><span class="line"></span><br><span class="line">cc_cookie.cookie_id</span><br></pre></td></tr></table></figure>
<p>Multiple inserts:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dcc = Cookie(cookie_name=<span class="string">&#x27;dark chocolate chip&#x27;</span>,</span><br><span class="line">             cookie_recipe_url=<span class="string">&#x27;http://some.aweso.me/cookie/recipe_dark.html&#x27;</span>,</span><br><span class="line">             cookie_sku=<span class="string">&#x27;CC02&#x27;</span>,</span><br><span class="line">             quantity=<span class="number">1</span>,</span><br><span class="line">             unit_cost=<span class="number">0.75</span>)</span><br><span class="line">mol = Cookie(cookie_name=<span class="string">&#x27;molasses&#x27;</span>,</span><br><span class="line">             cookie_recipe_url=<span class="string">&#x27;http://some.aweso.me/cookie/recipe_molasses.html&#x27;</span>,</span><br><span class="line">             cookie_sku=<span class="string">&#x27;MOL01&#x27;</span>,</span><br><span class="line">             quantity=<span class="number">1</span>,</span><br><span class="line">             unit_cost=<span class="number">0.80</span>)</span><br><span class="line">session.add(dcc)</span><br><span class="line">session.add(mol)</span><br><span class="line">session.flush()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(dcc.cookie_id)</span><br><span class="line"><span class="built_in">print</span>(mol.cookie_id)</span><br></pre></td></tr></table></figure>
<p>Bulk inserting multiple records:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c1 = Cookie(cookie_name=<span class="string">&#x27;peanut butter&#x27;</span>,</span><br><span class="line">            cookie_recipe_url=<span class="string">&#x27;http://some.aweso.me/cookie/peanut.html&#x27;</span>,</span><br><span class="line">            cookie_sku=<span class="string">&#x27;PB01&#x27;</span>,</span><br><span class="line">            quantity=<span class="number">24</span>,</span><br><span class="line">            unit_cost=<span class="number">0.25</span>)</span><br><span class="line">c2 = Cookie(cookie_name=<span class="string">&#x27;oatmeal raisin&#x27;</span>,</span><br><span class="line">            cookie_recipe_url=<span class="string">&#x27;http://some.okay.me/cookie/raisin.html&#x27;</span>,</span><br><span class="line">            cookie_sku=<span class="string">&#x27;EWW01&#x27;</span>,</span><br><span class="line">            quantity=<span class="number">100</span>,</span><br><span class="line">            unit_cost=<span class="number">1.00</span>)</span><br><span class="line">session.bulk_save_objects([c1,c2])</span><br><span class="line">session.commit()</span><br><span class="line"><span class="comment"># If you are inserting multiple records and don’t need access to relationships or the inserted primary key, use bulk_save_objects or its related methods.</span></span><br><span class="line">c1.cookie_id</span><br></pre></td></tr></table></figure>
<h3 id="query"><a class="markdownIt-Anchor" href="#query"></a> Query</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cookies = session.query(Cookie).<span class="built_in">all</span>()</span><br><span class="line"><span class="built_in">print</span>(cookies)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cookie <span class="keyword">in</span> session.query(Cookie):</span><br><span class="line">    <span class="built_in">print</span>(cookie)</span><br></pre></td></tr></table></figure>
<p>Controlling the Columns in the Query:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(session.query(Cookie.cookie_name, Cookie.quantity).first())</span><br></pre></td></tr></table></figure>
<p>Ordering:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> cookie <span class="keyword">in</span> session.query(Cookie).order_by(Cookie.quantity):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;:3&#125; - &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(cookie.quantity, cookie.cookie_name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> desc</span><br><span class="line"><span class="keyword">for</span> cookie <span class="keyword">in</span> session.query(Cookie).order_by(desc(Cookie.quantity)):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;:3&#125; - &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(cookie.quantity, cookie.cookie_name))</span><br></pre></td></tr></table></figure>
<p>Limit:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">query = session.query(Cookie).order_by(Cookie.quantity)[:<span class="number">2</span>] <span class="comment"># inefficient</span></span><br><span class="line"><span class="built_in">print</span>([result.cookie_name <span class="keyword">for</span> result <span class="keyword">in</span> query])</span><br><span class="line"></span><br><span class="line">query = session.query(Cookie).order_by(Cookie.quantity).limit(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>([result.cookie_name <span class="keyword">for</span> result <span class="keyword">in</span> query])</span><br></pre></td></tr></table></figure>
<p>Built-In SQL Functions and Labels:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> func</span><br><span class="line">inv_count = session.query(func.<span class="built_in">sum</span>(Cookie.quantity)).scalar()</span><br><span class="line"><span class="built_in">print</span>(inv_count)</span><br><span class="line"></span><br><span class="line">rec_count = session.query(func.count(Cookie.cookie_name)).first()</span><br><span class="line"><span class="built_in">print</span>(rec_count)</span><br><span class="line"></span><br><span class="line">rec_count = session.query(func.count(Cookie.cookie_name) \</span><br><span class="line">                          .label(<span class="string">&#x27;inventory_count&#x27;</span>)).first()</span><br><span class="line"><span class="built_in">print</span>(rec_count.keys())</span><br><span class="line"><span class="built_in">print</span>(rec_count.inventory_count)</span><br></pre></td></tr></table></figure>
<p>Filter:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">record = session.query(Cookie).<span class="built_in">filter</span>(Cookie.cookie_name == <span class="string">&#x27;chocolate chip&#x27;</span>).first()</span><br><span class="line"><span class="built_in">print</span>(record)</span><br><span class="line"></span><br><span class="line">record = session.query(Cookie).filter_by(cookie_name=<span class="string">&#x27;chocolate chip&#x27;</span>).first()</span><br><span class="line"><span class="built_in">print</span>(record)</span><br><span class="line"></span><br><span class="line">query = session.query(Cookie).<span class="built_in">filter</span>(Cookie.cookie_name.like(<span class="string">&#x27;%chocolate%&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> record <span class="keyword">in</span> query:</span><br><span class="line">    <span class="built_in">print</span>(record.cookie_name)</span><br></pre></td></tr></table></figure>
<p>Operators:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">results = session.query(Cookie.cookie_name, <span class="string">&#x27;SKU-&#x27;</span> + Cookie.cookie_sku).<span class="built_in">all</span>()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> results:</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> cast</span><br><span class="line">query = session.query(Cookie.cookie_name,</span><br><span class="line">                      cast((Cookie.quantity * Cookie.unit_cost),</span><br><span class="line">                           Numeric(<span class="number">12</span>,<span class="number">2</span>)).label(<span class="string">&#x27;inv_cost&#x27;</span>))</span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> query:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; - &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(result.cookie_name, result.inv_cost))</span><br></pre></td></tr></table></figure>
<p>Boolean Operators:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> and_, or_, not_</span><br><span class="line">query = session.query(Cookie).<span class="built_in">filter</span>(</span><br><span class="line">    Cookie.quantity &gt; <span class="number">23</span>,</span><br><span class="line">    Cookie.unit_cost &lt; <span class="number">0.40</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> query:</span><br><span class="line">    <span class="built_in">print</span>(result.cookie_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> and_, or_, not_</span><br><span class="line">query = session.query(Cookie).<span class="built_in">filter</span>(</span><br><span class="line">    or_(</span><br><span class="line">        Cookie.quantity.between(<span class="number">10</span>, <span class="number">50</span>),</span><br><span class="line">        Cookie.cookie_name.contains(<span class="string">&#x27;chip&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">)</span><br><span class="line"><span class="keyword">for</span> result <span class="keyword">in</span> query:</span><br><span class="line">    <span class="built_in">print</span>(result.cookie_name)</span><br></pre></td></tr></table></figure>
<h3 id="update-2"><a class="markdownIt-Anchor" href="#update-2"></a> Update</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">query = session.query(Cookie)</span><br><span class="line">cc_cookie = query.<span class="built_in">filter</span>(Cookie.cookie_name == <span class="string">&quot;chocolate chip&quot;</span>).first()</span><br><span class="line">cc_cookie.quantity = cc_cookie.quantity + <span class="number">120</span></span><br><span class="line">session.commit()</span><br><span class="line"><span class="built_in">print</span>(cc_cookie.quantity)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">query = session.query(Cookie)</span><br><span class="line">query = query.<span class="built_in">filter</span>(Cookie.cookie_name == <span class="string">&quot;chocolate chip&quot;</span>)</span><br><span class="line">query.update(&#123;Cookie.quantity: Cookie.quantity - <span class="number">20</span>&#125;)</span><br><span class="line"></span><br><span class="line">cc_cookie = query.first()</span><br><span class="line"><span class="built_in">print</span>(cc_cookie.quantity)</span><br></pre></td></tr></table></figure>
<h3 id="delete-2"><a class="markdownIt-Anchor" href="#delete-2"></a> Delete</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">query = session.query(Cookie)</span><br><span class="line">query = query.<span class="built_in">filter</span>(Cookie.cookie_name == <span class="string">&quot;dark chocolate chip&quot;</span>)</span><br><span class="line">dcc_cookie = query.one()</span><br><span class="line">session.delete(dcc_cookie)</span><br><span class="line">session.commit()</span><br><span class="line">dcc_cookie = query.first()</span><br><span class="line"><span class="built_in">print</span>(dcc_cookie)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">query = session.query(Cookie)</span><br><span class="line">query = query.<span class="built_in">filter</span>(Cookie.cookie_name == <span class="string">&quot;molasses&quot;</span>)</span><br><span class="line">query.delete()</span><br><span class="line">mol_cookie = query.first()</span><br><span class="line"><span class="built_in">print</span>(mol_cookie)</span><br></pre></td></tr></table></figure>
<h3 id="add-related-objects"><a class="markdownIt-Anchor" href="#add-related-objects"></a> Add related objects</h3>
<p>setup:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cookiemon = User(username=<span class="string">&#x27;cookiemon&#x27;</span>,</span><br><span class="line">                 email_address=<span class="string">&#x27;mon@cookie.com&#x27;</span>,</span><br><span class="line">                 phone=<span class="string">&#x27;111-111-1111&#x27;</span>,</span><br><span class="line">                 password=<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">cakeeater = User(username=<span class="string">&#x27;cakeeater&#x27;</span>,</span><br><span class="line">                 email_address=<span class="string">&#x27;cakeeater@cake.com&#x27;</span>,</span><br><span class="line">                 phone=<span class="string">&#x27;222-222-2222&#x27;</span>,</span><br><span class="line">                 password=<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">pieperson = User(username=<span class="string">&#x27;pieperson&#x27;</span>,</span><br><span class="line">                 email_address=<span class="string">&#x27;person@pie.com&#x27;</span>,</span><br><span class="line">                 phone=<span class="string">&#x27;333-333-3333&#x27;</span>,</span><br><span class="line">                 password=<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">session.add(cookiemon)</span><br><span class="line">session.add(cakeeater)</span><br><span class="line">session.add(pieperson)</span><br><span class="line">session.commit()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">o1 = Order()</span><br><span class="line">o1.user = cookiemon</span><br><span class="line">session.add(o1)</span><br><span class="line"></span><br><span class="line">cc = session.query(Cookie).<span class="built_in">filter</span>(Cookie.cookie_name ==<span class="string">&quot;chocolate chip&quot;</span>).one()</span><br><span class="line">line1 = LineItem(cookie=cc, quantity=<span class="number">2</span>, extended_cost=<span class="number">1.00</span>)</span><br><span class="line"></span><br><span class="line">pb = session.query(Cookie).<span class="built_in">filter</span>(Cookie.cookie_name ==<span class="string">&quot;peanut butter&quot;</span>).one()</span><br><span class="line">line2 = LineItem(quantity=<span class="number">12</span>, extended_cost=<span class="number">3.00</span>)</span><br><span class="line">line2.cookie = pb</span><br><span class="line">line2.order = o1</span><br><span class="line"></span><br><span class="line">o1.line_items.append(line1)</span><br><span class="line">o1.line_items.append(line2)</span><br><span class="line">session.commit()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">o2 = Order()</span><br><span class="line">o2.user = cakeeater</span><br><span class="line"></span><br><span class="line">cc = session.query(Cookie).<span class="built_in">filter</span>(Cookie.cookie_name == <span class="string">&quot;chocolate chip&quot;</span>).one()</span><br><span class="line">line1 = LineItem(cookie=cc, quantity=<span class="number">24</span>, extended_cost=<span class="number">12.00</span>)</span><br><span class="line"></span><br><span class="line">oat = session.query(Cookie).<span class="built_in">filter</span>(Cookie.cookie_name == <span class="string">&quot;oatmeal raisin&quot;</span>).one()</span><br><span class="line">line2 = LineItem(cookie=oat, quantity=<span class="number">6</span>, extended_cost=<span class="number">6.00</span>)</span><br><span class="line"></span><br><span class="line">o2.line_items.append(line1)</span><br><span class="line">o2.line_items.append(line2)</span><br><span class="line"></span><br><span class="line">session.add(o2)</span><br><span class="line">session.commit()</span><br></pre></td></tr></table></figure>
<h3 id="joins"><a class="markdownIt-Anchor" href="#joins"></a> Joins</h3>
<p>Using join to select from multiple tables:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">query = session.query(Order.order_id, User.username, User.phone, Cookie.cookie_name, LineItem.quantity, LineItem.extended_cost)</span><br><span class="line">query = query.join(User).join(LineItem).join(Cookie)</span><br><span class="line">results = query.<span class="built_in">filter</span>(User.username == <span class="string">&#x27;cookiemon&#x27;</span>).<span class="built_in">all</span>()</span><br><span class="line"><span class="built_in">print</span>(results)</span><br></pre></td></tr></table></figure>
<p>Using outerjoin to select from multiple tables:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">query = session.query(User.username, func.count(Order.order_id))</span><br><span class="line">query = query.outerjoin(Order).group_by(User.username)</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> query:</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Employee</span>(<span class="title class_ inherited__">Base</span>):</span><br><span class="line">    __tablename__ = <span class="string">&#x27;employees&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">id</span> = Column(Integer(), primary_key=<span class="literal">True</span>)</span><br><span class="line">    manager_id = Column(Integer(), ForeignKey(<span class="string">&#x27;employees.id&#x27;</span>))</span><br><span class="line">    name = Column(String(<span class="number">255</span>), nullable=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">    manager = relationship(<span class="string">&quot;Employee&quot;</span>, backref=backref(<span class="string">&#x27;reports&#x27;</span>), remote_side=[<span class="built_in">id</span>])</span><br><span class="line"></span><br><span class="line">Base.metadata.create_all(engine)</span><br><span class="line"></span><br><span class="line">marsha = Employee(name=<span class="string">&#x27;Marsha&#x27;</span>)</span><br><span class="line">fred = Employee(name=<span class="string">&#x27;Fred&#x27;</span>)</span><br><span class="line">marsha.reports.append(fred)</span><br><span class="line">session.add(marsha)</span><br><span class="line">session.commit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> report <span class="keyword">in</span> marsha.reports:</span><br><span class="line">    <span class="built_in">print</span>(report.name)</span><br></pre></td></tr></table></figure>
<h3 id="group"><a class="markdownIt-Anchor" href="#group"></a> Group</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">query = session.query(User.username, func.count(Order.order_id))</span><br><span class="line">query = query.outerjoin(Order).group_by(User.username)</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> query:</span><br><span class="line">    <span class="built_in">print</span>(row)</span><br></pre></td></tr></table></figure>
<h3 id="chain"><a class="markdownIt-Anchor" href="#chain"></a> Chain</h3>
<p>Chaining:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_orders_by_customer</span>(<span class="params">cust_name</span>):</span><br><span class="line">    query = session.query(Order.order_id, User.username, User.phone, Cookie.cookie_name, LineItem.quantity,LineItem.extended_cost)</span><br><span class="line">    query = query.join(User).join(LineItem).join(Cookie)</span><br><span class="line">    results = query.<span class="built_in">filter</span>(User.username == cust_name).<span class="built_in">all</span>()</span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line">get_orders_by_customer(<span class="string">&#x27;cakeeater&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>Conditional chaining:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_orders_by_customer</span>(<span class="params">cust_name, shipped=<span class="literal">None</span>, details=<span class="literal">False</span></span>):</span><br><span class="line">    query = session.query(Order.order_id, User.username, User.phone)</span><br><span class="line">    query = query.join(User)</span><br><span class="line">    <span class="keyword">if</span> details:</span><br><span class="line">        query = query.add_columns(Cookie.cookie_name, LineItem.quantity,</span><br><span class="line">                          LineItem.extended_cost)</span><br><span class="line">        query = query.join(LineItem).join(Cookie)</span><br><span class="line">    <span class="keyword">if</span> shipped <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        query = query.<span class="built_in">filter</span>(Order.shipped == shipped)</span><br><span class="line">    results = query.<span class="built_in">filter</span>(User.username == cust_name).<span class="built_in">all</span>()</span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(get_orders_by_customer(<span class="string">&#x27;cakeeater&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(get_orders_by_customer(<span class="string">&#x27;cakeeater&#x27;</span>, details=<span class="literal">True</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(get_orders_by_customer(<span class="string">&#x27;cakeeater&#x27;</span>, shipped=<span class="literal">True</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(get_orders_by_customer(<span class="string">&#x27;cakeeater&#x27;</span>, shipped=<span class="literal">False</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(get_orders_by_customer(<span class="string">&#x27;cakeeater&#x27;</span>, shipped=<span class="literal">False</span>, details=<span class="literal">True</span>))</span><br></pre></td></tr></table></figure>
<h3 id="raw-queries-2"><a class="markdownIt-Anchor" href="#raw-queries-2"></a> Raw Queries</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> text</span><br><span class="line">query = session.query(User).<span class="built_in">filter</span>(text(<span class="string">&quot;username=&#x27;cookiemon&#x27;&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(query.<span class="built_in">all</span>())</span><br></pre></td></tr></table></figure>
<h2 id="session-and-exceptions"><a class="markdownIt-Anchor" href="#session-and-exceptions"></a> Session and Exceptions</h2>
<p><code>from sql_orm_setup import *</code></p>
<h3 id="session-states"><a class="markdownIt-Anchor" href="#session-states"></a> Session States</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">cc_cookie = Cookie(</span><br><span class="line">    cookie_name=<span class="string">&#x27;chocolate chip&#x27;</span>, cookie_recipe_url=<span class="string">&#x27;http://some.aweso.me/cookie/recipe.html&#x27;</span>, cookie_sku=<span class="string">&#x27;CC01&#x27;</span>, quantity=<span class="number">12</span>, unit_cost=<span class="number">0.50</span>)</span><br></pre></td></tr></table></figure>
<p>transient:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> inspect</span><br><span class="line">insp = inspect(cc_cookie)</span><br><span class="line"><span class="keyword">for</span> state <span class="keyword">in</span> [<span class="string">&#x27;transient&#x27;</span>, <span class="string">&#x27;pending&#x27;</span>, <span class="string">&#x27;persistent&#x27;</span>, <span class="string">&#x27;detached&#x27;</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;:&gt;10&#125;: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(state, <span class="built_in">getattr</span>(insp, state)))</span><br></pre></td></tr></table></figure>
<p>pending:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">session.add(cc_cookie)</span><br><span class="line"><span class="keyword">for</span> state <span class="keyword">in</span> [<span class="string">&#x27;transient&#x27;</span>,<span class="string">&#x27;pending&#x27;</span>,<span class="string">&#x27;persistent&#x27;</span>,<span class="string">&#x27;detached&#x27;</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;:&gt;10&#125;: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(state, <span class="built_in">getattr</span>(insp, state)))</span><br></pre></td></tr></table></figure>
<p>persistent:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">session.commit()</span><br><span class="line"><span class="keyword">for</span> state <span class="keyword">in</span> [<span class="string">&#x27;transient&#x27;</span>,<span class="string">&#x27;pending&#x27;</span>,<span class="string">&#x27;persistent&#x27;</span>,<span class="string">&#x27;detached&#x27;</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;:&gt;10&#125;: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(state, <span class="built_in">getattr</span>(insp, state)))</span><br></pre></td></tr></table></figure>
<p>detached:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">session.expunge(cc_cookie)</span><br><span class="line"><span class="keyword">for</span> state <span class="keyword">in</span> [<span class="string">&#x27;transient&#x27;</span>,<span class="string">&#x27;pending&#x27;</span>,<span class="string">&#x27;persistent&#x27;</span>,<span class="string">&#x27;detached&#x27;</span>]:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;:&gt;10&#125;: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(state, <span class="built_in">getattr</span>(insp, state)))</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">session.add(cc_cookie)</span><br><span class="line">cc_cookie.cookie_name = <span class="string">&#x27;Change chocolate chip&#x27;</span></span><br><span class="line"></span><br><span class="line">insp.modified</span><br><span class="line"><span class="keyword">for</span> attr, attr_state <span class="keyword">in</span> insp.attrs.items():</span><br><span class="line">    <span class="keyword">if</span> attr_state.history.has_changes():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;: &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(attr, attr_state.value))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;History: &#123;&#125;\n&#x27;</span>.<span class="built_in">format</span>(attr_state.history))</span><br></pre></td></tr></table></figure>
<h3 id="multipleresultsfound-exception"><a class="markdownIt-Anchor" href="#multipleresultsfound-exception"></a> MultipleResultsFound Exception</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">dcc = Cookie(<span class="string">&#x27;dark chocolate chip&#x27;</span>,</span><br><span class="line">             <span class="string">&#x27;http://some.aweso.me/cookie/recipe_dark.html&#x27;</span>,</span><br><span class="line">             <span class="string">&#x27;CC02&#x27;</span>, <span class="number">1</span>, <span class="number">0.75</span>)</span><br><span class="line">session.add(dcc)</span><br><span class="line">session.commit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm.exc <span class="keyword">import</span> MultipleResultsFound</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    results = session.query(Cookie).one()</span><br><span class="line"><span class="keyword">except</span> MultipleResultsFound <span class="keyword">as</span> exc:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;We found too many cookies... is that even possible?&#x27;</span>)</span><br><span class="line"></span><br><span class="line">session.query(Cookie).<span class="built_in">all</span>()</span><br></pre></td></tr></table></figure>
<h3 id="detachedinstanceerror"><a class="markdownIt-Anchor" href="#detachedinstanceerror"></a> DetachedInstanceError</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cookiemon = User(<span class="string">&#x27;cookiemon&#x27;</span>, <span class="string">&#x27;mon@cookie.com&#x27;</span>, <span class="string">&#x27;111-111-1111&#x27;</span>, <span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">session.add(cookiemon)</span><br><span class="line">o1 = Order()</span><br><span class="line">o1.user = cookiemon</span><br><span class="line">session.add(o1)</span><br><span class="line"></span><br><span class="line">cc = session.query(Cookie).<span class="built_in">filter</span>(Cookie.cookie_name ==</span><br><span class="line">                                  <span class="string">&quot;Change chocolate chip&quot;</span>).one()</span><br><span class="line">line1 = LineItem(order=o1, cookie=cc, quantity=<span class="number">2</span>, extended_cost=<span class="number">1.00</span>)</span><br><span class="line"></span><br><span class="line">session.add(line1)</span><br><span class="line">session.commit()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">order = session.query(Order).first()</span><br><span class="line">session.expunge(order)</span><br><span class="line">order.line_items.<span class="built_in">all</span>()</span><br></pre></td></tr></table></figure>
<h3 id="transactions"><a class="markdownIt-Anchor" href="#transactions"></a> Transactions</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sql_orm_setup_cons <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure>
<p>Defining the ship_it function:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">ship_it</span>(<span class="params">order_id</span>):</span><br><span class="line">    order = session.query(Order).get(order_id)</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> order.line_items:</span><br><span class="line">        li.cookie.quantity = li.cookie.quantity - li.quantity</span><br><span class="line">        session.add(li.cookie)</span><br><span class="line">    order.shipped = <span class="literal">True</span></span><br><span class="line">    session.add(order)</span><br><span class="line">    session.commit()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;shipped order ID: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(order_id))</span><br><span class="line"></span><br><span class="line">ship_it(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(session.query(Cookie.cookie_name, Cookie.quantity).<span class="built_in">all</span>())</span><br><span class="line"></span><br><span class="line">ship_it(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(session.query(Cookie.cookie_name, Cookie.quantity).<span class="built_in">all</span>())</span><br><span class="line">session.rollback()</span><br><span class="line"><span class="built_in">print</span>(session.query(Cookie.cookie_name, Cookie.quantity).<span class="built_in">all</span>())</span><br></pre></td></tr></table></figure>
<p>Transactional ship_it:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy.exc <span class="keyword">import</span> IntegrityError</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ship_it</span>(<span class="params">order_id</span>):</span><br><span class="line">    order = session.query(Order).get(order_id)</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> order.line_items:</span><br><span class="line">        li.cookie.quantity = li.cookie.quantity - li.quantity</span><br><span class="line">        session.add(li.cookie)</span><br><span class="line">    order.shipped = <span class="literal">True</span></span><br><span class="line">    session.add(order)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        session.commit()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;shipped order ID: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(order_id))</span><br><span class="line">    <span class="keyword">except</span> IntegrityError <span class="keyword">as</span> error:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;ERROR: &#123;!s&#125;&#x27;</span>.<span class="built_in">format</span>(error.orig))</span><br><span class="line">        session.rollback()</span><br><span class="line"></span><br><span class="line">ship_it(<span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<h2 id="testing-with-sqlalchemy-orm"><a class="markdownIt-Anchor" href="#testing-with-sqlalchemy-orm"></a> Testing with SQLAlchemy ORM</h2>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sql_orm_setup_test <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure>
<h3 id="testing-with-a-test-database"><a class="markdownIt-Anchor" href="#testing-with-a-test-database"></a> Testing with a Test Database</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> db <span class="keyword">import</span> Cookie, LineItem, Order, User,  dal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_orders_by_customer</span>(<span class="params">cust_name, shipped=<span class="literal">None</span>, details=<span class="literal">False</span></span>):</span><br><span class="line">    query = dal.session.query(Order.order_id, User.username, User.phone)</span><br><span class="line">    query = query.join(User)</span><br><span class="line">    <span class="keyword">if</span> details:</span><br><span class="line">        query = query.add_columns(Cookie.cookie_name, LineItem.quantity,</span><br><span class="line">                                  LineItem.extended_cost)</span><br><span class="line">        query = query.join(LineItem).join(Cookie)</span><br><span class="line">    <span class="keyword">if</span> shipped <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        query = query.<span class="built_in">filter</span>(Order.shipped == shipped)</span><br><span class="line">    results = query.<span class="built_in">filter</span>(User.username == cust_name).<span class="built_in">all</span>()</span><br><span class="line">    <span class="keyword">return</span> results</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> db <span class="keyword">import</span> prep_db, dal</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> get_orders_by_customer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestApp</span>(unittest.TestCase):</span><br><span class="line">    cookie_orders = [(<span class="number">1</span>, <span class="string">u&#x27;cookiemon&#x27;</span>, <span class="string">u&#x27;111-111-1111&#x27;</span>)]</span><br><span class="line">    cookie_details = [</span><br><span class="line">        (<span class="number">1</span>, <span class="string">u&#x27;cookiemon&#x27;</span>, <span class="string">u&#x27;111-111-1111&#x27;</span>,</span><br><span class="line">            <span class="string">u&#x27;dark chocolate chip&#x27;</span>, <span class="number">2</span>, Decimal(<span class="string">&#x27;1.00&#x27;</span>)),</span><br><span class="line">        (<span class="number">1</span>, <span class="string">u&#x27;cookiemon&#x27;</span>, <span class="string">u&#x27;111-111-1111&#x27;</span>,</span><br><span class="line">            <span class="string">u&#x27;oatmeal raisin&#x27;</span>, <span class="number">12</span>, Decimal(<span class="string">&#x27;3.00&#x27;</span>))]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setUpClass</span>(<span class="params">cls</span>):</span><br><span class="line">        dal.conn_string = <span class="string">&#x27;sqlite:///:memory:&#x27;</span></span><br><span class="line">        dal.connect()</span><br><span class="line">        dal.session = dal.Session()</span><br><span class="line">        prep_db(dal.session)</span><br><span class="line">        dal.session.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setUp</span>(<span class="params">self</span>):</span><br><span class="line">        dal.session = dal.Session()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">tearDown</span>(<span class="params">self</span>):</span><br><span class="line">        dal.session.rollback()</span><br><span class="line">        dal.session.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_blank</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_blank_shipped</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;&#x27;</span>, <span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_blank_notshipped</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;&#x27;</span>, <span class="literal">False</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_blank_details</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;&#x27;</span>, details=<span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_blank_shipped_details</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;&#x27;</span>, <span class="literal">True</span>, <span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_blank_notshipped_details</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;&#x27;</span>, <span class="literal">False</span>, <span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_bad_cust</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;bad name&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_bad_cust_shipped</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;bad name&#x27;</span>, <span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_bad_cust_notshipped</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;bad name&#x27;</span>, <span class="literal">False</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_bad_cust_details</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;bad name&#x27;</span>, details=<span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_bad_cust_shipped_details</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;bad name&#x27;</span>, <span class="literal">True</span>, <span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_bad_cust_notshipped_details</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;bad name&#x27;</span>, <span class="literal">False</span>, <span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;cookiemon&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, <span class="variable language_">self</span>.cookie_orders)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_shipped_only</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;cookiemon&#x27;</span>, <span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_unshipped_only</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;cookiemon&#x27;</span>, <span class="literal">False</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, <span class="variable language_">self</span>.cookie_orders)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_with_details</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;cookiemon&#x27;</span>, details=<span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, <span class="variable language_">self</span>.cookie_details)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_shipped_only_with_details</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;cookiemon&#x27;</span>, <span class="literal">True</span>, <span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_unshipped_only_details</span>(<span class="params">self</span>):</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;cookiemon&#x27;</span>, <span class="literal">False</span>, <span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, <span class="variable language_">self</span>.cookie_details)</span><br></pre></td></tr></table></figure>
<h3 id="using-mocks"><a class="markdownIt-Anchor" href="#using-mocks"></a> Using Mocks</h3>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> mock</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> app <span class="keyword">import</span> get_orders_by_customer</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TestApp</span>(unittest.TestCase):</span><br><span class="line">    cookie_orders = [(<span class="number">1</span>, <span class="string">u&#x27;cookiemon&#x27;</span>, <span class="string">u&#x27;111-111-1111&#x27;</span>)]</span><br><span class="line">    cookie_details = [</span><br><span class="line">        (<span class="number">1</span>, <span class="string">u&#x27;cookiemon&#x27;</span>, <span class="string">u&#x27;111-111-1111&#x27;</span>,</span><br><span class="line">            <span class="string">u&#x27;dark chocolate chip&#x27;</span>, <span class="number">2</span>, Decimal(<span class="string">&#x27;1.00&#x27;</span>)),</span><br><span class="line">        (<span class="number">1</span>, <span class="string">u&#x27;cookiemon&#x27;</span>, <span class="string">u&#x27;111-111-1111&#x27;</span>,</span><br><span class="line">            <span class="string">u&#x27;oatmeal raisin&#x27;</span>, <span class="number">12</span>, Decimal(<span class="string">&#x27;3.00&#x27;</span>))]</span><br><span class="line"></span><br><span class="line"><span class="meta">    @mock.patch(<span class="params"><span class="string">&#x27;app.dal.session&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_blank</span>(<span class="params">self, mock_dal</span>):</span><br><span class="line">        mock_dal.query.return_value.join.return_value.<span class="built_in">filter</span>.return_value. \</span><br><span class="line">            <span class="built_in">all</span>.return_value = []</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line"><span class="meta">    @mock.patch(<span class="params"><span class="string">&#x27;app.dal.session&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer_blank_shipped</span>(<span class="params">self, mock_dal</span>):</span><br><span class="line">        mock_dal.query.return_value.join.return_value.<span class="built_in">filter</span>.return_value. \</span><br><span class="line">            <span class="built_in">filter</span>.return_value.<span class="built_in">all</span>.return_value = []</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;&#x27;</span>, <span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, [])</span><br><span class="line"></span><br><span class="line"><span class="meta">    @mock.patch(<span class="params"><span class="string">&#x27;app.dal.session&#x27;</span></span>)</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test_orders_by_customer</span>(<span class="params">self, mock_dal</span>):</span><br><span class="line">        mock_dal.query.return_value.join.return_value.<span class="built_in">filter</span>.return_value. \</span><br><span class="line">            <span class="built_in">all</span>.return_value = <span class="variable language_">self</span>.cookie_orders</span><br><span class="line">        results = get_orders_by_customer(<span class="string">&#x27;cookiemon&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.assertEqual(results, <span class="variable language_">self</span>.cookie_orders)</span><br></pre></td></tr></table></figure>
<h2 id="reflection-with-sqlalchemy-orm-and-automap"><a class="markdownIt-Anchor" href="#reflection-with-sqlalchemy-orm-and-automap"></a> Reflection with SQLAlchemy ORM and Automap</h2>
<h3 id="reflecting-a-database-with-automap"><a class="markdownIt-Anchor" href="#reflecting-a-database-with-automap"></a> Reflecting a Database with Automap</h3>
<p>setup:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sqlalchemy.ext.automap <span class="keyword">import</span> automap_base</span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Session</span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"></span><br><span class="line">Base = automap_base()</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy <span class="keyword">import</span> create_engine</span><br><span class="line"></span><br><span class="line">engine = create_engine(<span class="string">&#x27;sqlite:///Chinook_Sqlite.sqlite&#x27;</span>)</span><br><span class="line"></span><br><span class="line">Base.prepare(engine, reflect=<span class="literal">True</span>)</span><br><span class="line">Base.classes.keys()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Artist = Base.classes.Artist</span><br><span class="line">Album = Base.classes.Album</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sqlalchemy.orm <span class="keyword">import</span> Session</span><br><span class="line"></span><br><span class="line">session = Session(engine)</span><br><span class="line"><span class="keyword">for</span> artist <span class="keyword">in</span> session.query(Artist).limit(<span class="number">10</span>):</span><br><span class="line">    <span class="built_in">print</span>(artist.ArtistId, artist.Name)</span><br><span class="line"></span><br><span class="line">artist = session.query(Artist).first()</span><br><span class="line"><span class="keyword">for</span> album <span class="keyword">in</span> artist.album_collection:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125; - &#123;&#125;&#x27;</span>.<span class="built_in">format</span>(artist.Name, album.Title))</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
</search>
